// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package lnrpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
//`AddressType` has to be one of:
//
//- `p2wkh`: Pay to witness key hash (`WITNESS_PUBKEY_HASH` = 0)
//- `np2wkh`: Pay to nested witness key hash (`NESTED_PUBKEY_HASH` = 1)
type AddressType int32

const (
	AddressType_WITNESS_PUBKEY_HASH        AddressType = 0
	AddressType_NESTED_PUBKEY_HASH         AddressType = 1
	AddressType_UNUSED_WITNESS_PUBKEY_HASH AddressType = 2
	AddressType_UNUSED_NESTED_PUBKEY_HASH  AddressType = 3
)

var AddressType_name = map[int32]string{
	0: "WITNESS_PUBKEY_HASH",
	1: "NESTED_PUBKEY_HASH",
	2: "UNUSED_WITNESS_PUBKEY_HASH",
	3: "UNUSED_NESTED_PUBKEY_HASH",
}

var AddressType_value = map[string]int32{
	"WITNESS_PUBKEY_HASH":        0,
	"NESTED_PUBKEY_HASH":         1,
	"UNUSED_WITNESS_PUBKEY_HASH": 2,
	"UNUSED_NESTED_PUBKEY_HASH":  3,
}

func (x AddressType) String() string {
	return proto.EnumName(AddressType_name, int32(x))
}

func (AddressType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

type CommitmentType int32

const (
	//
	//A channel using the legacy commitment format having tweaked to_remote
	//keys.
	CommitmentType_LEGACY CommitmentType = 0
	//
	//A channel that uses the modern commitment format where the key in the
	//output of the remote party does not change each state. This makes back
	//up and recovery easier as when the channel is closed, the funds go
	//directly to that key.
	CommitmentType_STATIC_REMOTE_KEY CommitmentType = 1
	//
	//A channel that uses a commitment format that has anchor outputs on the
	//commitments, allowing fee bumping after a force close transaction has
	//been broadcast.
	CommitmentType_ANCHORS CommitmentType = 2
	//
	//Returned when the commitment type isn't known or unavailable.
	CommitmentType_UNKNOWN_COMMITMENT_TYPE CommitmentType = 999
)

var CommitmentType_name = map[int32]string{
	0:   "LEGACY",
	1:   "STATIC_REMOTE_KEY",
	2:   "ANCHORS",
	999: "UNKNOWN_COMMITMENT_TYPE",
}

var CommitmentType_value = map[string]int32{
	"LEGACY":                  0,
	"STATIC_REMOTE_KEY":       1,
	"ANCHORS":                 2,
	"UNKNOWN_COMMITMENT_TYPE": 999,
}

func (x CommitmentType) String() string {
	return proto.EnumName(CommitmentType_name, int32(x))
}

func (CommitmentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

type Initiator int32

const (
	Initiator_INITIATOR_UNKNOWN Initiator = 0
	Initiator_INITIATOR_LOCAL   Initiator = 1
	Initiator_INITIATOR_REMOTE  Initiator = 2
	Initiator_INITIATOR_BOTH    Initiator = 3
)

var Initiator_name = map[int32]string{
	0: "INITIATOR_UNKNOWN",
	1: "INITIATOR_LOCAL",
	2: "INITIATOR_REMOTE",
	3: "INITIATOR_BOTH",
}

var Initiator_value = map[string]int32{
	"INITIATOR_UNKNOWN": 0,
	"INITIATOR_LOCAL":   1,
	"INITIATOR_REMOTE":  2,
	"INITIATOR_BOTH":    3,
}

func (x Initiator) String() string {
	return proto.EnumName(Initiator_name, int32(x))
}

func (Initiator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

type ResolutionType int32

const (
	ResolutionType_TYPE_UNKNOWN ResolutionType = 0
	// We resolved an anchor output.
	ResolutionType_ANCHOR ResolutionType = 1
	//
	//We are resolving an incoming htlc on chain. This if this htlc is
	//claimed, we swept the incoming htlc with the preimage. If it is timed
	//out, our peer swept the timeout path.
	ResolutionType_INCOMING_HTLC ResolutionType = 2
	//
	//We are resolving an outgoing htlc on chain. If this htlc is claimed,
	//the remote party swept the htlc with the preimage. If it is timed out,
	//we swept it with the timeout path.
	ResolutionType_OUTGOING_HTLC ResolutionType = 3
	// We force closed and need to sweep our time locked commitment output.
	ResolutionType_COMMIT ResolutionType = 4
)

var ResolutionType_name = map[int32]string{
	0: "TYPE_UNKNOWN",
	1: "ANCHOR",
	2: "INCOMING_HTLC",
	3: "OUTGOING_HTLC",
	4: "COMMIT",
}

var ResolutionType_value = map[string]int32{
	"TYPE_UNKNOWN":  0,
	"ANCHOR":        1,
	"INCOMING_HTLC": 2,
	"OUTGOING_HTLC": 3,
	"COMMIT":        4,
}

func (x ResolutionType) String() string {
	return proto.EnumName(ResolutionType_name, int32(x))
}

func (ResolutionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

type ResolutionOutcome int32

const (
	// Outcome unknown.
	ResolutionOutcome_OUTCOME_UNKNOWN ResolutionOutcome = 0
	// An output was claimed on chain.
	ResolutionOutcome_CLAIMED ResolutionOutcome = 1
	// An output was left unclaimed on chain.
	ResolutionOutcome_UNCLAIMED ResolutionOutcome = 2
	//
	//ResolverOutcomeAbandoned indicates that an output that we did not
	//claim on chain, for example an anchor that we did not sweep and a
	//third party claimed on chain, or a htlc that we could not decode
	//so left unclaimed.
	ResolutionOutcome_ABANDONED ResolutionOutcome = 3
	//
	//If we force closed our channel, our htlcs need to be claimed in two
	//stages. This outcome represents the broadcast of a timeout or success
	//transaction for this two stage htlc claim.
	ResolutionOutcome_FIRST_STAGE ResolutionOutcome = 4
	// A htlc was timed out on chain.
	ResolutionOutcome_TIMEOUT ResolutionOutcome = 5
)

var ResolutionOutcome_name = map[int32]string{
	0: "OUTCOME_UNKNOWN",
	1: "CLAIMED",
	2: "UNCLAIMED",
	3: "ABANDONED",
	4: "FIRST_STAGE",
	5: "TIMEOUT",
}

var ResolutionOutcome_value = map[string]int32{
	"OUTCOME_UNKNOWN": 0,
	"CLAIMED":         1,
	"UNCLAIMED":       2,
	"ABANDONED":       3,
	"FIRST_STAGE":     4,
	"TIMEOUT":         5,
}

func (x ResolutionOutcome) String() string {
	return proto.EnumName(ResolutionOutcome_name, int32(x))
}

func (ResolutionOutcome) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

type NodeMetricType int32

const (
	NodeMetricType_UNKNOWN                NodeMetricType = 0
	NodeMetricType_BETWEENNESS_CENTRALITY NodeMetricType = 1
)

var NodeMetricType_name = map[int32]string{
	0: "UNKNOWN",
	1: "BETWEENNESS_CENTRALITY",
}

var NodeMetricType_value = map[string]int32{
	"UNKNOWN":                0,
	"BETWEENNESS_CENTRALITY": 1,
}

func (x NodeMetricType) String() string {
	return proto.EnumName(NodeMetricType_name, int32(x))
}

func (NodeMetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

type InvoiceHTLCState int32

const (
	InvoiceHTLCState_ACCEPTED InvoiceHTLCState = 0
	InvoiceHTLCState_SETTLED  InvoiceHTLCState = 1
	InvoiceHTLCState_CANCELED InvoiceHTLCState = 2
)

var InvoiceHTLCState_name = map[int32]string{
	0: "ACCEPTED",
	1: "SETTLED",
	2: "CANCELED",
}

var InvoiceHTLCState_value = map[string]int32{
	"ACCEPTED": 0,
	"SETTLED":  1,
	"CANCELED": 2,
}

func (x InvoiceHTLCState) String() string {
	return proto.EnumName(InvoiceHTLCState_name, int32(x))
}

func (InvoiceHTLCState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

type PaymentFailureReason int32

const (
	//
	//Payment isn't failed (yet).
	PaymentFailureReason_FAILURE_REASON_NONE PaymentFailureReason = 0
	//
	//There are more routes to try, but the payment timeout was exceeded.
	PaymentFailureReason_FAILURE_REASON_TIMEOUT PaymentFailureReason = 1
	//
	//All possible routes were tried and failed permanently. Or were no
	//routes to the destination at all.
	PaymentFailureReason_FAILURE_REASON_NO_ROUTE PaymentFailureReason = 2
	//
	//A non-recoverable error has occured.
	PaymentFailureReason_FAILURE_REASON_ERROR PaymentFailureReason = 3
	//
	//Payment details incorrect (unknown hash, invalid amt or
	//invalid final cltv delta)
	PaymentFailureReason_FAILURE_REASON_INCORRECT_PAYMENT_DETAILS PaymentFailureReason = 4
	//
	//Insufficient local balance.
	PaymentFailureReason_FAILURE_REASON_INSUFFICIENT_BALANCE PaymentFailureReason = 5
)

var PaymentFailureReason_name = map[int32]string{
	0: "FAILURE_REASON_NONE",
	1: "FAILURE_REASON_TIMEOUT",
	2: "FAILURE_REASON_NO_ROUTE",
	3: "FAILURE_REASON_ERROR",
	4: "FAILURE_REASON_INCORRECT_PAYMENT_DETAILS",
	5: "FAILURE_REASON_INSUFFICIENT_BALANCE",
}

var PaymentFailureReason_value = map[string]int32{
	"FAILURE_REASON_NONE":                      0,
	"FAILURE_REASON_TIMEOUT":                   1,
	"FAILURE_REASON_NO_ROUTE":                  2,
	"FAILURE_REASON_ERROR":                     3,
	"FAILURE_REASON_INCORRECT_PAYMENT_DETAILS": 4,
	"FAILURE_REASON_INSUFFICIENT_BALANCE":      5,
}

func (x PaymentFailureReason) String() string {
	return proto.EnumName(PaymentFailureReason_name, int32(x))
}

func (PaymentFailureReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}

type FeatureBit int32

const (
	FeatureBit_DATALOSS_PROTECT_REQ        FeatureBit = 0
	FeatureBit_DATALOSS_PROTECT_OPT        FeatureBit = 1
	FeatureBit_INITIAL_ROUING_SYNC         FeatureBit = 3
	FeatureBit_UPFRONT_SHUTDOWN_SCRIPT_REQ FeatureBit = 4
	FeatureBit_UPFRONT_SHUTDOWN_SCRIPT_OPT FeatureBit = 5
	FeatureBit_GOSSIP_QUERIES_REQ          FeatureBit = 6
	FeatureBit_GOSSIP_QUERIES_OPT          FeatureBit = 7
	FeatureBit_TLV_ONION_REQ               FeatureBit = 8
	FeatureBit_TLV_ONION_OPT               FeatureBit = 9
	FeatureBit_EXT_GOSSIP_QUERIES_REQ      FeatureBit = 10
	FeatureBit_EXT_GOSSIP_QUERIES_OPT      FeatureBit = 11
	FeatureBit_STATIC_REMOTE_KEY_REQ       FeatureBit = 12
	FeatureBit_STATIC_REMOTE_KEY_OPT       FeatureBit = 13
	FeatureBit_PAYMENT_ADDR_REQ            FeatureBit = 14
	FeatureBit_PAYMENT_ADDR_OPT            FeatureBit = 15
	FeatureBit_MPP_REQ                     FeatureBit = 16
	FeatureBit_MPP_OPT                     FeatureBit = 17
)

var FeatureBit_name = map[int32]string{
	0:  "DATALOSS_PROTECT_REQ",
	1:  "DATALOSS_PROTECT_OPT",
	3:  "INITIAL_ROUING_SYNC",
	4:  "UPFRONT_SHUTDOWN_SCRIPT_REQ",
	5:  "UPFRONT_SHUTDOWN_SCRIPT_OPT",
	6:  "GOSSIP_QUERIES_REQ",
	7:  "GOSSIP_QUERIES_OPT",
	8:  "TLV_ONION_REQ",
	9:  "TLV_ONION_OPT",
	10: "EXT_GOSSIP_QUERIES_REQ",
	11: "EXT_GOSSIP_QUERIES_OPT",
	12: "STATIC_REMOTE_KEY_REQ",
	13: "STATIC_REMOTE_KEY_OPT",
	14: "PAYMENT_ADDR_REQ",
	15: "PAYMENT_ADDR_OPT",
	16: "MPP_REQ",
	17: "MPP_OPT",
}

var FeatureBit_value = map[string]int32{
	"DATALOSS_PROTECT_REQ":        0,
	"DATALOSS_PROTECT_OPT":        1,
	"INITIAL_ROUING_SYNC":         3,
	"UPFRONT_SHUTDOWN_SCRIPT_REQ": 4,
	"UPFRONT_SHUTDOWN_SCRIPT_OPT": 5,
	"GOSSIP_QUERIES_REQ":          6,
	"GOSSIP_QUERIES_OPT":          7,
	"TLV_ONION_REQ":               8,
	"TLV_ONION_OPT":               9,
	"EXT_GOSSIP_QUERIES_REQ":      10,
	"EXT_GOSSIP_QUERIES_OPT":      11,
	"STATIC_REMOTE_KEY_REQ":       12,
	"STATIC_REMOTE_KEY_OPT":       13,
	"PAYMENT_ADDR_REQ":            14,
	"PAYMENT_ADDR_OPT":            15,
	"MPP_REQ":                     16,
	"MPP_OPT":                     17,
}

func (x FeatureBit) String() string {
	return proto.EnumName(FeatureBit_name, int32(x))
}

func (FeatureBit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{8}
}

type ChannelCloseSummary_ClosureType int32

const (
	ChannelCloseSummary_COOPERATIVE_CLOSE  ChannelCloseSummary_ClosureType = 0
	ChannelCloseSummary_LOCAL_FORCE_CLOSE  ChannelCloseSummary_ClosureType = 1
	ChannelCloseSummary_REMOTE_FORCE_CLOSE ChannelCloseSummary_ClosureType = 2
	ChannelCloseSummary_BREACH_CLOSE       ChannelCloseSummary_ClosureType = 3
	ChannelCloseSummary_FUNDING_CANCELED   ChannelCloseSummary_ClosureType = 4
	ChannelCloseSummary_ABANDONED          ChannelCloseSummary_ClosureType = 5
)

var ChannelCloseSummary_ClosureType_name = map[int32]string{
	0: "COOPERATIVE_CLOSE",
	1: "LOCAL_FORCE_CLOSE",
	2: "REMOTE_FORCE_CLOSE",
	3: "BREACH_CLOSE",
	4: "FUNDING_CANCELED",
	5: "ABANDONED",
}

var ChannelCloseSummary_ClosureType_value = map[string]int32{
	"COOPERATIVE_CLOSE":  0,
	"LOCAL_FORCE_CLOSE":  1,
	"REMOTE_FORCE_CLOSE": 2,
	"BREACH_CLOSE":       3,
	"FUNDING_CANCELED":   4,
	"ABANDONED":          5,
}

func (x ChannelCloseSummary_ClosureType) String() string {
	return proto.EnumName(ChannelCloseSummary_ClosureType_name, int32(x))
}

func (ChannelCloseSummary_ClosureType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{35, 0}
}

type Peer_SyncType int32

const (
	//
	//Denotes that we cannot determine the peer's current sync type.
	Peer_UNKNOWN_SYNC Peer_SyncType = 0
	//
	//Denotes that we are actively receiving new graph updates from the peer.
	Peer_ACTIVE_SYNC Peer_SyncType = 1
	//
	//Denotes that we are not receiving new graph updates from the peer.
	Peer_PASSIVE_SYNC Peer_SyncType = 2
)

var Peer_SyncType_name = map[int32]string{
	0: "UNKNOWN_SYNC",
	1: "ACTIVE_SYNC",
	2: "PASSIVE_SYNC",
}

var Peer_SyncType_value = map[string]int32{
	"UNKNOWN_SYNC": 0,
	"ACTIVE_SYNC":  1,
	"PASSIVE_SYNC": 2,
}

func (x Peer_SyncType) String() string {
	return proto.EnumName(Peer_SyncType_name, int32(x))
}

func (Peer_SyncType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{39, 0}
}

type PeerEvent_EventType int32

const (
	PeerEvent_PEER_ONLINE  PeerEvent_EventType = 0
	PeerEvent_PEER_OFFLINE PeerEvent_EventType = 1
)

var PeerEvent_EventType_name = map[int32]string{
	0: "PEER_ONLINE",
	1: "PEER_OFFLINE",
}

var PeerEvent_EventType_value = map[string]int32{
	"PEER_ONLINE":  0,
	"PEER_OFFLINE": 1,
}

func (x PeerEvent_EventType) String() string {
	return proto.EnumName(PeerEvent_EventType_name, int32(x))
}

func (PeerEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{44, 0}
}

type PendingChannelsResponse_ForceClosedChannel_AnchorState int32

const (
	PendingChannelsResponse_ForceClosedChannel_LIMBO     PendingChannelsResponse_ForceClosedChannel_AnchorState = 0
	PendingChannelsResponse_ForceClosedChannel_RECOVERED PendingChannelsResponse_ForceClosedChannel_AnchorState = 1
	PendingChannelsResponse_ForceClosedChannel_LOST      PendingChannelsResponse_ForceClosedChannel_AnchorState = 2
)

var PendingChannelsResponse_ForceClosedChannel_AnchorState_name = map[int32]string{
	0: "LIMBO",
	1: "RECOVERED",
	2: "LOST",
}

var PendingChannelsResponse_ForceClosedChannel_AnchorState_value = map[string]int32{
	"LIMBO":     0,
	"RECOVERED": 1,
	"LOST":      2,
}

func (x PendingChannelsResponse_ForceClosedChannel_AnchorState) String() string {
	return proto.EnumName(PendingChannelsResponse_ForceClosedChannel_AnchorState_name, int32(x))
}

func (PendingChannelsResponse_ForceClosedChannel_AnchorState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71, 5, 0}
}

type ChannelEventUpdate_UpdateType int32

const (
	ChannelEventUpdate_OPEN_CHANNEL         ChannelEventUpdate_UpdateType = 0
	ChannelEventUpdate_CLOSED_CHANNEL       ChannelEventUpdate_UpdateType = 1
	ChannelEventUpdate_ACTIVE_CHANNEL       ChannelEventUpdate_UpdateType = 2
	ChannelEventUpdate_INACTIVE_CHANNEL     ChannelEventUpdate_UpdateType = 3
	ChannelEventUpdate_PENDING_OPEN_CHANNEL ChannelEventUpdate_UpdateType = 4
)

var ChannelEventUpdate_UpdateType_name = map[int32]string{
	0: "OPEN_CHANNEL",
	1: "CLOSED_CHANNEL",
	2: "ACTIVE_CHANNEL",
	3: "INACTIVE_CHANNEL",
	4: "PENDING_OPEN_CHANNEL",
}

var ChannelEventUpdate_UpdateType_value = map[string]int32{
	"OPEN_CHANNEL":         0,
	"CLOSED_CHANNEL":       1,
	"ACTIVE_CHANNEL":       2,
	"INACTIVE_CHANNEL":     3,
	"PENDING_OPEN_CHANNEL": 4,
}

func (x ChannelEventUpdate_UpdateType) String() string {
	return proto.EnumName(ChannelEventUpdate_UpdateType_name, int32(x))
}

func (ChannelEventUpdate_UpdateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{73, 0}
}

type Invoice_InvoiceState int32

const (
	Invoice_OPEN     Invoice_InvoiceState = 0
	Invoice_SETTLED  Invoice_InvoiceState = 1
	Invoice_CANCELED Invoice_InvoiceState = 2
	Invoice_ACCEPTED Invoice_InvoiceState = 3
)

var Invoice_InvoiceState_name = map[int32]string{
	0: "OPEN",
	1: "SETTLED",
	2: "CANCELED",
	3: "ACCEPTED",
}

var Invoice_InvoiceState_value = map[string]int32{
	"OPEN":     0,
	"SETTLED":  1,
	"CANCELED": 2,
	"ACCEPTED": 3,
}

func (x Invoice_InvoiceState) String() string {
	return proto.EnumName(Invoice_InvoiceState_name, int32(x))
}

func (Invoice_InvoiceState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{112, 0}
}

type Payment_PaymentStatus int32

const (
	Payment_UNKNOWN   Payment_PaymentStatus = 0
	Payment_IN_FLIGHT Payment_PaymentStatus = 1
	Payment_SUCCEEDED Payment_PaymentStatus = 2
	Payment_FAILED    Payment_PaymentStatus = 3
)

var Payment_PaymentStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "IN_FLIGHT",
	2: "SUCCEEDED",
	3: "FAILED",
}

var Payment_PaymentStatus_value = map[string]int32{
	"UNKNOWN":   0,
	"IN_FLIGHT": 1,
	"SUCCEEDED": 2,
	"FAILED":    3,
}

func (x Payment_PaymentStatus) String() string {
	return proto.EnumName(Payment_PaymentStatus_name, int32(x))
}

func (Payment_PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{119, 0}
}

type HTLCAttempt_HTLCStatus int32

const (
	HTLCAttempt_IN_FLIGHT HTLCAttempt_HTLCStatus = 0
	HTLCAttempt_SUCCEEDED HTLCAttempt_HTLCStatus = 1
	HTLCAttempt_FAILED    HTLCAttempt_HTLCStatus = 2
)

var HTLCAttempt_HTLCStatus_name = map[int32]string{
	0: "IN_FLIGHT",
	1: "SUCCEEDED",
	2: "FAILED",
}

var HTLCAttempt_HTLCStatus_value = map[string]int32{
	"IN_FLIGHT": 0,
	"SUCCEEDED": 1,
	"FAILED":    2,
}

func (x HTLCAttempt_HTLCStatus) String() string {
	return proto.EnumName(HTLCAttempt_HTLCStatus_name, int32(x))
}

func (HTLCAttempt_HTLCStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{120, 0}
}

type Failure_FailureCode int32

const (
	//
	//The numbers assigned in this enumeration match the failure codes as
	//defined in BOLT #4. Because protobuf 3 requires enums to start with 0,
	//a RESERVED value is added.
	Failure_RESERVED                             Failure_FailureCode = 0
	Failure_INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS Failure_FailureCode = 1
	Failure_INCORRECT_PAYMENT_AMOUNT             Failure_FailureCode = 2
	Failure_FINAL_INCORRECT_CLTV_EXPIRY          Failure_FailureCode = 3
	Failure_FINAL_INCORRECT_HTLC_AMOUNT          Failure_FailureCode = 4
	Failure_FINAL_EXPIRY_TOO_SOON                Failure_FailureCode = 5
	Failure_INVALID_REALM                        Failure_FailureCode = 6
	Failure_EXPIRY_TOO_SOON                      Failure_FailureCode = 7
	Failure_INVALID_ONION_VERSION                Failure_FailureCode = 8
	Failure_INVALID_ONION_HMAC                   Failure_FailureCode = 9
	Failure_INVALID_ONION_KEY                    Failure_FailureCode = 10
	Failure_AMOUNT_BELOW_MINIMUM                 Failure_FailureCode = 11
	Failure_FEE_INSUFFICIENT                     Failure_FailureCode = 12
	Failure_INCORRECT_CLTV_EXPIRY                Failure_FailureCode = 13
	Failure_CHANNEL_DISABLED                     Failure_FailureCode = 14
	Failure_TEMPORARY_CHANNEL_FAILURE            Failure_FailureCode = 15
	Failure_REQUIRED_NODE_FEATURE_MISSING        Failure_FailureCode = 16
	Failure_REQUIRED_CHANNEL_FEATURE_MISSING     Failure_FailureCode = 17
	Failure_UNKNOWN_NEXT_PEER                    Failure_FailureCode = 18
	Failure_TEMPORARY_NODE_FAILURE               Failure_FailureCode = 19
	Failure_PERMANENT_NODE_FAILURE               Failure_FailureCode = 20
	Failure_PERMANENT_CHANNEL_FAILURE            Failure_FailureCode = 21
	Failure_EXPIRY_TOO_FAR                       Failure_FailureCode = 22
	Failure_MPP_TIMEOUT                          Failure_FailureCode = 23
	//
	//An internal error occurred.
	Failure_INTERNAL_FAILURE Failure_FailureCode = 997
	//
	//The error source is known, but the failure itself couldn't be decoded.
	Failure_UNKNOWN_FAILURE Failure_FailureCode = 998
	//
	//An unreadable failure result is returned if the received failure message
	//cannot be decrypted. In that case the error source is unknown.
	Failure_UNREADABLE_FAILURE Failure_FailureCode = 999
)

var Failure_FailureCode_name = map[int32]string{
	0:   "RESERVED",
	1:   "INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS",
	2:   "INCORRECT_PAYMENT_AMOUNT",
	3:   "FINAL_INCORRECT_CLTV_EXPIRY",
	4:   "FINAL_INCORRECT_HTLC_AMOUNT",
	5:   "FINAL_EXPIRY_TOO_SOON",
	6:   "INVALID_REALM",
	7:   "EXPIRY_TOO_SOON",
	8:   "INVALID_ONION_VERSION",
	9:   "INVALID_ONION_HMAC",
	10:  "INVALID_ONION_KEY",
	11:  "AMOUNT_BELOW_MINIMUM",
	12:  "FEE_INSUFFICIENT",
	13:  "INCORRECT_CLTV_EXPIRY",
	14:  "CHANNEL_DISABLED",
	15:  "TEMPORARY_CHANNEL_FAILURE",
	16:  "REQUIRED_NODE_FEATURE_MISSING",
	17:  "REQUIRED_CHANNEL_FEATURE_MISSING",
	18:  "UNKNOWN_NEXT_PEER",
	19:  "TEMPORARY_NODE_FAILURE",
	20:  "PERMANENT_NODE_FAILURE",
	21:  "PERMANENT_CHANNEL_FAILURE",
	22:  "EXPIRY_TOO_FAR",
	23:  "MPP_TIMEOUT",
	997: "INTERNAL_FAILURE",
	998: "UNKNOWN_FAILURE",
	999: "UNREADABLE_FAILURE",
}

var Failure_FailureCode_value = map[string]int32{
	"RESERVED":                             0,
	"INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS": 1,
	"INCORRECT_PAYMENT_AMOUNT":             2,
	"FINAL_INCORRECT_CLTV_EXPIRY":          3,
	"FINAL_INCORRECT_HTLC_AMOUNT":          4,
	"FINAL_EXPIRY_TOO_SOON":                5,
	"INVALID_REALM":                        6,
	"EXPIRY_TOO_SOON":                      7,
	"INVALID_ONION_VERSION":                8,
	"INVALID_ONION_HMAC":                   9,
	"INVALID_ONION_KEY":                    10,
	"AMOUNT_BELOW_MINIMUM":                 11,
	"FEE_INSUFFICIENT":                     12,
	"INCORRECT_CLTV_EXPIRY":                13,
	"CHANNEL_DISABLED":                     14,
	"TEMPORARY_CHANNEL_FAILURE":            15,
	"REQUIRED_NODE_FEATURE_MISSING":        16,
	"REQUIRED_CHANNEL_FEATURE_MISSING":     17,
	"UNKNOWN_NEXT_PEER":                    18,
	"TEMPORARY_NODE_FAILURE":               19,
	"PERMANENT_NODE_FAILURE":               20,
	"PERMANENT_CHANNEL_FAILURE":            21,
	"EXPIRY_TOO_FAR":                       22,
	"MPP_TIMEOUT":                          23,
	"INTERNAL_FAILURE":                     997,
	"UNKNOWN_FAILURE":                      998,
	"UNREADABLE_FAILURE":                   999,
}

func (x Failure_FailureCode) String() string {
	return proto.EnumName(Failure_FailureCode_name, int32(x))
}

func (Failure_FailureCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{150, 0}
}

type RestError struct {
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Stack                []string `protobuf:"bytes,3,rep,name=stack,proto3" json:"stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestError) Reset()         { *m = RestError{} }
func (m *RestError) String() string { return proto.CompactTextString(m) }
func (*RestError) ProtoMessage()    {}
func (*RestError) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *RestError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestError.Unmarshal(m, b)
}
func (m *RestError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestError.Marshal(b, m, deterministic)
}
func (m *RestError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestError.Merge(m, src)
}
func (m *RestError) XXX_Size() int {
	return xxx_messageInfo_RestError.Size(m)
}
func (m *RestError) XXX_DiscardUnknown() {
	xxx_messageInfo_RestError.DiscardUnknown(m)
}

var xxx_messageInfo_RestError proto.InternalMessageInfo

func (m *RestError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RestError) GetStack() []string {
	if m != nil {
		return m.Stack
	}
	return nil
}

type Utxo struct {
	// The type of address
	AddressType AddressType `protobuf:"varint,1,opt,name=address_type,json=addressType,proto3,enum=lnrpc.AddressType" json:"address_type,omitempty"`
	// The address
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// The value of the unspent coin in satoshis
	AmountSat int64 `protobuf:"varint,3,opt,name=amount_sat,json=amountSat,proto3" json:"amount_sat,omitempty"`
	// The pkscript in hex
	PkScript string `protobuf:"bytes,4,opt,name=pk_script,json=pkScript,proto3" json:"pk_script,omitempty"`
	// The outpoint in format txid:n
	Outpoint *OutPoint `protobuf:"bytes,5,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	// The number of confirmations for the Utxo
	Confirmations        int64    `protobuf:"varint,6,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Utxo) Reset()         { *m = Utxo{} }
func (m *Utxo) String() string { return proto.CompactTextString(m) }
func (*Utxo) ProtoMessage()    {}
func (*Utxo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *Utxo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Utxo.Unmarshal(m, b)
}
func (m *Utxo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Utxo.Marshal(b, m, deterministic)
}
func (m *Utxo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Utxo.Merge(m, src)
}
func (m *Utxo) XXX_Size() int {
	return xxx_messageInfo_Utxo.Size(m)
}
func (m *Utxo) XXX_DiscardUnknown() {
	xxx_messageInfo_Utxo.DiscardUnknown(m)
}

var xxx_messageInfo_Utxo proto.InternalMessageInfo

func (m *Utxo) GetAddressType() AddressType {
	if m != nil {
		return m.AddressType
	}
	return AddressType_WITNESS_PUBKEY_HASH
}

func (m *Utxo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Utxo) GetAmountSat() int64 {
	if m != nil {
		return m.AmountSat
	}
	return 0
}

func (m *Utxo) GetPkScript() string {
	if m != nil {
		return m.PkScript
	}
	return ""
}

func (m *Utxo) GetOutpoint() *OutPoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *Utxo) GetConfirmations() int64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

type Transaction struct {
	// The transaction hash
	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// The transaction amount, denominated in satoshis
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// The number of confirmations
	NumConfirmations int32 `protobuf:"varint,3,opt,name=num_confirmations,json=numConfirmations,proto3" json:"num_confirmations,omitempty"`
	// The hash of the block this transaction was included in
	BlockHash string `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// The height of the block this transaction was included in
	BlockHeight int32 `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// Timestamp of this transaction
	TimeStamp int64 `protobuf:"varint,6,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	// Fees paid for this transaction
	TotalFees int64 `protobuf:"varint,7,opt,name=total_fees,json=totalFees,proto3" json:"total_fees,omitempty"`
	// Addresses that received funds for this transaction
	DestAddresses []string `protobuf:"bytes,8,rep,name=dest_addresses,json=destAddresses,proto3" json:"dest_addresses,omitempty"`
	// The raw transaction hex.
	RawTxHex []byte `protobuf:"bytes,9,opt,name=raw_tx_hex,json=rawTxHex,proto3" json:"raw_tx_hex,omitempty"`
	// A label that was optionally set on transaction broadcast.
	Label                string   `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *Transaction) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Transaction) GetNumConfirmations() int32 {
	if m != nil {
		return m.NumConfirmations
	}
	return 0
}

func (m *Transaction) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *Transaction) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *Transaction) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *Transaction) GetTotalFees() int64 {
	if m != nil {
		return m.TotalFees
	}
	return 0
}

func (m *Transaction) GetDestAddresses() []string {
	if m != nil {
		return m.DestAddresses
	}
	return nil
}

func (m *Transaction) GetRawTxHex() []byte {
	if m != nil {
		return m.RawTxHex
	}
	return nil
}

func (m *Transaction) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type GetTransactionsRequest struct {
	//
	//The height from which to list transactions, inclusive.
	StartHeight int32 `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	//
	//The height until which to list transactions, inclusive. To include
	//unconfirmed transactions, this value should be set to -1, which will
	//return transactions from start_height until the current chain tip and
	//unconfirmed transactions. If no end_height is provided, the call will
	//default to this option.
	EndHeight int32 `protobuf:"varint,2,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
	TxnsLimit int32 `protobuf:"varint,3,opt,name=txns_limit,json=txnsLimit,proto3" json:"txns_limit,omitempty"`
	TxnsSkip  int32 `protobuf:"varint,4,opt,name=txns_skip,json=txnsSkip,proto3" json:"txns_skip,omitempty"`
	Coinbase  int32 `protobuf:"varint,5,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	//
	//If set, the payments returned will result from seeking backwards from the
	//specified index offset. This can be used to paginate backwards. The order
	//of the returned payments is always oldest first (ascending index order).
	Reversed             bool     `protobuf:"varint,6,opt,name=reversed,proto3" json:"reversed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionsRequest) Reset()         { *m = GetTransactionsRequest{} }
func (m *GetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsRequest) ProtoMessage()    {}
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *GetTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsRequest.Unmarshal(m, b)
}
func (m *GetTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsRequest.Merge(m, src)
}
func (m *GetTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsRequest.Size(m)
}
func (m *GetTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsRequest proto.InternalMessageInfo

func (m *GetTransactionsRequest) GetStartHeight() int32 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *GetTransactionsRequest) GetEndHeight() int32 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

func (m *GetTransactionsRequest) GetTxnsLimit() int32 {
	if m != nil {
		return m.TxnsLimit
	}
	return 0
}

func (m *GetTransactionsRequest) GetTxnsSkip() int32 {
	if m != nil {
		return m.TxnsSkip
	}
	return 0
}

func (m *GetTransactionsRequest) GetCoinbase() int32 {
	if m != nil {
		return m.Coinbase
	}
	return 0
}

func (m *GetTransactionsRequest) GetReversed() bool {
	if m != nil {
		return m.Reversed
	}
	return false
}

type TransactionDetails struct {
	// The list of transactions relevant to the wallet.
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionDetails) Reset()         { *m = TransactionDetails{} }
func (m *TransactionDetails) String() string { return proto.CompactTextString(m) }
func (*TransactionDetails) ProtoMessage()    {}
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *TransactionDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionDetails.Unmarshal(m, b)
}
func (m *TransactionDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionDetails.Marshal(b, m, deterministic)
}
func (m *TransactionDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionDetails.Merge(m, src)
}
func (m *TransactionDetails) XXX_Size() int {
	return xxx_messageInfo_TransactionDetails.Size(m)
}
func (m *TransactionDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionDetails.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionDetails proto.InternalMessageInfo

func (m *TransactionDetails) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type FeeLimit struct {
	// Types that are valid to be assigned to Limit:
	//	*FeeLimit_Fixed
	//	*FeeLimit_FixedMsat
	//	*FeeLimit_Percent
	Limit                isFeeLimit_Limit `protobuf_oneof:"limit"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FeeLimit) Reset()         { *m = FeeLimit{} }
func (m *FeeLimit) String() string { return proto.CompactTextString(m) }
func (*FeeLimit) ProtoMessage()    {}
func (*FeeLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *FeeLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeLimit.Unmarshal(m, b)
}
func (m *FeeLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeLimit.Marshal(b, m, deterministic)
}
func (m *FeeLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeLimit.Merge(m, src)
}
func (m *FeeLimit) XXX_Size() int {
	return xxx_messageInfo_FeeLimit.Size(m)
}
func (m *FeeLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeLimit.DiscardUnknown(m)
}

var xxx_messageInfo_FeeLimit proto.InternalMessageInfo

type isFeeLimit_Limit interface {
	isFeeLimit_Limit()
}

type FeeLimit_Fixed struct {
	Fixed int64 `protobuf:"varint,1,opt,name=fixed,proto3,oneof"`
}

type FeeLimit_FixedMsat struct {
	FixedMsat int64 `protobuf:"varint,3,opt,name=fixed_msat,json=fixedMsat,proto3,oneof"`
}

type FeeLimit_Percent struct {
	Percent int64 `protobuf:"varint,2,opt,name=percent,proto3,oneof"`
}

func (*FeeLimit_Fixed) isFeeLimit_Limit() {}

func (*FeeLimit_FixedMsat) isFeeLimit_Limit() {}

func (*FeeLimit_Percent) isFeeLimit_Limit() {}

func (m *FeeLimit) GetLimit() isFeeLimit_Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *FeeLimit) GetFixed() int64 {
	if x, ok := m.GetLimit().(*FeeLimit_Fixed); ok {
		return x.Fixed
	}
	return 0
}

func (m *FeeLimit) GetFixedMsat() int64 {
	if x, ok := m.GetLimit().(*FeeLimit_FixedMsat); ok {
		return x.FixedMsat
	}
	return 0
}

func (m *FeeLimit) GetPercent() int64 {
	if x, ok := m.GetLimit().(*FeeLimit_Percent); ok {
		return x.Percent
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FeeLimit) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FeeLimit_Fixed)(nil),
		(*FeeLimit_FixedMsat)(nil),
		(*FeeLimit_Percent)(nil),
	}
}

type SendRequest struct {
	//
	//The identity pubkey of the payment recipient.
	Dest []byte `protobuf:"bytes,1,opt,name=dest,proto3" json:"dest,omitempty"`
	//
	//The amount to send expressed in satoshis.
	//
	//The fields amt and amt_msat are mutually exclusive.
	Amt int64 `protobuf:"varint,3,opt,name=amt,proto3" json:"amt,omitempty"`
	//
	//The amount to send expressed in millisatoshis.
	//
	//The fields amt and amt_msat are mutually exclusive.
	AmtMsat int64 `protobuf:"varint,12,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	//
	//The hash to use within the payment's HTLC.
	PaymentHash []byte `protobuf:"bytes,4,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	//
	//A bare-bones invoice for a payment within the Lightning Network. With the
	//details of the invoice, the sender has all the data necessary to send a
	//payment to the recipient.
	PaymentRequest string `protobuf:"bytes,6,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
	//
	//The CLTV delta from the current height that should be used to set the
	//timelock for the final hop.
	FinalCltvDelta int32 `protobuf:"varint,7,opt,name=final_cltv_delta,json=finalCltvDelta,proto3" json:"final_cltv_delta,omitempty"`
	//
	//The maximum number of satoshis that will be paid as a fee of the payment.
	//This value can be represented either as a percentage of the amount being
	//sent, or as a fixed amount of the maximum fee the user is willing the pay to
	//send the payment.
	FeeLimit *FeeLimit `protobuf:"bytes,8,opt,name=fee_limit,json=feeLimit,proto3" json:"fee_limit,omitempty"`
	//
	//The channel id of the channel that must be taken to the first hop. If zero,
	//any channel may be used.
	OutgoingChanId uint64 `protobuf:"varint,9,opt,name=outgoing_chan_id,json=outgoingChanId,proto3" json:"outgoing_chan_id,omitempty"`
	//
	//The pubkey of the last hop of the route. If empty, any hop may be used.
	LastHopPubkey []byte `protobuf:"bytes,13,opt,name=last_hop_pubkey,json=lastHopPubkey,proto3" json:"last_hop_pubkey,omitempty"`
	//
	//An optional maximum total time lock for the route. This should not exceed
	//lnd's `--max-cltv-expiry` setting. If zero, then the value of
	//`--max-cltv-expiry` is enforced.
	CltvLimit uint32 `protobuf:"varint,10,opt,name=cltv_limit,json=cltvLimit,proto3" json:"cltv_limit,omitempty"`
	//
	//An optional field that can be used to pass an arbitrary set of TLV records
	//to a peer which understands the new records. This can be used to pass
	//application specific data during the payment attempt. Record types are
	//required to be in the custom range >= 65536.
	DestCustomRecords map[uint64][]byte `protobuf:"bytes,11,rep,name=dest_custom_records,json=destCustomRecords,proto3" json:"dest_custom_records,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// If set, circular payments to self are permitted.
	AllowSelfPayment bool `protobuf:"varint,14,opt,name=allow_self_payment,json=allowSelfPayment,proto3" json:"allow_self_payment,omitempty"`
	//
	//Features assumed to be supported by the final node. All transitive feature
	//dependencies must also be set properly. For a given feature bit pair, either
	//optional or remote may be set, but not both. If this field is nil or empty,
	//the router will try to load destination features from the graph as a
	//fallback.
	DestFeatures         []FeatureBit `protobuf:"varint,15,rep,packed,name=dest_features,json=destFeatures,proto3,enum=lnrpc.FeatureBit" json:"dest_features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetDest() []byte {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *SendRequest) GetAmt() int64 {
	if m != nil {
		return m.Amt
	}
	return 0
}

func (m *SendRequest) GetAmtMsat() int64 {
	if m != nil {
		return m.AmtMsat
	}
	return 0
}

func (m *SendRequest) GetPaymentHash() []byte {
	if m != nil {
		return m.PaymentHash
	}
	return nil
}

func (m *SendRequest) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

func (m *SendRequest) GetFinalCltvDelta() int32 {
	if m != nil {
		return m.FinalCltvDelta
	}
	return 0
}

func (m *SendRequest) GetFeeLimit() *FeeLimit {
	if m != nil {
		return m.FeeLimit
	}
	return nil
}

func (m *SendRequest) GetOutgoingChanId() uint64 {
	if m != nil {
		return m.OutgoingChanId
	}
	return 0
}

func (m *SendRequest) GetLastHopPubkey() []byte {
	if m != nil {
		return m.LastHopPubkey
	}
	return nil
}

func (m *SendRequest) GetCltvLimit() uint32 {
	if m != nil {
		return m.CltvLimit
	}
	return 0
}

func (m *SendRequest) GetDestCustomRecords() map[uint64][]byte {
	if m != nil {
		return m.DestCustomRecords
	}
	return nil
}

func (m *SendRequest) GetAllowSelfPayment() bool {
	if m != nil {
		return m.AllowSelfPayment
	}
	return false
}

func (m *SendRequest) GetDestFeatures() []FeatureBit {
	if m != nil {
		return m.DestFeatures
	}
	return nil
}

type SendResponse struct {
	PaymentError         string   `protobuf:"bytes,1,opt,name=payment_error,json=paymentError,proto3" json:"payment_error,omitempty"`
	PaymentPreimage      []byte   `protobuf:"bytes,2,opt,name=payment_preimage,json=paymentPreimage,proto3" json:"payment_preimage,omitempty"`
	PaymentRoute         *Route   `protobuf:"bytes,3,opt,name=payment_route,json=paymentRoute,proto3" json:"payment_route,omitempty"`
	PaymentHash          []byte   `protobuf:"bytes,4,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}

func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (m *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(m, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetPaymentError() string {
	if m != nil {
		return m.PaymentError
	}
	return ""
}

func (m *SendResponse) GetPaymentPreimage() []byte {
	if m != nil {
		return m.PaymentPreimage
	}
	return nil
}

func (m *SendResponse) GetPaymentRoute() *Route {
	if m != nil {
		return m.PaymentRoute
	}
	return nil
}

func (m *SendResponse) GetPaymentHash() []byte {
	if m != nil {
		return m.PaymentHash
	}
	return nil
}

type SendToRouteRequest struct {
	//
	//The payment hash to use for the HTLC.
	PaymentHash []byte `protobuf:"bytes,1,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	// Route that should be used to attempt to complete the payment.
	Route                *Route   `protobuf:"bytes,4,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendToRouteRequest) Reset()         { *m = SendToRouteRequest{} }
func (m *SendToRouteRequest) String() string { return proto.CompactTextString(m) }
func (*SendToRouteRequest) ProtoMessage()    {}
func (*SendToRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{8}
}

func (m *SendToRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendToRouteRequest.Unmarshal(m, b)
}
func (m *SendToRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendToRouteRequest.Marshal(b, m, deterministic)
}
func (m *SendToRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendToRouteRequest.Merge(m, src)
}
func (m *SendToRouteRequest) XXX_Size() int {
	return xxx_messageInfo_SendToRouteRequest.Size(m)
}
func (m *SendToRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendToRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendToRouteRequest proto.InternalMessageInfo

func (m *SendToRouteRequest) GetPaymentHash() []byte {
	if m != nil {
		return m.PaymentHash
	}
	return nil
}

func (m *SendToRouteRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type ChannelAcceptRequest struct {
	// The pubkey of the node that wishes to open an inbound channel.
	NodePubkey []byte `protobuf:"bytes,1,opt,name=node_pubkey,json=nodePubkey,proto3" json:"node_pubkey,omitempty"`
	// The hash of the genesis block that the proposed channel resides in.
	ChainHash []byte `protobuf:"bytes,2,opt,name=chain_hash,json=chainHash,proto3" json:"chain_hash,omitempty"`
	// The pending channel id.
	PendingChanId []byte `protobuf:"bytes,3,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	// The funding amount in satoshis that initiator wishes to use in the
	// channel.
	FundingAmt uint64 `protobuf:"varint,4,opt,name=funding_amt,json=fundingAmt,proto3" json:"funding_amt,omitempty"`
	// The push amount of the proposed channel in millisatoshis.
	PushAmt uint64 `protobuf:"varint,5,opt,name=push_amt,json=pushAmt,proto3" json:"push_amt,omitempty"`
	// The dust limit of the initiator's commitment tx.
	DustLimit uint64 `protobuf:"varint,6,opt,name=dust_limit,json=dustLimit,proto3" json:"dust_limit,omitempty"`
	// The maximum amount of coins in millisatoshis that can be pending in this
	// channel.
	MaxValueInFlight uint64 `protobuf:"varint,7,opt,name=max_value_in_flight,json=maxValueInFlight,proto3" json:"max_value_in_flight,omitempty"`
	// The minimum amount of satoshis the initiator requires us to have at all
	// times.
	ChannelReserve uint64 `protobuf:"varint,8,opt,name=channel_reserve,json=channelReserve,proto3" json:"channel_reserve,omitempty"`
	// The smallest HTLC in millisatoshis that the initiator will accept.
	MinHtlc uint64 `protobuf:"varint,9,opt,name=min_htlc,json=minHtlc,proto3" json:"min_htlc,omitempty"`
	// The initial fee rate that the initiator suggests for both commitment
	// transactions.
	FeePerKw uint64 `protobuf:"varint,10,opt,name=fee_per_kw,json=feePerKw,proto3" json:"fee_per_kw,omitempty"`
	//
	//The number of blocks to use for the relative time lock in the pay-to-self
	//output of both commitment transactions.
	CsvDelay uint32 `protobuf:"varint,11,opt,name=csv_delay,json=csvDelay,proto3" json:"csv_delay,omitempty"`
	// The total number of incoming HTLC's that the initiator will accept.
	MaxAcceptedHtlcs uint32 `protobuf:"varint,12,opt,name=max_accepted_htlcs,json=maxAcceptedHtlcs,proto3" json:"max_accepted_htlcs,omitempty"`
	// A bit-field which the initiator uses to specify proposed channel
	// behavior.
	ChannelFlags         uint32   `protobuf:"varint,13,opt,name=channel_flags,json=channelFlags,proto3" json:"channel_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelAcceptRequest) Reset()         { *m = ChannelAcceptRequest{} }
func (m *ChannelAcceptRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelAcceptRequest) ProtoMessage()    {}
func (*ChannelAcceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{9}
}

func (m *ChannelAcceptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelAcceptRequest.Unmarshal(m, b)
}
func (m *ChannelAcceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelAcceptRequest.Marshal(b, m, deterministic)
}
func (m *ChannelAcceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelAcceptRequest.Merge(m, src)
}
func (m *ChannelAcceptRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelAcceptRequest.Size(m)
}
func (m *ChannelAcceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelAcceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelAcceptRequest proto.InternalMessageInfo

func (m *ChannelAcceptRequest) GetNodePubkey() []byte {
	if m != nil {
		return m.NodePubkey
	}
	return nil
}

func (m *ChannelAcceptRequest) GetChainHash() []byte {
	if m != nil {
		return m.ChainHash
	}
	return nil
}

func (m *ChannelAcceptRequest) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

func (m *ChannelAcceptRequest) GetFundingAmt() uint64 {
	if m != nil {
		return m.FundingAmt
	}
	return 0
}

func (m *ChannelAcceptRequest) GetPushAmt() uint64 {
	if m != nil {
		return m.PushAmt
	}
	return 0
}

func (m *ChannelAcceptRequest) GetDustLimit() uint64 {
	if m != nil {
		return m.DustLimit
	}
	return 0
}

func (m *ChannelAcceptRequest) GetMaxValueInFlight() uint64 {
	if m != nil {
		return m.MaxValueInFlight
	}
	return 0
}

func (m *ChannelAcceptRequest) GetChannelReserve() uint64 {
	if m != nil {
		return m.ChannelReserve
	}
	return 0
}

func (m *ChannelAcceptRequest) GetMinHtlc() uint64 {
	if m != nil {
		return m.MinHtlc
	}
	return 0
}

func (m *ChannelAcceptRequest) GetFeePerKw() uint64 {
	if m != nil {
		return m.FeePerKw
	}
	return 0
}

func (m *ChannelAcceptRequest) GetCsvDelay() uint32 {
	if m != nil {
		return m.CsvDelay
	}
	return 0
}

func (m *ChannelAcceptRequest) GetMaxAcceptedHtlcs() uint32 {
	if m != nil {
		return m.MaxAcceptedHtlcs
	}
	return 0
}

func (m *ChannelAcceptRequest) GetChannelFlags() uint32 {
	if m != nil {
		return m.ChannelFlags
	}
	return 0
}

type ChannelAcceptResponse struct {
	// Whether or not the client accepts the channel.
	Accept bool `protobuf:"varint,1,opt,name=accept,proto3" json:"accept,omitempty"`
	// The pending channel id to which this response applies.
	PendingChanId []byte `protobuf:"bytes,2,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	//
	//An optional error to send the initiating party to indicate why the channel
	//was rejected. This field *should not* contain sensitive information, it will
	//be sent to the initiating party. This field should only be set if accept is
	//false, the channel will be rejected if an error is set with accept=true
	//because the meaning of this response is ambiguous. Limited to 500
	//characters.
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	//
	//The upfront shutdown address to use if the initiating peer supports option
	//upfront shutdown script (see ListPeers for the features supported). Note
	//that the channel open will fail if this value is set for a peer that does
	//not support this feature bit.
	UpfrontShutdown string `protobuf:"bytes,4,opt,name=upfront_shutdown,json=upfrontShutdown,proto3" json:"upfront_shutdown,omitempty"`
	//
	//The csv delay (in blocks) that we require for the remote party.
	CsvDelay uint32 `protobuf:"varint,5,opt,name=csv_delay,json=csvDelay,proto3" json:"csv_delay,omitempty"`
	//
	//The reserve amount in satoshis that we require the remote peer to adhere to.
	//We require that the remote peer always have some reserve amount allocated to
	//them so that there is always a disincentive to broadcast old state (if they
	//hold 0 sats on their side of the channel, there is nothing to lose).
	ReserveSat uint64 `protobuf:"varint,6,opt,name=reserve_sat,json=reserveSat,proto3" json:"reserve_sat,omitempty"`
	//
	//The maximum amount of funds in millisatoshis that we allow the remote peer
	//to have in outstanding htlcs.
	InFlightMaxMsat uint64 `protobuf:"varint,7,opt,name=in_flight_max_msat,json=inFlightMaxMsat,proto3" json:"in_flight_max_msat,omitempty"`
	//
	//The maximum number of htlcs that the remote peer can offer us.
	MaxHtlcCount uint32 `protobuf:"varint,8,opt,name=max_htlc_count,json=maxHtlcCount,proto3" json:"max_htlc_count,omitempty"`
	//
	//The minimum value in millisatoshis for incoming htlcs on the channel.
	MinHtlcIn uint64 `protobuf:"varint,9,opt,name=min_htlc_in,json=minHtlcIn,proto3" json:"min_htlc_in,omitempty"`
	//
	//The number of confirmations we require before we consider the channel open.
	MinAcceptDepth       uint32   `protobuf:"varint,10,opt,name=min_accept_depth,json=minAcceptDepth,proto3" json:"min_accept_depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelAcceptResponse) Reset()         { *m = ChannelAcceptResponse{} }
func (m *ChannelAcceptResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelAcceptResponse) ProtoMessage()    {}
func (*ChannelAcceptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{10}
}

func (m *ChannelAcceptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelAcceptResponse.Unmarshal(m, b)
}
func (m *ChannelAcceptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelAcceptResponse.Marshal(b, m, deterministic)
}
func (m *ChannelAcceptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelAcceptResponse.Merge(m, src)
}
func (m *ChannelAcceptResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelAcceptResponse.Size(m)
}
func (m *ChannelAcceptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelAcceptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelAcceptResponse proto.InternalMessageInfo

func (m *ChannelAcceptResponse) GetAccept() bool {
	if m != nil {
		return m.Accept
	}
	return false
}

func (m *ChannelAcceptResponse) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

func (m *ChannelAcceptResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ChannelAcceptResponse) GetUpfrontShutdown() string {
	if m != nil {
		return m.UpfrontShutdown
	}
	return ""
}

func (m *ChannelAcceptResponse) GetCsvDelay() uint32 {
	if m != nil {
		return m.CsvDelay
	}
	return 0
}

func (m *ChannelAcceptResponse) GetReserveSat() uint64 {
	if m != nil {
		return m.ReserveSat
	}
	return 0
}

func (m *ChannelAcceptResponse) GetInFlightMaxMsat() uint64 {
	if m != nil {
		return m.InFlightMaxMsat
	}
	return 0
}

func (m *ChannelAcceptResponse) GetMaxHtlcCount() uint32 {
	if m != nil {
		return m.MaxHtlcCount
	}
	return 0
}

func (m *ChannelAcceptResponse) GetMinHtlcIn() uint64 {
	if m != nil {
		return m.MinHtlcIn
	}
	return 0
}

func (m *ChannelAcceptResponse) GetMinAcceptDepth() uint32 {
	if m != nil {
		return m.MinAcceptDepth
	}
	return 0
}

type ChannelPoint struct {
	// Types that are valid to be assigned to FundingTxid:
	//	*ChannelPoint_FundingTxidBytes
	//	*ChannelPoint_FundingTxidStr
	FundingTxid isChannelPoint_FundingTxid `protobuf_oneof:"funding_txid"`
	// The index of the output of the funding transaction
	OutputIndex          uint32   `protobuf:"varint,3,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelPoint) Reset()         { *m = ChannelPoint{} }
func (m *ChannelPoint) String() string { return proto.CompactTextString(m) }
func (*ChannelPoint) ProtoMessage()    {}
func (*ChannelPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{11}
}

func (m *ChannelPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelPoint.Unmarshal(m, b)
}
func (m *ChannelPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelPoint.Marshal(b, m, deterministic)
}
func (m *ChannelPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelPoint.Merge(m, src)
}
func (m *ChannelPoint) XXX_Size() int {
	return xxx_messageInfo_ChannelPoint.Size(m)
}
func (m *ChannelPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelPoint.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelPoint proto.InternalMessageInfo

type isChannelPoint_FundingTxid interface {
	isChannelPoint_FundingTxid()
}

type ChannelPoint_FundingTxidBytes struct {
	FundingTxidBytes []byte `protobuf:"bytes,1,opt,name=funding_txid_bytes,json=fundingTxidBytes,proto3,oneof"`
}

type ChannelPoint_FundingTxidStr struct {
	FundingTxidStr string `protobuf:"bytes,2,opt,name=funding_txid_str,json=fundingTxidStr,proto3,oneof"`
}

func (*ChannelPoint_FundingTxidBytes) isChannelPoint_FundingTxid() {}

func (*ChannelPoint_FundingTxidStr) isChannelPoint_FundingTxid() {}

func (m *ChannelPoint) GetFundingTxid() isChannelPoint_FundingTxid {
	if m != nil {
		return m.FundingTxid
	}
	return nil
}

func (m *ChannelPoint) GetFundingTxidBytes() []byte {
	if x, ok := m.GetFundingTxid().(*ChannelPoint_FundingTxidBytes); ok {
		return x.FundingTxidBytes
	}
	return nil
}

func (m *ChannelPoint) GetFundingTxidStr() string {
	if x, ok := m.GetFundingTxid().(*ChannelPoint_FundingTxidStr); ok {
		return x.FundingTxidStr
	}
	return ""
}

func (m *ChannelPoint) GetOutputIndex() uint32 {
	if m != nil {
		return m.OutputIndex
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ChannelPoint) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ChannelPoint_FundingTxidBytes)(nil),
		(*ChannelPoint_FundingTxidStr)(nil),
	}
}

type OutPoint struct {
	// Raw bytes representing the transaction id.
	TxidBytes []byte `protobuf:"bytes,1,opt,name=txid_bytes,json=txidBytes,proto3" json:"txid_bytes,omitempty"`
	// Reversed, hex-encoded string representing the transaction id.
	TxidStr string `protobuf:"bytes,2,opt,name=txid_str,json=txidStr,proto3" json:"txid_str,omitempty"`
	// The index of the output on the transaction.
	OutputIndex          uint32   `protobuf:"varint,3,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutPoint) Reset()         { *m = OutPoint{} }
func (m *OutPoint) String() string { return proto.CompactTextString(m) }
func (*OutPoint) ProtoMessage()    {}
func (*OutPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{12}
}

func (m *OutPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutPoint.Unmarshal(m, b)
}
func (m *OutPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutPoint.Marshal(b, m, deterministic)
}
func (m *OutPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutPoint.Merge(m, src)
}
func (m *OutPoint) XXX_Size() int {
	return xxx_messageInfo_OutPoint.Size(m)
}
func (m *OutPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_OutPoint.DiscardUnknown(m)
}

var xxx_messageInfo_OutPoint proto.InternalMessageInfo

func (m *OutPoint) GetTxidBytes() []byte {
	if m != nil {
		return m.TxidBytes
	}
	return nil
}

func (m *OutPoint) GetTxidStr() string {
	if m != nil {
		return m.TxidStr
	}
	return ""
}

func (m *OutPoint) GetOutputIndex() uint32 {
	if m != nil {
		return m.OutputIndex
	}
	return 0
}

type LightningAddress struct {
	// The identity pubkey of the Lightning node
	Pubkey string `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// The network location of the lightning node, e.g. `69.69.69.69:1337` or
	// `localhost:10011`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LightningAddress) Reset()         { *m = LightningAddress{} }
func (m *LightningAddress) String() string { return proto.CompactTextString(m) }
func (*LightningAddress) ProtoMessage()    {}
func (*LightningAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{13}
}

func (m *LightningAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightningAddress.Unmarshal(m, b)
}
func (m *LightningAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightningAddress.Marshal(b, m, deterministic)
}
func (m *LightningAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightningAddress.Merge(m, src)
}
func (m *LightningAddress) XXX_Size() int {
	return xxx_messageInfo_LightningAddress.Size(m)
}
func (m *LightningAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_LightningAddress.DiscardUnknown(m)
}

var xxx_messageInfo_LightningAddress proto.InternalMessageInfo

func (m *LightningAddress) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *LightningAddress) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type EstimateFeeRequest struct {
	// The map from addresses to amounts for the transaction.
	AddrToAmount map[string]int64 `protobuf:"bytes,1,rep,name=AddrToAmount,proto3" json:"AddrToAmount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// The target number of blocks that this transaction should be confirmed
	// by.
	TargetConf           int32    `protobuf:"varint,2,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EstimateFeeRequest) Reset()         { *m = EstimateFeeRequest{} }
func (m *EstimateFeeRequest) String() string { return proto.CompactTextString(m) }
func (*EstimateFeeRequest) ProtoMessage()    {}
func (*EstimateFeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{14}
}

func (m *EstimateFeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateFeeRequest.Unmarshal(m, b)
}
func (m *EstimateFeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateFeeRequest.Marshal(b, m, deterministic)
}
func (m *EstimateFeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateFeeRequest.Merge(m, src)
}
func (m *EstimateFeeRequest) XXX_Size() int {
	return xxx_messageInfo_EstimateFeeRequest.Size(m)
}
func (m *EstimateFeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateFeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateFeeRequest proto.InternalMessageInfo

func (m *EstimateFeeRequest) GetAddrToAmount() map[string]int64 {
	if m != nil {
		return m.AddrToAmount
	}
	return nil
}

func (m *EstimateFeeRequest) GetTargetConf() int32 {
	if m != nil {
		return m.TargetConf
	}
	return 0
}

type EstimateFeeResponse struct {
	// The total fee in satoshis.
	FeeSat int64 `protobuf:"varint,1,opt,name=fee_sat,json=feeSat,proto3" json:"fee_sat,omitempty"`
	// The fee rate in satoshi/byte.
	FeerateSatPerByte    int64    `protobuf:"varint,2,opt,name=feerate_sat_per_byte,json=feerateSatPerByte,proto3" json:"feerate_sat_per_byte,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EstimateFeeResponse) Reset()         { *m = EstimateFeeResponse{} }
func (m *EstimateFeeResponse) String() string { return proto.CompactTextString(m) }
func (*EstimateFeeResponse) ProtoMessage()    {}
func (*EstimateFeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{15}
}

func (m *EstimateFeeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateFeeResponse.Unmarshal(m, b)
}
func (m *EstimateFeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateFeeResponse.Marshal(b, m, deterministic)
}
func (m *EstimateFeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateFeeResponse.Merge(m, src)
}
func (m *EstimateFeeResponse) XXX_Size() int {
	return xxx_messageInfo_EstimateFeeResponse.Size(m)
}
func (m *EstimateFeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateFeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateFeeResponse proto.InternalMessageInfo

func (m *EstimateFeeResponse) GetFeeSat() int64 {
	if m != nil {
		return m.FeeSat
	}
	return 0
}

func (m *EstimateFeeResponse) GetFeerateSatPerByte() int64 {
	if m != nil {
		return m.FeerateSatPerByte
	}
	return 0
}

type SendManyRequest struct {
	// The map from addresses to amounts
	AddrToAmount map[string]int64 `protobuf:"bytes,1,rep,name=AddrToAmount,proto3" json:"AddrToAmount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// The target number of blocks that this transaction should be confirmed
	// by.
	TargetConf int32 `protobuf:"varint,3,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	// A manual fee rate set in sat/byte that should be used when crafting the
	// transaction.
	SatPerByte int64 `protobuf:"varint,5,opt,name=sat_per_byte,json=satPerByte,proto3" json:"sat_per_byte,omitempty"`
	// An optional label for the transaction, limited to 500 characters.
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// The minimum number of confirmations each one of your outputs used for
	// the transaction must satisfy.
	MinConfs int32 `protobuf:"varint,7,opt,name=min_confs,json=minConfs,proto3" json:"min_confs,omitempty"`
	// Whether unconfirmed outputs should be used as inputs for the transaction.
	SpendUnconfirmed     bool     `protobuf:"varint,8,opt,name=spend_unconfirmed,json=spendUnconfirmed,proto3" json:"spend_unconfirmed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendManyRequest) Reset()         { *m = SendManyRequest{} }
func (m *SendManyRequest) String() string { return proto.CompactTextString(m) }
func (*SendManyRequest) ProtoMessage()    {}
func (*SendManyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{16}
}

func (m *SendManyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendManyRequest.Unmarshal(m, b)
}
func (m *SendManyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendManyRequest.Marshal(b, m, deterministic)
}
func (m *SendManyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendManyRequest.Merge(m, src)
}
func (m *SendManyRequest) XXX_Size() int {
	return xxx_messageInfo_SendManyRequest.Size(m)
}
func (m *SendManyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendManyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendManyRequest proto.InternalMessageInfo

func (m *SendManyRequest) GetAddrToAmount() map[string]int64 {
	if m != nil {
		return m.AddrToAmount
	}
	return nil
}

func (m *SendManyRequest) GetTargetConf() int32 {
	if m != nil {
		return m.TargetConf
	}
	return 0
}

func (m *SendManyRequest) GetSatPerByte() int64 {
	if m != nil {
		return m.SatPerByte
	}
	return 0
}

func (m *SendManyRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *SendManyRequest) GetMinConfs() int32 {
	if m != nil {
		return m.MinConfs
	}
	return 0
}

func (m *SendManyRequest) GetSpendUnconfirmed() bool {
	if m != nil {
		return m.SpendUnconfirmed
	}
	return false
}

type SendManyResponse struct {
	// The id of the transaction
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendManyResponse) Reset()         { *m = SendManyResponse{} }
func (m *SendManyResponse) String() string { return proto.CompactTextString(m) }
func (*SendManyResponse) ProtoMessage()    {}
func (*SendManyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{17}
}

func (m *SendManyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendManyResponse.Unmarshal(m, b)
}
func (m *SendManyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendManyResponse.Marshal(b, m, deterministic)
}
func (m *SendManyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendManyResponse.Merge(m, src)
}
func (m *SendManyResponse) XXX_Size() int {
	return xxx_messageInfo_SendManyResponse.Size(m)
}
func (m *SendManyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendManyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendManyResponse proto.InternalMessageInfo

func (m *SendManyResponse) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type SendCoinsRequest struct {
	// The address to send coins to
	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// The amount in satoshis to send
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// The target number of blocks that this transaction should be confirmed
	// by.
	TargetConf int32 `protobuf:"varint,3,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	// A manual fee rate set in sat/byte that should be used when crafting the
	// transaction.
	SatPerByte int64 `protobuf:"varint,5,opt,name=sat_per_byte,json=satPerByte,proto3" json:"sat_per_byte,omitempty"`
	//
	//If set, then the amount field will be ignored, and lnd will attempt to
	//send all the coins under control of the internal wallet to the specified
	//address.
	SendAll bool `protobuf:"varint,6,opt,name=send_all,json=sendAll,proto3" json:"send_all,omitempty"`
	// An optional label for the transaction, limited to 500 characters.
	Label string `protobuf:"bytes,7,opt,name=label,proto3" json:"label,omitempty"`
	// The minimum number of confirmations each one of your outputs used for
	// the transaction must satisfy.
	MinConfs int32 `protobuf:"varint,8,opt,name=min_confs,json=minConfs,proto3" json:"min_confs,omitempty"`
	// Whether unconfirmed outputs should be used as inputs for the transaction.
	SpendUnconfirmed     bool     `protobuf:"varint,9,opt,name=spend_unconfirmed,json=spendUnconfirmed,proto3" json:"spend_unconfirmed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCoinsRequest) Reset()         { *m = SendCoinsRequest{} }
func (m *SendCoinsRequest) String() string { return proto.CompactTextString(m) }
func (*SendCoinsRequest) ProtoMessage()    {}
func (*SendCoinsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{18}
}

func (m *SendCoinsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCoinsRequest.Unmarshal(m, b)
}
func (m *SendCoinsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCoinsRequest.Marshal(b, m, deterministic)
}
func (m *SendCoinsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCoinsRequest.Merge(m, src)
}
func (m *SendCoinsRequest) XXX_Size() int {
	return xxx_messageInfo_SendCoinsRequest.Size(m)
}
func (m *SendCoinsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCoinsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendCoinsRequest proto.InternalMessageInfo

func (m *SendCoinsRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *SendCoinsRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SendCoinsRequest) GetTargetConf() int32 {
	if m != nil {
		return m.TargetConf
	}
	return 0
}

func (m *SendCoinsRequest) GetSatPerByte() int64 {
	if m != nil {
		return m.SatPerByte
	}
	return 0
}

func (m *SendCoinsRequest) GetSendAll() bool {
	if m != nil {
		return m.SendAll
	}
	return false
}

func (m *SendCoinsRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *SendCoinsRequest) GetMinConfs() int32 {
	if m != nil {
		return m.MinConfs
	}
	return 0
}

func (m *SendCoinsRequest) GetSpendUnconfirmed() bool {
	if m != nil {
		return m.SpendUnconfirmed
	}
	return false
}

type SendCoinsResponse struct {
	// The transaction ID of the transaction
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCoinsResponse) Reset()         { *m = SendCoinsResponse{} }
func (m *SendCoinsResponse) String() string { return proto.CompactTextString(m) }
func (*SendCoinsResponse) ProtoMessage()    {}
func (*SendCoinsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{19}
}

func (m *SendCoinsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCoinsResponse.Unmarshal(m, b)
}
func (m *SendCoinsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCoinsResponse.Marshal(b, m, deterministic)
}
func (m *SendCoinsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCoinsResponse.Merge(m, src)
}
func (m *SendCoinsResponse) XXX_Size() int {
	return xxx_messageInfo_SendCoinsResponse.Size(m)
}
func (m *SendCoinsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCoinsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendCoinsResponse proto.InternalMessageInfo

func (m *SendCoinsResponse) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type ListUnspentRequest struct {
	// The minimum number of confirmations to be included.
	MinConfs int32 `protobuf:"varint,1,opt,name=min_confs,json=minConfs,proto3" json:"min_confs,omitempty"`
	// The maximum number of confirmations to be included.
	MaxConfs             int32    `protobuf:"varint,2,opt,name=max_confs,json=maxConfs,proto3" json:"max_confs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUnspentRequest) Reset()         { *m = ListUnspentRequest{} }
func (m *ListUnspentRequest) String() string { return proto.CompactTextString(m) }
func (*ListUnspentRequest) ProtoMessage()    {}
func (*ListUnspentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{20}
}

func (m *ListUnspentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUnspentRequest.Unmarshal(m, b)
}
func (m *ListUnspentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUnspentRequest.Marshal(b, m, deterministic)
}
func (m *ListUnspentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUnspentRequest.Merge(m, src)
}
func (m *ListUnspentRequest) XXX_Size() int {
	return xxx_messageInfo_ListUnspentRequest.Size(m)
}
func (m *ListUnspentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUnspentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUnspentRequest proto.InternalMessageInfo

func (m *ListUnspentRequest) GetMinConfs() int32 {
	if m != nil {
		return m.MinConfs
	}
	return 0
}

func (m *ListUnspentRequest) GetMaxConfs() int32 {
	if m != nil {
		return m.MaxConfs
	}
	return 0
}

type ListUnspentResponse struct {
	// A list of utxos
	Utxos                []*Utxo  `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUnspentResponse) Reset()         { *m = ListUnspentResponse{} }
func (m *ListUnspentResponse) String() string { return proto.CompactTextString(m) }
func (*ListUnspentResponse) ProtoMessage()    {}
func (*ListUnspentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{21}
}

func (m *ListUnspentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUnspentResponse.Unmarshal(m, b)
}
func (m *ListUnspentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUnspentResponse.Marshal(b, m, deterministic)
}
func (m *ListUnspentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUnspentResponse.Merge(m, src)
}
func (m *ListUnspentResponse) XXX_Size() int {
	return xxx_messageInfo_ListUnspentResponse.Size(m)
}
func (m *ListUnspentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUnspentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUnspentResponse proto.InternalMessageInfo

func (m *ListUnspentResponse) GetUtxos() []*Utxo {
	if m != nil {
		return m.Utxos
	}
	return nil
}

type NewAddressRequest struct {
	// The address type
	Type                 AddressType `protobuf:"varint,1,opt,name=type,proto3,enum=lnrpc.AddressType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NewAddressRequest) Reset()         { *m = NewAddressRequest{} }
func (m *NewAddressRequest) String() string { return proto.CompactTextString(m) }
func (*NewAddressRequest) ProtoMessage()    {}
func (*NewAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{22}
}

func (m *NewAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAddressRequest.Unmarshal(m, b)
}
func (m *NewAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAddressRequest.Marshal(b, m, deterministic)
}
func (m *NewAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAddressRequest.Merge(m, src)
}
func (m *NewAddressRequest) XXX_Size() int {
	return xxx_messageInfo_NewAddressRequest.Size(m)
}
func (m *NewAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewAddressRequest proto.InternalMessageInfo

func (m *NewAddressRequest) GetType() AddressType {
	if m != nil {
		return m.Type
	}
	return AddressType_WITNESS_PUBKEY_HASH
}

type NewAddressResponse struct {
	// The newly generated wallet address
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAddressResponse) Reset()         { *m = NewAddressResponse{} }
func (m *NewAddressResponse) String() string { return proto.CompactTextString(m) }
func (*NewAddressResponse) ProtoMessage()    {}
func (*NewAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{23}
}

func (m *NewAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAddressResponse.Unmarshal(m, b)
}
func (m *NewAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAddressResponse.Marshal(b, m, deterministic)
}
func (m *NewAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAddressResponse.Merge(m, src)
}
func (m *NewAddressResponse) XXX_Size() int {
	return xxx_messageInfo_NewAddressResponse.Size(m)
}
func (m *NewAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewAddressResponse proto.InternalMessageInfo

func (m *NewAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SignMessageRequest struct {
	//
	//The message to be signed.
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	// If specified then will override msg, binary form.
	MsgBin []byte `protobuf:"bytes,2,opt,name=msg_bin,json=msgBin,proto3" json:"msg_bin,omitempty"`
	// Address to select for signing with.
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignMessageRequest) Reset()         { *m = SignMessageRequest{} }
func (m *SignMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SignMessageRequest) ProtoMessage()    {}
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{24}
}

func (m *SignMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessageRequest.Unmarshal(m, b)
}
func (m *SignMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessageRequest.Marshal(b, m, deterministic)
}
func (m *SignMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessageRequest.Merge(m, src)
}
func (m *SignMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SignMessageRequest.Size(m)
}
func (m *SignMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessageRequest proto.InternalMessageInfo

func (m *SignMessageRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *SignMessageRequest) GetMsgBin() []byte {
	if m != nil {
		return m.MsgBin
	}
	return nil
}

func (m *SignMessageRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SignMessageResponse struct {
	// The signature for the given message
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignMessageResponse) Reset()         { *m = SignMessageResponse{} }
func (m *SignMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SignMessageResponse) ProtoMessage()    {}
func (*SignMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{25}
}

func (m *SignMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessageResponse.Unmarshal(m, b)
}
func (m *SignMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessageResponse.Marshal(b, m, deterministic)
}
func (m *SignMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessageResponse.Merge(m, src)
}
func (m *SignMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SignMessageResponse.Size(m)
}
func (m *SignMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessageResponse proto.InternalMessageInfo

func (m *SignMessageResponse) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type ConnectPeerRequest struct {
	// Lightning address of the peer, in the format `<pubkey>@host`
	Addr *LightningAddress `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// If set, the daemon will attempt to persistently connect to the target
	// peer. Otherwise, the call will be synchronous.
	Perm bool `protobuf:"varint,2,opt,name=perm,proto3" json:"perm,omitempty"`
	//
	//The connection timeout value (in seconds) for this request. It won't affect
	//other requests.
	Timeout              uint64   `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectPeerRequest) Reset()         { *m = ConnectPeerRequest{} }
func (m *ConnectPeerRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectPeerRequest) ProtoMessage()    {}
func (*ConnectPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{26}
}

func (m *ConnectPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectPeerRequest.Unmarshal(m, b)
}
func (m *ConnectPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectPeerRequest.Marshal(b, m, deterministic)
}
func (m *ConnectPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectPeerRequest.Merge(m, src)
}
func (m *ConnectPeerRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectPeerRequest.Size(m)
}
func (m *ConnectPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectPeerRequest proto.InternalMessageInfo

func (m *ConnectPeerRequest) GetAddr() *LightningAddress {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *ConnectPeerRequest) GetPerm() bool {
	if m != nil {
		return m.Perm
	}
	return false
}

func (m *ConnectPeerRequest) GetTimeout() uint64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type ConnectPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectPeerResponse) Reset()         { *m = ConnectPeerResponse{} }
func (m *ConnectPeerResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectPeerResponse) ProtoMessage()    {}
func (*ConnectPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{27}
}

func (m *ConnectPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectPeerResponse.Unmarshal(m, b)
}
func (m *ConnectPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectPeerResponse.Marshal(b, m, deterministic)
}
func (m *ConnectPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectPeerResponse.Merge(m, src)
}
func (m *ConnectPeerResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectPeerResponse.Size(m)
}
func (m *ConnectPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectPeerResponse proto.InternalMessageInfo

type DisconnectPeerRequest struct {
	// The pubkey of the node to disconnect from
	PubKey               []byte   `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectPeerRequest) Reset()         { *m = DisconnectPeerRequest{} }
func (m *DisconnectPeerRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectPeerRequest) ProtoMessage()    {}
func (*DisconnectPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{28}
}

func (m *DisconnectPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectPeerRequest.Unmarshal(m, b)
}
func (m *DisconnectPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectPeerRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectPeerRequest.Merge(m, src)
}
func (m *DisconnectPeerRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectPeerRequest.Size(m)
}
func (m *DisconnectPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectPeerRequest proto.InternalMessageInfo

func (m *DisconnectPeerRequest) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

type DisconnectPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectPeerResponse) Reset()         { *m = DisconnectPeerResponse{} }
func (m *DisconnectPeerResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectPeerResponse) ProtoMessage()    {}
func (*DisconnectPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{29}
}

func (m *DisconnectPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectPeerResponse.Unmarshal(m, b)
}
func (m *DisconnectPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectPeerResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectPeerResponse.Merge(m, src)
}
func (m *DisconnectPeerResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectPeerResponse.Size(m)
}
func (m *DisconnectPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectPeerResponse proto.InternalMessageInfo

type HTLC struct {
	Incoming         bool   `protobuf:"varint,1,opt,name=incoming,proto3" json:"incoming,omitempty"`
	Amount           int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	HashLock         []byte `protobuf:"bytes,3,opt,name=hash_lock,json=hashLock,proto3" json:"hash_lock,omitempty"`
	ExpirationHeight uint32 `protobuf:"varint,4,opt,name=expiration_height,json=expirationHeight,proto3" json:"expiration_height,omitempty"`
	// Index identifying the htlc on the channel.
	HtlcIndex uint64 `protobuf:"varint,5,opt,name=htlc_index,json=htlcIndex,proto3" json:"htlc_index,omitempty"`
	// If this HTLC is involved in a forwarding operation, this field indicates
	// the forwarding channel. For an outgoing htlc, it is the incoming channel.
	// For an incoming htlc, it is the outgoing channel. When the htlc
	// originates from this node or this node is the final destination,
	// forwarding_channel will be zero. The forwarding channel will also be zero
	// for htlcs that need to be forwarded but don't have a forwarding decision
	// persisted yet.
	ForwardingChannel uint64 `protobuf:"varint,6,opt,name=forwarding_channel,json=forwardingChannel,proto3" json:"forwarding_channel,omitempty"`
	// Index identifying the htlc on the forwarding channel.
	ForwardingHtlcIndex  uint64   `protobuf:"varint,7,opt,name=forwarding_htlc_index,json=forwardingHtlcIndex,proto3" json:"forwarding_htlc_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTLC) Reset()         { *m = HTLC{} }
func (m *HTLC) String() string { return proto.CompactTextString(m) }
func (*HTLC) ProtoMessage()    {}
func (*HTLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{30}
}

func (m *HTLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTLC.Unmarshal(m, b)
}
func (m *HTLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTLC.Marshal(b, m, deterministic)
}
func (m *HTLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTLC.Merge(m, src)
}
func (m *HTLC) XXX_Size() int {
	return xxx_messageInfo_HTLC.Size(m)
}
func (m *HTLC) XXX_DiscardUnknown() {
	xxx_messageInfo_HTLC.DiscardUnknown(m)
}

var xxx_messageInfo_HTLC proto.InternalMessageInfo

func (m *HTLC) GetIncoming() bool {
	if m != nil {
		return m.Incoming
	}
	return false
}

func (m *HTLC) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *HTLC) GetHashLock() []byte {
	if m != nil {
		return m.HashLock
	}
	return nil
}

func (m *HTLC) GetExpirationHeight() uint32 {
	if m != nil {
		return m.ExpirationHeight
	}
	return 0
}

func (m *HTLC) GetHtlcIndex() uint64 {
	if m != nil {
		return m.HtlcIndex
	}
	return 0
}

func (m *HTLC) GetForwardingChannel() uint64 {
	if m != nil {
		return m.ForwardingChannel
	}
	return 0
}

func (m *HTLC) GetForwardingHtlcIndex() uint64 {
	if m != nil {
		return m.ForwardingHtlcIndex
	}
	return 0
}

type ChannelConstraints struct {
	//
	//The CSV delay expressed in relative blocks. If the channel is force closed,
	//we will need to wait for this many blocks before we can regain our funds.
	CsvDelay uint32 `protobuf:"varint,1,opt,name=csv_delay,json=csvDelay,proto3" json:"csv_delay,omitempty"`
	// The minimum satoshis this node is required to reserve in its balance.
	ChanReserveSat uint64 `protobuf:"varint,2,opt,name=chan_reserve_sat,json=chanReserveSat,proto3" json:"chan_reserve_sat,omitempty"`
	// The dust limit (in satoshis) of the initiator's commitment tx.
	DustLimitSat uint64 `protobuf:"varint,3,opt,name=dust_limit_sat,json=dustLimitSat,proto3" json:"dust_limit_sat,omitempty"`
	// The maximum amount of coins in millisatoshis that can be pending in this
	// channel.
	MaxPendingAmtMsat uint64 `protobuf:"varint,4,opt,name=max_pending_amt_msat,json=maxPendingAmtMsat,proto3" json:"max_pending_amt_msat,omitempty"`
	// The smallest HTLC in millisatoshis that the initiator will accept.
	MinHtlcMsat uint64 `protobuf:"varint,5,opt,name=min_htlc_msat,json=minHtlcMsat,proto3" json:"min_htlc_msat,omitempty"`
	// The total number of incoming HTLC's that the initiator will accept.
	MaxAcceptedHtlcs     uint32   `protobuf:"varint,6,opt,name=max_accepted_htlcs,json=maxAcceptedHtlcs,proto3" json:"max_accepted_htlcs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelConstraints) Reset()         { *m = ChannelConstraints{} }
func (m *ChannelConstraints) String() string { return proto.CompactTextString(m) }
func (*ChannelConstraints) ProtoMessage()    {}
func (*ChannelConstraints) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{31}
}

func (m *ChannelConstraints) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelConstraints.Unmarshal(m, b)
}
func (m *ChannelConstraints) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelConstraints.Marshal(b, m, deterministic)
}
func (m *ChannelConstraints) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelConstraints.Merge(m, src)
}
func (m *ChannelConstraints) XXX_Size() int {
	return xxx_messageInfo_ChannelConstraints.Size(m)
}
func (m *ChannelConstraints) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelConstraints.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelConstraints proto.InternalMessageInfo

func (m *ChannelConstraints) GetCsvDelay() uint32 {
	if m != nil {
		return m.CsvDelay
	}
	return 0
}

func (m *ChannelConstraints) GetChanReserveSat() uint64 {
	if m != nil {
		return m.ChanReserveSat
	}
	return 0
}

func (m *ChannelConstraints) GetDustLimitSat() uint64 {
	if m != nil {
		return m.DustLimitSat
	}
	return 0
}

func (m *ChannelConstraints) GetMaxPendingAmtMsat() uint64 {
	if m != nil {
		return m.MaxPendingAmtMsat
	}
	return 0
}

func (m *ChannelConstraints) GetMinHtlcMsat() uint64 {
	if m != nil {
		return m.MinHtlcMsat
	}
	return 0
}

func (m *ChannelConstraints) GetMaxAcceptedHtlcs() uint32 {
	if m != nil {
		return m.MaxAcceptedHtlcs
	}
	return 0
}

type Channel struct {
	// Whether this channel is active or not
	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	// The identity pubkey of the remote node
	RemotePubkey []byte `protobuf:"bytes,2,opt,name=remote_pubkey,json=remotePubkey,proto3" json:"remote_pubkey,omitempty"`
	//
	//The outpoint (txid:index) of the funding transaction. With this value, Bob
	//will be able to generate a signature for Alice's version of the commitment
	//transaction.
	ChannelPoint string `protobuf:"bytes,3,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	//
	//The unique channel ID for the channel. The first 3 bytes are the block
	//height, the next 3 the index within the block, and the last 2 bytes are the
	//output index for the channel.
	ChanId uint64 `protobuf:"varint,4,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// The total amount of funds held in this channel
	Capacity int64 `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	// This node's current balance in this channel
	LocalBalance int64 `protobuf:"varint,6,opt,name=local_balance,json=localBalance,proto3" json:"local_balance,omitempty"`
	// The counterparty's current balance in this channel
	RemoteBalance int64 `protobuf:"varint,7,opt,name=remote_balance,json=remoteBalance,proto3" json:"remote_balance,omitempty"`
	//
	//The amount calculated to be paid in fees for the current set of commitment
	//transactions. The fee amount is persisted with the channel in order to
	//allow the fee amount to be removed and recalculated with each channel state
	//update, including updates that happen after a system restart.
	CommitFee int64 `protobuf:"varint,8,opt,name=commit_fee,json=commitFee,proto3" json:"commit_fee,omitempty"`
	// The weight of the commitment transaction
	CommitWeight int64 `protobuf:"varint,9,opt,name=commit_weight,json=commitWeight,proto3" json:"commit_weight,omitempty"`
	//
	//The required number of satoshis per kilo-weight that the requester will pay
	//at all times, for both the funding transaction and commitment transaction.
	//This value can later be updated once the channel is open.
	FeePerKw int64 `protobuf:"varint,10,opt,name=fee_per_kw,json=feePerKw,proto3" json:"fee_per_kw,omitempty"`
	// The unsettled balance in this channel
	UnsettledBalance int64 `protobuf:"varint,11,opt,name=unsettled_balance,json=unsettledBalance,proto3" json:"unsettled_balance,omitempty"`
	//
	//The total number of satoshis we've sent within this channel.
	TotalSatoshisSent int64 `protobuf:"varint,12,opt,name=total_satoshis_sent,json=totalSatoshisSent,proto3" json:"total_satoshis_sent,omitempty"`
	//
	//The total number of satoshis we've received within this channel.
	TotalSatoshisReceived int64 `protobuf:"varint,13,opt,name=total_satoshis_received,json=totalSatoshisReceived,proto3" json:"total_satoshis_received,omitempty"`
	//
	//The total number of updates conducted within this channel.
	NumUpdates uint64 `protobuf:"varint,14,opt,name=num_updates,json=numUpdates,proto3" json:"num_updates,omitempty"`
	//
	//The list of active, uncleared HTLCs currently pending within the channel.
	PendingHtlcs []*HTLC `protobuf:"bytes,15,rep,name=pending_htlcs,json=pendingHtlcs,proto3" json:"pending_htlcs,omitempty"`
	//
	//Deprecated. The CSV delay expressed in relative blocks. If the channel is
	//force closed, we will need to wait for this many blocks before we can regain
	//our funds.
	CsvDelay uint32 `protobuf:"varint,16,opt,name=csv_delay,json=csvDelay,proto3" json:"csv_delay,omitempty"` // Deprecated: Do not use.
	// Whether this channel is advertised to the network or not.
	Private bool `protobuf:"varint,17,opt,name=private,proto3" json:"private,omitempty"`
	// True if we were the ones that created the channel.
	Initiator bool `protobuf:"varint,18,opt,name=initiator,proto3" json:"initiator,omitempty"`
	// A set of flags showing the current state of the channel.
	ChanStatusFlags string `protobuf:"bytes,19,opt,name=chan_status_flags,json=chanStatusFlags,proto3" json:"chan_status_flags,omitempty"`
	// Deprecated. The minimum satoshis this node is required to reserve in its
	// balance.
	LocalChanReserveSat int64 `protobuf:"varint,20,opt,name=local_chan_reserve_sat,json=localChanReserveSat,proto3" json:"local_chan_reserve_sat,omitempty"` // Deprecated: Do not use.
	//
	//Deprecated. The minimum satoshis the other node is required to reserve in
	//its balance.
	RemoteChanReserveSat int64 `protobuf:"varint,21,opt,name=remote_chan_reserve_sat,json=remoteChanReserveSat,proto3" json:"remote_chan_reserve_sat,omitempty"` // Deprecated: Do not use.
	// Deprecated. Use commitment_type.
	StaticRemoteKey bool `protobuf:"varint,22,opt,name=static_remote_key,json=staticRemoteKey,proto3" json:"static_remote_key,omitempty"` // Deprecated: Do not use.
	// The commitment type used by this channel.
	CommitmentType CommitmentType `protobuf:"varint,26,opt,name=commitment_type,json=commitmentType,proto3,enum=lnrpc.CommitmentType" json:"commitment_type,omitempty"`
	//
	//The number of seconds that the channel has been monitored by the channel
	//scoring system. Scores are currently not persisted, so this value may be
	//less than the lifetime of the channel [EXPERIMENTAL].
	Lifetime int64 `protobuf:"varint,23,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	//
	//The number of seconds that the remote peer has been observed as being online
	//by the channel scoring system over the lifetime of the channel
	//[EXPERIMENTAL].
	Uptime int64 `protobuf:"varint,24,opt,name=uptime,proto3" json:"uptime,omitempty"`
	//
	//Close address is the address that we will enforce payout to on cooperative
	//close if the channel was opened utilizing option upfront shutdown. This
	//value can be set on channel open by setting close_address in an open channel
	//request. If this value is not set, you can still choose a payout address by
	//cooperatively closing with the delivery_address field set.
	CloseAddress string `protobuf:"bytes,25,opt,name=close_address,json=closeAddress,proto3" json:"close_address,omitempty"`
	//
	//The amount that the initiator of the channel optionally pushed to the remote
	//party on channel open. This amount will be zero if the channel initiator did
	//not push any funds to the remote peer. If the initiator field is true, we
	//pushed this amount to our peer, if it is false, the remote peer pushed this
	//amount to us.
	PushAmountSat uint64 `protobuf:"varint,27,opt,name=push_amount_sat,json=pushAmountSat,proto3" json:"push_amount_sat,omitempty"`
	//
	//This uint32 indicates if this channel is to be considered 'frozen'. A
	//frozen channel doest not allow a cooperative channel close by the
	//initiator. The thaw_height is the height that this restriction stops
	//applying to the channel. This field is optional, not setting it or using a
	//value of zero will mean the channel has no additional restrictions. The
	//height can be interpreted in two ways: as a relative height if the value is
	//less than 500,000, or as an absolute height otherwise.
	ThawHeight uint32 `protobuf:"varint,28,opt,name=thaw_height,json=thawHeight,proto3" json:"thaw_height,omitempty"`
	// List constraints for the local node.
	LocalConstraints *ChannelConstraints `protobuf:"bytes,29,opt,name=local_constraints,json=localConstraints,proto3" json:"local_constraints,omitempty"`
	// List constraints for the remote node.
	RemoteConstraints    *ChannelConstraints `protobuf:"bytes,30,opt,name=remote_constraints,json=remoteConstraints,proto3" json:"remote_constraints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{32}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Channel) GetRemotePubkey() []byte {
	if m != nil {
		return m.RemotePubkey
	}
	return nil
}

func (m *Channel) GetChannelPoint() string {
	if m != nil {
		return m.ChannelPoint
	}
	return ""
}

func (m *Channel) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *Channel) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Channel) GetLocalBalance() int64 {
	if m != nil {
		return m.LocalBalance
	}
	return 0
}

func (m *Channel) GetRemoteBalance() int64 {
	if m != nil {
		return m.RemoteBalance
	}
	return 0
}

func (m *Channel) GetCommitFee() int64 {
	if m != nil {
		return m.CommitFee
	}
	return 0
}

func (m *Channel) GetCommitWeight() int64 {
	if m != nil {
		return m.CommitWeight
	}
	return 0
}

func (m *Channel) GetFeePerKw() int64 {
	if m != nil {
		return m.FeePerKw
	}
	return 0
}

func (m *Channel) GetUnsettledBalance() int64 {
	if m != nil {
		return m.UnsettledBalance
	}
	return 0
}

func (m *Channel) GetTotalSatoshisSent() int64 {
	if m != nil {
		return m.TotalSatoshisSent
	}
	return 0
}

func (m *Channel) GetTotalSatoshisReceived() int64 {
	if m != nil {
		return m.TotalSatoshisReceived
	}
	return 0
}

func (m *Channel) GetNumUpdates() uint64 {
	if m != nil {
		return m.NumUpdates
	}
	return 0
}

func (m *Channel) GetPendingHtlcs() []*HTLC {
	if m != nil {
		return m.PendingHtlcs
	}
	return nil
}

// Deprecated: Do not use.
func (m *Channel) GetCsvDelay() uint32 {
	if m != nil {
		return m.CsvDelay
	}
	return 0
}

func (m *Channel) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *Channel) GetInitiator() bool {
	if m != nil {
		return m.Initiator
	}
	return false
}

func (m *Channel) GetChanStatusFlags() string {
	if m != nil {
		return m.ChanStatusFlags
	}
	return ""
}

// Deprecated: Do not use.
func (m *Channel) GetLocalChanReserveSat() int64 {
	if m != nil {
		return m.LocalChanReserveSat
	}
	return 0
}

// Deprecated: Do not use.
func (m *Channel) GetRemoteChanReserveSat() int64 {
	if m != nil {
		return m.RemoteChanReserveSat
	}
	return 0
}

// Deprecated: Do not use.
func (m *Channel) GetStaticRemoteKey() bool {
	if m != nil {
		return m.StaticRemoteKey
	}
	return false
}

func (m *Channel) GetCommitmentType() CommitmentType {
	if m != nil {
		return m.CommitmentType
	}
	return CommitmentType_LEGACY
}

func (m *Channel) GetLifetime() int64 {
	if m != nil {
		return m.Lifetime
	}
	return 0
}

func (m *Channel) GetUptime() int64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *Channel) GetCloseAddress() string {
	if m != nil {
		return m.CloseAddress
	}
	return ""
}

func (m *Channel) GetPushAmountSat() uint64 {
	if m != nil {
		return m.PushAmountSat
	}
	return 0
}

func (m *Channel) GetThawHeight() uint32 {
	if m != nil {
		return m.ThawHeight
	}
	return 0
}

func (m *Channel) GetLocalConstraints() *ChannelConstraints {
	if m != nil {
		return m.LocalConstraints
	}
	return nil
}

func (m *Channel) GetRemoteConstraints() *ChannelConstraints {
	if m != nil {
		return m.RemoteConstraints
	}
	return nil
}

type ListChannelsRequest struct {
	ActiveOnly   bool `protobuf:"varint,1,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	InactiveOnly bool `protobuf:"varint,2,opt,name=inactive_only,json=inactiveOnly,proto3" json:"inactive_only,omitempty"`
	PublicOnly   bool `protobuf:"varint,3,opt,name=public_only,json=publicOnly,proto3" json:"public_only,omitempty"`
	PrivateOnly  bool `protobuf:"varint,4,opt,name=private_only,json=privateOnly,proto3" json:"private_only,omitempty"`
	//
	//Filters the response for channels with a target peer's pubkey. If peer is
	//empty, all channels will be returned.
	Peer                 []byte   `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChannelsRequest) Reset()         { *m = ListChannelsRequest{} }
func (m *ListChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*ListChannelsRequest) ProtoMessage()    {}
func (*ListChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{33}
}

func (m *ListChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChannelsRequest.Unmarshal(m, b)
}
func (m *ListChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChannelsRequest.Marshal(b, m, deterministic)
}
func (m *ListChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChannelsRequest.Merge(m, src)
}
func (m *ListChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_ListChannelsRequest.Size(m)
}
func (m *ListChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListChannelsRequest proto.InternalMessageInfo

func (m *ListChannelsRequest) GetActiveOnly() bool {
	if m != nil {
		return m.ActiveOnly
	}
	return false
}

func (m *ListChannelsRequest) GetInactiveOnly() bool {
	if m != nil {
		return m.InactiveOnly
	}
	return false
}

func (m *ListChannelsRequest) GetPublicOnly() bool {
	if m != nil {
		return m.PublicOnly
	}
	return false
}

func (m *ListChannelsRequest) GetPrivateOnly() bool {
	if m != nil {
		return m.PrivateOnly
	}
	return false
}

func (m *ListChannelsRequest) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

type ListChannelsResponse struct {
	// The list of active channels
	Channels             []*Channel `protobuf:"bytes,11,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListChannelsResponse) Reset()         { *m = ListChannelsResponse{} }
func (m *ListChannelsResponse) String() string { return proto.CompactTextString(m) }
func (*ListChannelsResponse) ProtoMessage()    {}
func (*ListChannelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{34}
}

func (m *ListChannelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChannelsResponse.Unmarshal(m, b)
}
func (m *ListChannelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChannelsResponse.Marshal(b, m, deterministic)
}
func (m *ListChannelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChannelsResponse.Merge(m, src)
}
func (m *ListChannelsResponse) XXX_Size() int {
	return xxx_messageInfo_ListChannelsResponse.Size(m)
}
func (m *ListChannelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChannelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListChannelsResponse proto.InternalMessageInfo

func (m *ListChannelsResponse) GetChannels() []*Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type ChannelCloseSummary struct {
	// The outpoint (txid:index) of the funding transaction.
	ChannelPoint string `protobuf:"bytes,1,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	//  The unique channel ID for the channel.
	ChanId uint64 `protobuf:"varint,2,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// The hash of the genesis block that this channel resides within.
	ChainHash string `protobuf:"bytes,3,opt,name=chain_hash,json=chainHash,proto3" json:"chain_hash,omitempty"`
	// The txid of the transaction which ultimately closed this channel.
	ClosingTxHash string `protobuf:"bytes,4,opt,name=closing_tx_hash,json=closingTxHash,proto3" json:"closing_tx_hash,omitempty"`
	// Public key of the remote peer that we formerly had a channel with.
	RemotePubkey []byte `protobuf:"bytes,5,opt,name=remote_pubkey,json=remotePubkey,proto3" json:"remote_pubkey,omitempty"`
	// Total capacity of the channel.
	Capacity int64 `protobuf:"varint,6,opt,name=capacity,proto3" json:"capacity,omitempty"`
	// Height at which the funding transaction was spent.
	CloseHeight uint32 `protobuf:"varint,7,opt,name=close_height,json=closeHeight,proto3" json:"close_height,omitempty"`
	// Settled balance at the time of channel closure
	SettledBalance int64 `protobuf:"varint,8,opt,name=settled_balance,json=settledBalance,proto3" json:"settled_balance,omitempty"`
	// The sum of all the time-locked outputs at the time of channel closure
	TimeLockedBalance int64 `protobuf:"varint,9,opt,name=time_locked_balance,json=timeLockedBalance,proto3" json:"time_locked_balance,omitempty"`
	// Details on how the channel was closed.
	CloseType ChannelCloseSummary_ClosureType `protobuf:"varint,10,opt,name=close_type,json=closeType,proto3,enum=lnrpc.ChannelCloseSummary_ClosureType" json:"close_type,omitempty"`
	//
	//Open initiator is the party that initiated opening the channel. Note that
	//this value may be unknown if the channel was closed before we migrated to
	//store open channel information after close.
	OpenInitiator Initiator `protobuf:"varint,11,opt,name=open_initiator,json=openInitiator,proto3,enum=lnrpc.Initiator" json:"open_initiator,omitempty"`
	//
	//Close initiator indicates which party initiated the close. This value will
	//be unknown for channels that were cooperatively closed before we started
	//tracking cooperative close initiators. Note that this indicates which party
	//initiated a close, and it is possible for both to initiate cooperative or
	//force closes, although only one party's close will be confirmed on chain.
	CloseInitiator       Initiator     `protobuf:"varint,12,opt,name=close_initiator,json=closeInitiator,proto3,enum=lnrpc.Initiator" json:"close_initiator,omitempty"`
	Resolutions          []*Resolution `protobuf:"bytes,13,rep,name=resolutions,proto3" json:"resolutions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChannelCloseSummary) Reset()         { *m = ChannelCloseSummary{} }
func (m *ChannelCloseSummary) String() string { return proto.CompactTextString(m) }
func (*ChannelCloseSummary) ProtoMessage()    {}
func (*ChannelCloseSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{35}
}

func (m *ChannelCloseSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCloseSummary.Unmarshal(m, b)
}
func (m *ChannelCloseSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCloseSummary.Marshal(b, m, deterministic)
}
func (m *ChannelCloseSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCloseSummary.Merge(m, src)
}
func (m *ChannelCloseSummary) XXX_Size() int {
	return xxx_messageInfo_ChannelCloseSummary.Size(m)
}
func (m *ChannelCloseSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCloseSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCloseSummary proto.InternalMessageInfo

func (m *ChannelCloseSummary) GetChannelPoint() string {
	if m != nil {
		return m.ChannelPoint
	}
	return ""
}

func (m *ChannelCloseSummary) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *ChannelCloseSummary) GetChainHash() string {
	if m != nil {
		return m.ChainHash
	}
	return ""
}

func (m *ChannelCloseSummary) GetClosingTxHash() string {
	if m != nil {
		return m.ClosingTxHash
	}
	return ""
}

func (m *ChannelCloseSummary) GetRemotePubkey() []byte {
	if m != nil {
		return m.RemotePubkey
	}
	return nil
}

func (m *ChannelCloseSummary) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ChannelCloseSummary) GetCloseHeight() uint32 {
	if m != nil {
		return m.CloseHeight
	}
	return 0
}

func (m *ChannelCloseSummary) GetSettledBalance() int64 {
	if m != nil {
		return m.SettledBalance
	}
	return 0
}

func (m *ChannelCloseSummary) GetTimeLockedBalance() int64 {
	if m != nil {
		return m.TimeLockedBalance
	}
	return 0
}

func (m *ChannelCloseSummary) GetCloseType() ChannelCloseSummary_ClosureType {
	if m != nil {
		return m.CloseType
	}
	return ChannelCloseSummary_COOPERATIVE_CLOSE
}

func (m *ChannelCloseSummary) GetOpenInitiator() Initiator {
	if m != nil {
		return m.OpenInitiator
	}
	return Initiator_INITIATOR_UNKNOWN
}

func (m *ChannelCloseSummary) GetCloseInitiator() Initiator {
	if m != nil {
		return m.CloseInitiator
	}
	return Initiator_INITIATOR_UNKNOWN
}

func (m *ChannelCloseSummary) GetResolutions() []*Resolution {
	if m != nil {
		return m.Resolutions
	}
	return nil
}

type Resolution struct {
	// The type of output we are resolving.
	ResolutionType ResolutionType `protobuf:"varint,1,opt,name=resolution_type,json=resolutionType,proto3,enum=lnrpc.ResolutionType" json:"resolution_type,omitempty"`
	// The outcome of our on chain action that resolved the outpoint.
	Outcome ResolutionOutcome `protobuf:"varint,2,opt,name=outcome,proto3,enum=lnrpc.ResolutionOutcome" json:"outcome,omitempty"`
	// The outpoint that was spent by the resolution.
	Outpoint *OutPoint `protobuf:"bytes,3,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	// The amount that was claimed by the resolution.
	AmountSat uint64 `protobuf:"varint,4,opt,name=amount_sat,json=amountSat,proto3" json:"amount_sat,omitempty"`
	// The hex-encoded transaction ID of the sweep transaction that spent the
	// output.
	SweepTxid            string   `protobuf:"bytes,5,opt,name=sweep_txid,json=sweepTxid,proto3" json:"sweep_txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resolution) Reset()         { *m = Resolution{} }
func (m *Resolution) String() string { return proto.CompactTextString(m) }
func (*Resolution) ProtoMessage()    {}
func (*Resolution) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{36}
}

func (m *Resolution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resolution.Unmarshal(m, b)
}
func (m *Resolution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resolution.Marshal(b, m, deterministic)
}
func (m *Resolution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resolution.Merge(m, src)
}
func (m *Resolution) XXX_Size() int {
	return xxx_messageInfo_Resolution.Size(m)
}
func (m *Resolution) XXX_DiscardUnknown() {
	xxx_messageInfo_Resolution.DiscardUnknown(m)
}

var xxx_messageInfo_Resolution proto.InternalMessageInfo

func (m *Resolution) GetResolutionType() ResolutionType {
	if m != nil {
		return m.ResolutionType
	}
	return ResolutionType_TYPE_UNKNOWN
}

func (m *Resolution) GetOutcome() ResolutionOutcome {
	if m != nil {
		return m.Outcome
	}
	return ResolutionOutcome_OUTCOME_UNKNOWN
}

func (m *Resolution) GetOutpoint() *OutPoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *Resolution) GetAmountSat() uint64 {
	if m != nil {
		return m.AmountSat
	}
	return 0
}

func (m *Resolution) GetSweepTxid() string {
	if m != nil {
		return m.SweepTxid
	}
	return ""
}

type ClosedChannelsRequest struct {
	Cooperative          bool     `protobuf:"varint,1,opt,name=cooperative,proto3" json:"cooperative,omitempty"`
	LocalForce           bool     `protobuf:"varint,2,opt,name=local_force,json=localForce,proto3" json:"local_force,omitempty"`
	RemoteForce          bool     `protobuf:"varint,3,opt,name=remote_force,json=remoteForce,proto3" json:"remote_force,omitempty"`
	Breach               bool     `protobuf:"varint,4,opt,name=breach,proto3" json:"breach,omitempty"`
	FundingCanceled      bool     `protobuf:"varint,5,opt,name=funding_canceled,json=fundingCanceled,proto3" json:"funding_canceled,omitempty"`
	Abandoned            bool     `protobuf:"varint,6,opt,name=abandoned,proto3" json:"abandoned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClosedChannelsRequest) Reset()         { *m = ClosedChannelsRequest{} }
func (m *ClosedChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*ClosedChannelsRequest) ProtoMessage()    {}
func (*ClosedChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{37}
}

func (m *ClosedChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosedChannelsRequest.Unmarshal(m, b)
}
func (m *ClosedChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosedChannelsRequest.Marshal(b, m, deterministic)
}
func (m *ClosedChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosedChannelsRequest.Merge(m, src)
}
func (m *ClosedChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_ClosedChannelsRequest.Size(m)
}
func (m *ClosedChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosedChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClosedChannelsRequest proto.InternalMessageInfo

func (m *ClosedChannelsRequest) GetCooperative() bool {
	if m != nil {
		return m.Cooperative
	}
	return false
}

func (m *ClosedChannelsRequest) GetLocalForce() bool {
	if m != nil {
		return m.LocalForce
	}
	return false
}

func (m *ClosedChannelsRequest) GetRemoteForce() bool {
	if m != nil {
		return m.RemoteForce
	}
	return false
}

func (m *ClosedChannelsRequest) GetBreach() bool {
	if m != nil {
		return m.Breach
	}
	return false
}

func (m *ClosedChannelsRequest) GetFundingCanceled() bool {
	if m != nil {
		return m.FundingCanceled
	}
	return false
}

func (m *ClosedChannelsRequest) GetAbandoned() bool {
	if m != nil {
		return m.Abandoned
	}
	return false
}

type ClosedChannelsResponse struct {
	Channels             []*ChannelCloseSummary `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ClosedChannelsResponse) Reset()         { *m = ClosedChannelsResponse{} }
func (m *ClosedChannelsResponse) String() string { return proto.CompactTextString(m) }
func (*ClosedChannelsResponse) ProtoMessage()    {}
func (*ClosedChannelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{38}
}

func (m *ClosedChannelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosedChannelsResponse.Unmarshal(m, b)
}
func (m *ClosedChannelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosedChannelsResponse.Marshal(b, m, deterministic)
}
func (m *ClosedChannelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosedChannelsResponse.Merge(m, src)
}
func (m *ClosedChannelsResponse) XXX_Size() int {
	return xxx_messageInfo_ClosedChannelsResponse.Size(m)
}
func (m *ClosedChannelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosedChannelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClosedChannelsResponse proto.InternalMessageInfo

func (m *ClosedChannelsResponse) GetChannels() []*ChannelCloseSummary {
	if m != nil {
		return m.Channels
	}
	return nil
}

type Peer struct {
	// The identity pubkey of the peer
	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	// Network address of the peer; eg `127.0.0.1:10011`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Bytes of data transmitted to this peer
	BytesSent uint64 `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	// Bytes of data transmitted from this peer
	BytesRecv uint64 `protobuf:"varint,5,opt,name=bytes_recv,json=bytesRecv,proto3" json:"bytes_recv,omitempty"`
	// Satoshis sent to this peer
	SatSent int64 `protobuf:"varint,6,opt,name=sat_sent,json=satSent,proto3" json:"sat_sent,omitempty"`
	// Satoshis received from this peer
	SatRecv int64 `protobuf:"varint,7,opt,name=sat_recv,json=satRecv,proto3" json:"sat_recv,omitempty"`
	// A channel is inbound if the counterparty initiated the channel
	Inbound bool `protobuf:"varint,8,opt,name=inbound,proto3" json:"inbound,omitempty"`
	// Ping time to this peer
	PingTime int64 `protobuf:"varint,9,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	// The type of sync we are currently performing with this peer.
	SyncType Peer_SyncType `protobuf:"varint,10,opt,name=sync_type,json=syncType,proto3,enum=lnrpc.Peer_SyncType" json:"sync_type,omitempty"`
	// Features advertised by the remote peer in their init message.
	Features map[uint32]*Feature `protobuf:"bytes,11,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//
	//The latest errors received from our peer with timestamps, limited to the 10
	//most recent errors. These errors are tracked across peer connections, but
	//are not persisted across lnd restarts. Note that these errors are only
	//stored for peers that we have channels open with, to prevent peers from
	//spamming us with errors at no cost.
	Errors []*TimestampedError `protobuf:"bytes,12,rep,name=errors,proto3" json:"errors,omitempty"`
	//
	//The number of times we have recorded this peer going offline or coming
	//online, recorded across restarts. Note that this value is decreased over
	//time if the peer has not recently flapped, so that we can forgive peers
	//with historically high flap counts.
	FlapCount int32 `protobuf:"varint,13,opt,name=flap_count,json=flapCount,proto3" json:"flap_count,omitempty"`
	//
	//The timestamp of the last flap we observed for this peer. If this value is
	//zero, we have not observed any flaps for this peer.
	LastFlapNs           int64    `protobuf:"varint,14,opt,name=last_flap_ns,json=lastFlapNs,proto3" json:"last_flap_ns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{39}
}

func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Peer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Peer) GetBytesSent() uint64 {
	if m != nil {
		return m.BytesSent
	}
	return 0
}

func (m *Peer) GetBytesRecv() uint64 {
	if m != nil {
		return m.BytesRecv
	}
	return 0
}

func (m *Peer) GetSatSent() int64 {
	if m != nil {
		return m.SatSent
	}
	return 0
}

func (m *Peer) GetSatRecv() int64 {
	if m != nil {
		return m.SatRecv
	}
	return 0
}

func (m *Peer) GetInbound() bool {
	if m != nil {
		return m.Inbound
	}
	return false
}

func (m *Peer) GetPingTime() int64 {
	if m != nil {
		return m.PingTime
	}
	return 0
}

func (m *Peer) GetSyncType() Peer_SyncType {
	if m != nil {
		return m.SyncType
	}
	return Peer_UNKNOWN_SYNC
}

func (m *Peer) GetFeatures() map[uint32]*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Peer) GetErrors() []*TimestampedError {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *Peer) GetFlapCount() int32 {
	if m != nil {
		return m.FlapCount
	}
	return 0
}

func (m *Peer) GetLastFlapNs() int64 {
	if m != nil {
		return m.LastFlapNs
	}
	return 0
}

type TimestampedError struct {
	// The unix timestamp in seconds when the error occurred.
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The string representation of the error sent by our peer.
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimestampedError) Reset()         { *m = TimestampedError{} }
func (m *TimestampedError) String() string { return proto.CompactTextString(m) }
func (*TimestampedError) ProtoMessage()    {}
func (*TimestampedError) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{40}
}

func (m *TimestampedError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampedError.Unmarshal(m, b)
}
func (m *TimestampedError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampedError.Marshal(b, m, deterministic)
}
func (m *TimestampedError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampedError.Merge(m, src)
}
func (m *TimestampedError) XXX_Size() int {
	return xxx_messageInfo_TimestampedError.Size(m)
}
func (m *TimestampedError) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampedError.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampedError proto.InternalMessageInfo

func (m *TimestampedError) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TimestampedError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ListPeersRequest struct {
	//
	//If true, only the last error that our peer sent us will be returned with
	//the peer's information, rather than the full set of historic errors we have
	//stored.
	LatestError          bool     `protobuf:"varint,1,opt,name=latest_error,json=latestError,proto3" json:"latest_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeersRequest) Reset()         { *m = ListPeersRequest{} }
func (m *ListPeersRequest) String() string { return proto.CompactTextString(m) }
func (*ListPeersRequest) ProtoMessage()    {}
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{41}
}

func (m *ListPeersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeersRequest.Unmarshal(m, b)
}
func (m *ListPeersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeersRequest.Marshal(b, m, deterministic)
}
func (m *ListPeersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeersRequest.Merge(m, src)
}
func (m *ListPeersRequest) XXX_Size() int {
	return xxx_messageInfo_ListPeersRequest.Size(m)
}
func (m *ListPeersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeersRequest proto.InternalMessageInfo

func (m *ListPeersRequest) GetLatestError() bool {
	if m != nil {
		return m.LatestError
	}
	return false
}

type ListPeersResponse struct {
	// The list of currently connected peers
	Peers                []*Peer  `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeersResponse) Reset()         { *m = ListPeersResponse{} }
func (m *ListPeersResponse) String() string { return proto.CompactTextString(m) }
func (*ListPeersResponse) ProtoMessage()    {}
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{42}
}

func (m *ListPeersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeersResponse.Unmarshal(m, b)
}
func (m *ListPeersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeersResponse.Marshal(b, m, deterministic)
}
func (m *ListPeersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeersResponse.Merge(m, src)
}
func (m *ListPeersResponse) XXX_Size() int {
	return xxx_messageInfo_ListPeersResponse.Size(m)
}
func (m *ListPeersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeersResponse proto.InternalMessageInfo

func (m *ListPeersResponse) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type PeerEventSubscription struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerEventSubscription) Reset()         { *m = PeerEventSubscription{} }
func (m *PeerEventSubscription) String() string { return proto.CompactTextString(m) }
func (*PeerEventSubscription) ProtoMessage()    {}
func (*PeerEventSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{43}
}

func (m *PeerEventSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerEventSubscription.Unmarshal(m, b)
}
func (m *PeerEventSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerEventSubscription.Marshal(b, m, deterministic)
}
func (m *PeerEventSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerEventSubscription.Merge(m, src)
}
func (m *PeerEventSubscription) XXX_Size() int {
	return xxx_messageInfo_PeerEventSubscription.Size(m)
}
func (m *PeerEventSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerEventSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_PeerEventSubscription proto.InternalMessageInfo

type PeerEvent struct {
	// The identity pubkey of the peer.
	PubKey               []byte              `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Type                 PeerEvent_EventType `protobuf:"varint,2,opt,name=type,proto3,enum=lnrpc.PeerEvent_EventType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PeerEvent) Reset()         { *m = PeerEvent{} }
func (m *PeerEvent) String() string { return proto.CompactTextString(m) }
func (*PeerEvent) ProtoMessage()    {}
func (*PeerEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{44}
}

func (m *PeerEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerEvent.Unmarshal(m, b)
}
func (m *PeerEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerEvent.Marshal(b, m, deterministic)
}
func (m *PeerEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerEvent.Merge(m, src)
}
func (m *PeerEvent) XXX_Size() int {
	return xxx_messageInfo_PeerEvent.Size(m)
}
func (m *PeerEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerEvent.DiscardUnknown(m)
}

var xxx_messageInfo_PeerEvent proto.InternalMessageInfo

func (m *PeerEvent) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *PeerEvent) GetType() PeerEvent_EventType {
	if m != nil {
		return m.Type
	}
	return PeerEvent_PEER_ONLINE
}

type GetInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{45}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

type GetInfoResponse struct {
	// The version of the LND software that the node is running.
	Version string `protobuf:"bytes,14,opt,name=version,proto3" json:"version,omitempty"`
	// The SHA1 commit hash that the daemon is compiled with.
	CommitHash string `protobuf:"bytes,20,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	// The identity pubkey of the current node.
	IdentityPubkey []byte `protobuf:"bytes,1,opt,name=identity_pubkey,json=identityPubkey,proto3" json:"identity_pubkey,omitempty"`
	// If applicable, the alias of the current node, e.g. "bob"
	Alias string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	// The color of the current node in hex code format
	Color string `protobuf:"bytes,17,opt,name=color,proto3" json:"color,omitempty"`
	// Number of pending channels
	NumPendingChannels uint32 `protobuf:"varint,3,opt,name=num_pending_channels,json=numPendingChannels,proto3" json:"num_pending_channels,omitempty"`
	// Number of active channels
	NumActiveChannels uint32 `protobuf:"varint,4,opt,name=num_active_channels,json=numActiveChannels,proto3" json:"num_active_channels,omitempty"`
	// Number of inactive channels
	NumInactiveChannels uint32 `protobuf:"varint,15,opt,name=num_inactive_channels,json=numInactiveChannels,proto3" json:"num_inactive_channels,omitempty"`
	// Number of peers
	NumPeers uint32 `protobuf:"varint,5,opt,name=num_peers,json=numPeers,proto3" json:"num_peers,omitempty"`
	// The node's current view of the height of the best block
	BlockHeight uint32 `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// The node's current view of the hash of the best block
	BlockHash string `protobuf:"bytes,8,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Timestamp of the block best known to the wallet
	BestHeaderTimestamp int64 `protobuf:"varint,13,opt,name=best_header_timestamp,json=bestHeaderTimestamp,proto3" json:"best_header_timestamp,omitempty"`
	// Whether the wallet's view is synced to the main chain
	SyncedToChain bool `protobuf:"varint,9,opt,name=synced_to_chain,json=syncedToChain,proto3" json:"synced_to_chain,omitempty"`
	// Whether we consider ourselves synced with the public channel graph.
	SyncedToGraph bool `protobuf:"varint,18,opt,name=synced_to_graph,json=syncedToGraph,proto3" json:"synced_to_graph,omitempty"`
	//
	//Whether the current node is connected to testnet. This field is
	//deprecated and the network field should be used instead
	Testnet bool `protobuf:"varint,10,opt,name=testnet,proto3" json:"testnet,omitempty"` // Deprecated: Do not use.
	// A list of active chains the node is connected to
	Chains []*Chain `protobuf:"bytes,16,rep,name=chains,proto3" json:"chains,omitempty"`
	// The URIs of the current node.
	Uris []string `protobuf:"bytes,12,rep,name=uris,proto3" json:"uris,omitempty"`
	//
	//Features that our node has advertised in our init message, node
	//announcements and invoices.
	Features             map[uint32]*Feature `protobuf:"bytes,19,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{46}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetInfoResponse) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

func (m *GetInfoResponse) GetIdentityPubkey() []byte {
	if m != nil {
		return m.IdentityPubkey
	}
	return nil
}

func (m *GetInfoResponse) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *GetInfoResponse) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *GetInfoResponse) GetNumPendingChannels() uint32 {
	if m != nil {
		return m.NumPendingChannels
	}
	return 0
}

func (m *GetInfoResponse) GetNumActiveChannels() uint32 {
	if m != nil {
		return m.NumActiveChannels
	}
	return 0
}

func (m *GetInfoResponse) GetNumInactiveChannels() uint32 {
	if m != nil {
		return m.NumInactiveChannels
	}
	return 0
}

func (m *GetInfoResponse) GetNumPeers() uint32 {
	if m != nil {
		return m.NumPeers
	}
	return 0
}

func (m *GetInfoResponse) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *GetInfoResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *GetInfoResponse) GetBestHeaderTimestamp() int64 {
	if m != nil {
		return m.BestHeaderTimestamp
	}
	return 0
}

func (m *GetInfoResponse) GetSyncedToChain() bool {
	if m != nil {
		return m.SyncedToChain
	}
	return false
}

func (m *GetInfoResponse) GetSyncedToGraph() bool {
	if m != nil {
		return m.SyncedToGraph
	}
	return false
}

// Deprecated: Do not use.
func (m *GetInfoResponse) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *GetInfoResponse) GetChains() []*Chain {
	if m != nil {
		return m.Chains
	}
	return nil
}

func (m *GetInfoResponse) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func (m *GetInfoResponse) GetFeatures() map[uint32]*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

type GetRecoveryInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecoveryInfoRequest) Reset()         { *m = GetRecoveryInfoRequest{} }
func (m *GetRecoveryInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecoveryInfoRequest) ProtoMessage()    {}
func (*GetRecoveryInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{47}
}

func (m *GetRecoveryInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecoveryInfoRequest.Unmarshal(m, b)
}
func (m *GetRecoveryInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecoveryInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetRecoveryInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecoveryInfoRequest.Merge(m, src)
}
func (m *GetRecoveryInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecoveryInfoRequest.Size(m)
}
func (m *GetRecoveryInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecoveryInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecoveryInfoRequest proto.InternalMessageInfo

type GetRecoveryInfoResponse struct {
	// Whether the wallet is in recovery mode
	RecoveryMode bool `protobuf:"varint,1,opt,name=recovery_mode,json=recoveryMode,proto3" json:"recovery_mode,omitempty"`
	// Whether the wallet recovery progress is finished
	RecoveryFinished bool `protobuf:"varint,2,opt,name=recovery_finished,json=recoveryFinished,proto3" json:"recovery_finished,omitempty"`
	// The recovery progress, ranging from 0 to 1.
	Progress             float64  `protobuf:"fixed64,3,opt,name=progress,proto3" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecoveryInfoResponse) Reset()         { *m = GetRecoveryInfoResponse{} }
func (m *GetRecoveryInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecoveryInfoResponse) ProtoMessage()    {}
func (*GetRecoveryInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{48}
}

func (m *GetRecoveryInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecoveryInfoResponse.Unmarshal(m, b)
}
func (m *GetRecoveryInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecoveryInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetRecoveryInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecoveryInfoResponse.Merge(m, src)
}
func (m *GetRecoveryInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecoveryInfoResponse.Size(m)
}
func (m *GetRecoveryInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecoveryInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecoveryInfoResponse proto.InternalMessageInfo

func (m *GetRecoveryInfoResponse) GetRecoveryMode() bool {
	if m != nil {
		return m.RecoveryMode
	}
	return false
}

func (m *GetRecoveryInfoResponse) GetRecoveryFinished() bool {
	if m != nil {
		return m.RecoveryFinished
	}
	return false
}

func (m *GetRecoveryInfoResponse) GetProgress() float64 {
	if m != nil {
		return m.Progress
	}
	return 0
}

type Chain struct {
	// The blockchain the node is on (eg bitcoin, litecoin)
	Chain string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	// The network the node is on (eg regtest, testnet, mainnet)
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{49}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *Chain) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type ConfirmationUpdate struct {
	BlockSha             []byte   `protobuf:"bytes,1,opt,name=block_sha,json=blockSha,proto3" json:"block_sha,omitempty"`
	BlockHeight          int32    `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	NumConfsLeft         uint32   `protobuf:"varint,3,opt,name=num_confs_left,json=numConfsLeft,proto3" json:"num_confs_left,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmationUpdate) Reset()         { *m = ConfirmationUpdate{} }
func (m *ConfirmationUpdate) String() string { return proto.CompactTextString(m) }
func (*ConfirmationUpdate) ProtoMessage()    {}
func (*ConfirmationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{50}
}

func (m *ConfirmationUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmationUpdate.Unmarshal(m, b)
}
func (m *ConfirmationUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmationUpdate.Marshal(b, m, deterministic)
}
func (m *ConfirmationUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmationUpdate.Merge(m, src)
}
func (m *ConfirmationUpdate) XXX_Size() int {
	return xxx_messageInfo_ConfirmationUpdate.Size(m)
}
func (m *ConfirmationUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmationUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmationUpdate proto.InternalMessageInfo

func (m *ConfirmationUpdate) GetBlockSha() []byte {
	if m != nil {
		return m.BlockSha
	}
	return nil
}

func (m *ConfirmationUpdate) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ConfirmationUpdate) GetNumConfsLeft() uint32 {
	if m != nil {
		return m.NumConfsLeft
	}
	return 0
}

type ChannelOpenUpdate struct {
	ChannelPoint         *ChannelPoint `protobuf:"bytes,1,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChannelOpenUpdate) Reset()         { *m = ChannelOpenUpdate{} }
func (m *ChannelOpenUpdate) String() string { return proto.CompactTextString(m) }
func (*ChannelOpenUpdate) ProtoMessage()    {}
func (*ChannelOpenUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{51}
}

func (m *ChannelOpenUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelOpenUpdate.Unmarshal(m, b)
}
func (m *ChannelOpenUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelOpenUpdate.Marshal(b, m, deterministic)
}
func (m *ChannelOpenUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelOpenUpdate.Merge(m, src)
}
func (m *ChannelOpenUpdate) XXX_Size() int {
	return xxx_messageInfo_ChannelOpenUpdate.Size(m)
}
func (m *ChannelOpenUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelOpenUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelOpenUpdate proto.InternalMessageInfo

func (m *ChannelOpenUpdate) GetChannelPoint() *ChannelPoint {
	if m != nil {
		return m.ChannelPoint
	}
	return nil
}

type ChannelCloseUpdate struct {
	ClosingTxid          []byte   `protobuf:"bytes,1,opt,name=closing_txid,json=closingTxid,proto3" json:"closing_txid,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelCloseUpdate) Reset()         { *m = ChannelCloseUpdate{} }
func (m *ChannelCloseUpdate) String() string { return proto.CompactTextString(m) }
func (*ChannelCloseUpdate) ProtoMessage()    {}
func (*ChannelCloseUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{52}
}

func (m *ChannelCloseUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelCloseUpdate.Unmarshal(m, b)
}
func (m *ChannelCloseUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelCloseUpdate.Marshal(b, m, deterministic)
}
func (m *ChannelCloseUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelCloseUpdate.Merge(m, src)
}
func (m *ChannelCloseUpdate) XXX_Size() int {
	return xxx_messageInfo_ChannelCloseUpdate.Size(m)
}
func (m *ChannelCloseUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelCloseUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelCloseUpdate proto.InternalMessageInfo

func (m *ChannelCloseUpdate) GetClosingTxid() []byte {
	if m != nil {
		return m.ClosingTxid
	}
	return nil
}

func (m *ChannelCloseUpdate) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type CloseChannelRequest struct {
	//
	//The outpoint (txid:index) of the funding transaction. With this value, Bob
	//will be able to generate a signature for Alice's version of the commitment
	//transaction.
	ChannelPoint *ChannelPoint `protobuf:"bytes,1,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	// If true, then the channel will be closed forcibly. This means the
	// current commitment transaction will be signed and broadcast.
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	// The target number of blocks that the closure transaction should be
	// confirmed by.
	TargetConf int32 `protobuf:"varint,3,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	// A manual fee rate set in sat/byte that should be used when crafting the
	// closure transaction.
	SatPerByte int64 `protobuf:"varint,4,opt,name=sat_per_byte,json=satPerByte,proto3" json:"sat_per_byte,omitempty"`
	//
	//An optional address to send funds to in the case of a cooperative close.
	//If the channel was opened with an upfront shutdown script and this field
	//is set, the request to close will fail because the channel must pay out
	//to the upfront shutdown addresss.
	DeliveryAddress      string   `protobuf:"bytes,5,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseChannelRequest) Reset()         { *m = CloseChannelRequest{} }
func (m *CloseChannelRequest) String() string { return proto.CompactTextString(m) }
func (*CloseChannelRequest) ProtoMessage()    {}
func (*CloseChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{53}
}

func (m *CloseChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseChannelRequest.Unmarshal(m, b)
}
func (m *CloseChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseChannelRequest.Marshal(b, m, deterministic)
}
func (m *CloseChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseChannelRequest.Merge(m, src)
}
func (m *CloseChannelRequest) XXX_Size() int {
	return xxx_messageInfo_CloseChannelRequest.Size(m)
}
func (m *CloseChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseChannelRequest proto.InternalMessageInfo

func (m *CloseChannelRequest) GetChannelPoint() *ChannelPoint {
	if m != nil {
		return m.ChannelPoint
	}
	return nil
}

func (m *CloseChannelRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *CloseChannelRequest) GetTargetConf() int32 {
	if m != nil {
		return m.TargetConf
	}
	return 0
}

func (m *CloseChannelRequest) GetSatPerByte() int64 {
	if m != nil {
		return m.SatPerByte
	}
	return 0
}

func (m *CloseChannelRequest) GetDeliveryAddress() string {
	if m != nil {
		return m.DeliveryAddress
	}
	return ""
}

type CloseStatusUpdate struct {
	// Types that are valid to be assigned to Update:
	//	*CloseStatusUpdate_ClosePending
	//	*CloseStatusUpdate_ChanClose
	Update               isCloseStatusUpdate_Update `protobuf_oneof:"update"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CloseStatusUpdate) Reset()         { *m = CloseStatusUpdate{} }
func (m *CloseStatusUpdate) String() string { return proto.CompactTextString(m) }
func (*CloseStatusUpdate) ProtoMessage()    {}
func (*CloseStatusUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{54}
}

func (m *CloseStatusUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseStatusUpdate.Unmarshal(m, b)
}
func (m *CloseStatusUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseStatusUpdate.Marshal(b, m, deterministic)
}
func (m *CloseStatusUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseStatusUpdate.Merge(m, src)
}
func (m *CloseStatusUpdate) XXX_Size() int {
	return xxx_messageInfo_CloseStatusUpdate.Size(m)
}
func (m *CloseStatusUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseStatusUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_CloseStatusUpdate proto.InternalMessageInfo

type isCloseStatusUpdate_Update interface {
	isCloseStatusUpdate_Update()
}

type CloseStatusUpdate_ClosePending struct {
	ClosePending *PendingUpdate `protobuf:"bytes,1,opt,name=close_pending,json=closePending,proto3,oneof"`
}

type CloseStatusUpdate_ChanClose struct {
	ChanClose *ChannelCloseUpdate `protobuf:"bytes,3,opt,name=chan_close,json=chanClose,proto3,oneof"`
}

func (*CloseStatusUpdate_ClosePending) isCloseStatusUpdate_Update() {}

func (*CloseStatusUpdate_ChanClose) isCloseStatusUpdate_Update() {}

func (m *CloseStatusUpdate) GetUpdate() isCloseStatusUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *CloseStatusUpdate) GetClosePending() *PendingUpdate {
	if x, ok := m.GetUpdate().(*CloseStatusUpdate_ClosePending); ok {
		return x.ClosePending
	}
	return nil
}

func (m *CloseStatusUpdate) GetChanClose() *ChannelCloseUpdate {
	if x, ok := m.GetUpdate().(*CloseStatusUpdate_ChanClose); ok {
		return x.ChanClose
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CloseStatusUpdate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CloseStatusUpdate_ClosePending)(nil),
		(*CloseStatusUpdate_ChanClose)(nil),
	}
}

type PendingUpdate struct {
	Txid                 []byte   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	OutputIndex          uint32   `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingUpdate) Reset()         { *m = PendingUpdate{} }
func (m *PendingUpdate) String() string { return proto.CompactTextString(m) }
func (*PendingUpdate) ProtoMessage()    {}
func (*PendingUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{55}
}

func (m *PendingUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingUpdate.Unmarshal(m, b)
}
func (m *PendingUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingUpdate.Marshal(b, m, deterministic)
}
func (m *PendingUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingUpdate.Merge(m, src)
}
func (m *PendingUpdate) XXX_Size() int {
	return xxx_messageInfo_PendingUpdate.Size(m)
}
func (m *PendingUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_PendingUpdate proto.InternalMessageInfo

func (m *PendingUpdate) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *PendingUpdate) GetOutputIndex() uint32 {
	if m != nil {
		return m.OutputIndex
	}
	return 0
}

type ReadyForPsbtFunding struct {
	//
	//The P2WSH address of the channel funding multisig address that the below
	//specified amount in satoshis needs to be sent to.
	FundingAddress string `protobuf:"bytes,1,opt,name=funding_address,json=fundingAddress,proto3" json:"funding_address,omitempty"`
	//
	//The exact amount in satoshis that needs to be sent to the above address to
	//fund the pending channel.
	FundingAmount int64 `protobuf:"varint,2,opt,name=funding_amount,json=fundingAmount,proto3" json:"funding_amount,omitempty"`
	//
	//A raw PSBT that contains the pending channel output. If a base PSBT was
	//provided in the PsbtShim, this is the base PSBT with one additional output.
	//If no base PSBT was specified, this is an otherwise empty PSBT with exactly
	//one output.
	Psbt                 []byte   `protobuf:"bytes,3,opt,name=psbt,proto3" json:"psbt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadyForPsbtFunding) Reset()         { *m = ReadyForPsbtFunding{} }
func (m *ReadyForPsbtFunding) String() string { return proto.CompactTextString(m) }
func (*ReadyForPsbtFunding) ProtoMessage()    {}
func (*ReadyForPsbtFunding) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{56}
}

func (m *ReadyForPsbtFunding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadyForPsbtFunding.Unmarshal(m, b)
}
func (m *ReadyForPsbtFunding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadyForPsbtFunding.Marshal(b, m, deterministic)
}
func (m *ReadyForPsbtFunding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadyForPsbtFunding.Merge(m, src)
}
func (m *ReadyForPsbtFunding) XXX_Size() int {
	return xxx_messageInfo_ReadyForPsbtFunding.Size(m)
}
func (m *ReadyForPsbtFunding) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadyForPsbtFunding.DiscardUnknown(m)
}

var xxx_messageInfo_ReadyForPsbtFunding proto.InternalMessageInfo

func (m *ReadyForPsbtFunding) GetFundingAddress() string {
	if m != nil {
		return m.FundingAddress
	}
	return ""
}

func (m *ReadyForPsbtFunding) GetFundingAmount() int64 {
	if m != nil {
		return m.FundingAmount
	}
	return 0
}

func (m *ReadyForPsbtFunding) GetPsbt() []byte {
	if m != nil {
		return m.Psbt
	}
	return nil
}

type OpenChannelRequest struct {
	//
	//The pubkey of the node to open a channel with.
	NodePubkey []byte `protobuf:"bytes,2,opt,name=node_pubkey,json=nodePubkey,proto3" json:"node_pubkey,omitempty"`
	// The number of pktoshis the wallet should commit to the channel
	LocalFundingAmount int64 `protobuf:"varint,4,opt,name=local_funding_amount,json=localFundingAmount,proto3" json:"local_funding_amount,omitempty"`
	// The number of pktoshis to push to the remote side as part of the initial
	// commitment state
	PushSat int64 `protobuf:"varint,5,opt,name=push_sat,json=pushSat,proto3" json:"push_sat,omitempty"`
	// The target number of blocks that the funding transaction should be
	// confirmed by.
	TargetConf int32 `protobuf:"varint,6,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	// A manual fee rate set in sat/byte that should be used when crafting the
	// funding transaction.
	SatPerByte int64 `protobuf:"varint,7,opt,name=sat_per_byte,json=satPerByte,proto3" json:"sat_per_byte,omitempty"`
	// Whether this channel should be private, not announced to the greater
	// network.
	Private bool `protobuf:"varint,8,opt,name=private,proto3" json:"private,omitempty"`
	// The minimum value in millisatoshi we will require for incoming HTLCs on
	// the channel.
	MinHtlcMsat int64 `protobuf:"varint,9,opt,name=min_htlc_msat,json=minHtlcMsat,proto3" json:"min_htlc_msat,omitempty"`
	// The delay we require on the remote's commitment transaction. If this is
	// not set, it will be scaled automatically with the channel size.
	RemoteCsvDelay uint32 `protobuf:"varint,10,opt,name=remote_csv_delay,json=remoteCsvDelay,proto3" json:"remote_csv_delay,omitempty"`
	// The minimum number of confirmations each one of your outputs used for
	// the funding transaction must satisfy.
	MinConfs int32 `protobuf:"varint,11,opt,name=min_confs,json=minConfs,proto3" json:"min_confs,omitempty"`
	// Whether unconfirmed outputs should be used as inputs for the funding
	// transaction.
	SpendUnconfirmed bool `protobuf:"varint,12,opt,name=spend_unconfirmed,json=spendUnconfirmed,proto3" json:"spend_unconfirmed,omitempty"`
	//
	//Close address is an optional address which specifies the address to which
	//funds should be paid out to upon cooperative close. This field may only be
	//set if the peer supports the option upfront feature bit (call listpeers
	//to check). The remote peer will only accept cooperative closes to this
	//address if it is set.
	//
	//Note: If this value is set on channel creation, you will *not* be able to
	//cooperatively close out to a different address.
	CloseAddress string `protobuf:"bytes,13,opt,name=close_address,json=closeAddress,proto3" json:"close_address,omitempty"`
	//
	//Funding shims are an optional argument that allow the caller to intercept
	//certain funding functionality. For example, a shim can be provided to use a
	//particular key for the commitment key (ideally cold) rather than use one
	//that is generated by the wallet as normal, or signal that signing will be
	//carried out in an interactive manner (PSBT based).
	FundingShim *FundingShim `protobuf:"bytes,14,opt,name=funding_shim,json=fundingShim,proto3" json:"funding_shim,omitempty"`
	//
	//The maximum amount of coins in millisatoshi that can be pending within
	//the channel. It only applies to the remote party.
	RemoteMaxValueInFlightMsat uint64 `protobuf:"varint,15,opt,name=remote_max_value_in_flight_msat,json=remoteMaxValueInFlightMsat,proto3" json:"remote_max_value_in_flight_msat,omitempty"`
	//
	//The maximum number of concurrent HTLCs we will allow the remote party to add
	//to the commitment transaction.
	RemoteMaxHtlcs uint32 `protobuf:"varint,16,opt,name=remote_max_htlcs,json=remoteMaxHtlcs,proto3" json:"remote_max_htlcs,omitempty"`
	//
	//Max local csv is the maximum csv delay we will allow for our own commitment
	//transaction.
	MaxLocalCsv          uint32   `protobuf:"varint,17,opt,name=max_local_csv,json=maxLocalCsv,proto3" json:"max_local_csv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelRequest) Reset()         { *m = OpenChannelRequest{} }
func (m *OpenChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenChannelRequest) ProtoMessage()    {}
func (*OpenChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{57}
}

func (m *OpenChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelRequest.Unmarshal(m, b)
}
func (m *OpenChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelRequest.Merge(m, src)
}
func (m *OpenChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenChannelRequest.Size(m)
}
func (m *OpenChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelRequest proto.InternalMessageInfo

func (m *OpenChannelRequest) GetNodePubkey() []byte {
	if m != nil {
		return m.NodePubkey
	}
	return nil
}

func (m *OpenChannelRequest) GetLocalFundingAmount() int64 {
	if m != nil {
		return m.LocalFundingAmount
	}
	return 0
}

func (m *OpenChannelRequest) GetPushSat() int64 {
	if m != nil {
		return m.PushSat
	}
	return 0
}

func (m *OpenChannelRequest) GetTargetConf() int32 {
	if m != nil {
		return m.TargetConf
	}
	return 0
}

func (m *OpenChannelRequest) GetSatPerByte() int64 {
	if m != nil {
		return m.SatPerByte
	}
	return 0
}

func (m *OpenChannelRequest) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *OpenChannelRequest) GetMinHtlcMsat() int64 {
	if m != nil {
		return m.MinHtlcMsat
	}
	return 0
}

func (m *OpenChannelRequest) GetRemoteCsvDelay() uint32 {
	if m != nil {
		return m.RemoteCsvDelay
	}
	return 0
}

func (m *OpenChannelRequest) GetMinConfs() int32 {
	if m != nil {
		return m.MinConfs
	}
	return 0
}

func (m *OpenChannelRequest) GetSpendUnconfirmed() bool {
	if m != nil {
		return m.SpendUnconfirmed
	}
	return false
}

func (m *OpenChannelRequest) GetCloseAddress() string {
	if m != nil {
		return m.CloseAddress
	}
	return ""
}

func (m *OpenChannelRequest) GetFundingShim() *FundingShim {
	if m != nil {
		return m.FundingShim
	}
	return nil
}

func (m *OpenChannelRequest) GetRemoteMaxValueInFlightMsat() uint64 {
	if m != nil {
		return m.RemoteMaxValueInFlightMsat
	}
	return 0
}

func (m *OpenChannelRequest) GetRemoteMaxHtlcs() uint32 {
	if m != nil {
		return m.RemoteMaxHtlcs
	}
	return 0
}

func (m *OpenChannelRequest) GetMaxLocalCsv() uint32 {
	if m != nil {
		return m.MaxLocalCsv
	}
	return 0
}

type OpenStatusUpdate struct {
	// Types that are valid to be assigned to Update:
	//	*OpenStatusUpdate_ChanPending
	//	*OpenStatusUpdate_ChanOpen
	//	*OpenStatusUpdate_PsbtFund
	Update isOpenStatusUpdate_Update `protobuf_oneof:"update"`
	//
	//The pending channel ID of the created channel. This value may be used to
	//further the funding flow manually via the FundingStateStep method.
	PendingChanId        []byte   `protobuf:"bytes,4,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenStatusUpdate) Reset()         { *m = OpenStatusUpdate{} }
func (m *OpenStatusUpdate) String() string { return proto.CompactTextString(m) }
func (*OpenStatusUpdate) ProtoMessage()    {}
func (*OpenStatusUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{58}
}

func (m *OpenStatusUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenStatusUpdate.Unmarshal(m, b)
}
func (m *OpenStatusUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenStatusUpdate.Marshal(b, m, deterministic)
}
func (m *OpenStatusUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenStatusUpdate.Merge(m, src)
}
func (m *OpenStatusUpdate) XXX_Size() int {
	return xxx_messageInfo_OpenStatusUpdate.Size(m)
}
func (m *OpenStatusUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenStatusUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_OpenStatusUpdate proto.InternalMessageInfo

type isOpenStatusUpdate_Update interface {
	isOpenStatusUpdate_Update()
}

type OpenStatusUpdate_ChanPending struct {
	ChanPending *PendingUpdate `protobuf:"bytes,1,opt,name=chan_pending,json=chanPending,proto3,oneof"`
}

type OpenStatusUpdate_ChanOpen struct {
	ChanOpen *ChannelOpenUpdate `protobuf:"bytes,3,opt,name=chan_open,json=chanOpen,proto3,oneof"`
}

type OpenStatusUpdate_PsbtFund struct {
	PsbtFund *ReadyForPsbtFunding `protobuf:"bytes,5,opt,name=psbt_fund,json=psbtFund,proto3,oneof"`
}

func (*OpenStatusUpdate_ChanPending) isOpenStatusUpdate_Update() {}

func (*OpenStatusUpdate_ChanOpen) isOpenStatusUpdate_Update() {}

func (*OpenStatusUpdate_PsbtFund) isOpenStatusUpdate_Update() {}

func (m *OpenStatusUpdate) GetUpdate() isOpenStatusUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *OpenStatusUpdate) GetChanPending() *PendingUpdate {
	if x, ok := m.GetUpdate().(*OpenStatusUpdate_ChanPending); ok {
		return x.ChanPending
	}
	return nil
}

func (m *OpenStatusUpdate) GetChanOpen() *ChannelOpenUpdate {
	if x, ok := m.GetUpdate().(*OpenStatusUpdate_ChanOpen); ok {
		return x.ChanOpen
	}
	return nil
}

func (m *OpenStatusUpdate) GetPsbtFund() *ReadyForPsbtFunding {
	if x, ok := m.GetUpdate().(*OpenStatusUpdate_PsbtFund); ok {
		return x.PsbtFund
	}
	return nil
}

func (m *OpenStatusUpdate) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OpenStatusUpdate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OpenStatusUpdate_ChanPending)(nil),
		(*OpenStatusUpdate_ChanOpen)(nil),
		(*OpenStatusUpdate_PsbtFund)(nil),
	}
}

type KeyLocator struct {
	// The family of key being identified.
	KeyFamily int32 `protobuf:"varint,1,opt,name=key_family,json=keyFamily,proto3" json:"key_family,omitempty"`
	// The precise index of the key being identified.
	KeyIndex             int32    `protobuf:"varint,2,opt,name=key_index,json=keyIndex,proto3" json:"key_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyLocator) Reset()         { *m = KeyLocator{} }
func (m *KeyLocator) String() string { return proto.CompactTextString(m) }
func (*KeyLocator) ProtoMessage()    {}
func (*KeyLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{59}
}

func (m *KeyLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyLocator.Unmarshal(m, b)
}
func (m *KeyLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyLocator.Marshal(b, m, deterministic)
}
func (m *KeyLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyLocator.Merge(m, src)
}
func (m *KeyLocator) XXX_Size() int {
	return xxx_messageInfo_KeyLocator.Size(m)
}
func (m *KeyLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyLocator.DiscardUnknown(m)
}

var xxx_messageInfo_KeyLocator proto.InternalMessageInfo

func (m *KeyLocator) GetKeyFamily() int32 {
	if m != nil {
		return m.KeyFamily
	}
	return 0
}

func (m *KeyLocator) GetKeyIndex() int32 {
	if m != nil {
		return m.KeyIndex
	}
	return 0
}

type KeyDescriptor struct {
	//
	//The raw bytes of the key being identified.
	RawKeyBytes []byte `protobuf:"bytes,1,opt,name=raw_key_bytes,json=rawKeyBytes,proto3" json:"raw_key_bytes,omitempty"`
	//
	//The key locator that identifies which key to use for signing.
	KeyLoc               *KeyLocator `protobuf:"bytes,2,opt,name=key_loc,json=keyLoc,proto3" json:"key_loc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *KeyDescriptor) Reset()         { *m = KeyDescriptor{} }
func (m *KeyDescriptor) String() string { return proto.CompactTextString(m) }
func (*KeyDescriptor) ProtoMessage()    {}
func (*KeyDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{60}
}

func (m *KeyDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyDescriptor.Unmarshal(m, b)
}
func (m *KeyDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyDescriptor.Marshal(b, m, deterministic)
}
func (m *KeyDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyDescriptor.Merge(m, src)
}
func (m *KeyDescriptor) XXX_Size() int {
	return xxx_messageInfo_KeyDescriptor.Size(m)
}
func (m *KeyDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_KeyDescriptor proto.InternalMessageInfo

func (m *KeyDescriptor) GetRawKeyBytes() []byte {
	if m != nil {
		return m.RawKeyBytes
	}
	return nil
}

func (m *KeyDescriptor) GetKeyLoc() *KeyLocator {
	if m != nil {
		return m.KeyLoc
	}
	return nil
}

type ChanPointShim struct {
	//
	//The size of the pre-crafted output to be used as the channel point for this
	//channel funding.
	Amt int64 `protobuf:"varint,1,opt,name=amt,proto3" json:"amt,omitempty"`
	// The target channel point to refrence in created commitment transactions.
	ChanPoint *ChannelPoint `protobuf:"bytes,2,opt,name=chan_point,json=chanPoint,proto3" json:"chan_point,omitempty"`
	// Our local key to use when creating the multi-sig output.
	LocalKey *KeyDescriptor `protobuf:"bytes,3,opt,name=local_key,json=localKey,proto3" json:"local_key,omitempty"`
	// The key of the remote party to use when creating the multi-sig output.
	RemoteKey []byte `protobuf:"bytes,4,opt,name=remote_key,json=remoteKey,proto3" json:"remote_key,omitempty"`
	//
	//If non-zero, then this will be used as the pending channel ID on the wire
	//protocol to initate the funding request. This is an optional field, and
	//should only be set if the responder is already expecting a specific pending
	//channel ID.
	PendingChanId []byte `protobuf:"bytes,5,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	//
	//This uint32 indicates if this channel is to be considered 'frozen'. A frozen
	//channel does not allow a cooperative channel close by the initiator. The
	//thaw_height is the height that this restriction stops applying to the
	//channel. The height can be interpreted in two ways: as a relative height if
	//the value is less than 500,000, or as an absolute height otherwise.
	ThawHeight           uint32   `protobuf:"varint,6,opt,name=thaw_height,json=thawHeight,proto3" json:"thaw_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChanPointShim) Reset()         { *m = ChanPointShim{} }
func (m *ChanPointShim) String() string { return proto.CompactTextString(m) }
func (*ChanPointShim) ProtoMessage()    {}
func (*ChanPointShim) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{61}
}

func (m *ChanPointShim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChanPointShim.Unmarshal(m, b)
}
func (m *ChanPointShim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChanPointShim.Marshal(b, m, deterministic)
}
func (m *ChanPointShim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChanPointShim.Merge(m, src)
}
func (m *ChanPointShim) XXX_Size() int {
	return xxx_messageInfo_ChanPointShim.Size(m)
}
func (m *ChanPointShim) XXX_DiscardUnknown() {
	xxx_messageInfo_ChanPointShim.DiscardUnknown(m)
}

var xxx_messageInfo_ChanPointShim proto.InternalMessageInfo

func (m *ChanPointShim) GetAmt() int64 {
	if m != nil {
		return m.Amt
	}
	return 0
}

func (m *ChanPointShim) GetChanPoint() *ChannelPoint {
	if m != nil {
		return m.ChanPoint
	}
	return nil
}

func (m *ChanPointShim) GetLocalKey() *KeyDescriptor {
	if m != nil {
		return m.LocalKey
	}
	return nil
}

func (m *ChanPointShim) GetRemoteKey() []byte {
	if m != nil {
		return m.RemoteKey
	}
	return nil
}

func (m *ChanPointShim) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

func (m *ChanPointShim) GetThawHeight() uint32 {
	if m != nil {
		return m.ThawHeight
	}
	return 0
}

type PsbtShim struct {
	//
	//A unique identifier of 32 random bytes that will be used as the pending
	//channel ID to identify the PSBT state machine when interacting with it and
	//on the wire protocol to initiate the funding request.
	PendingChanId []byte `protobuf:"bytes,1,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	//
	//An optional base PSBT the new channel output will be added to. If this is
	//non-empty, it must be a binary serialized PSBT.
	BasePsbt []byte `protobuf:"bytes,2,opt,name=base_psbt,json=basePsbt,proto3" json:"base_psbt,omitempty"`
	//
	//If a channel should be part of a batch (multiple channel openings in one
	//transaction), it can be dangerous if the whole batch transaction is
	//published too early before all channel opening negotiations are completed.
	//This flag prevents this particular channel from broadcasting the transaction
	//after the negotiation with the remote peer. In a batch of channel openings
	//this flag should be set to true for every channel but the very last.
	NoPublish            bool     `protobuf:"varint,3,opt,name=no_publish,json=noPublish,proto3" json:"no_publish,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PsbtShim) Reset()         { *m = PsbtShim{} }
func (m *PsbtShim) String() string { return proto.CompactTextString(m) }
func (*PsbtShim) ProtoMessage()    {}
func (*PsbtShim) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{62}
}

func (m *PsbtShim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PsbtShim.Unmarshal(m, b)
}
func (m *PsbtShim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PsbtShim.Marshal(b, m, deterministic)
}
func (m *PsbtShim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PsbtShim.Merge(m, src)
}
func (m *PsbtShim) XXX_Size() int {
	return xxx_messageInfo_PsbtShim.Size(m)
}
func (m *PsbtShim) XXX_DiscardUnknown() {
	xxx_messageInfo_PsbtShim.DiscardUnknown(m)
}

var xxx_messageInfo_PsbtShim proto.InternalMessageInfo

func (m *PsbtShim) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

func (m *PsbtShim) GetBasePsbt() []byte {
	if m != nil {
		return m.BasePsbt
	}
	return nil
}

func (m *PsbtShim) GetNoPublish() bool {
	if m != nil {
		return m.NoPublish
	}
	return false
}

type FundingShim struct {
	// Types that are valid to be assigned to Shim:
	//	*FundingShim_ChanPointShim
	//	*FundingShim_PsbtShim
	Shim                 isFundingShim_Shim `protobuf_oneof:"shim"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FundingShim) Reset()         { *m = FundingShim{} }
func (m *FundingShim) String() string { return proto.CompactTextString(m) }
func (*FundingShim) ProtoMessage()    {}
func (*FundingShim) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{63}
}

func (m *FundingShim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundingShim.Unmarshal(m, b)
}
func (m *FundingShim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundingShim.Marshal(b, m, deterministic)
}
func (m *FundingShim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundingShim.Merge(m, src)
}
func (m *FundingShim) XXX_Size() int {
	return xxx_messageInfo_FundingShim.Size(m)
}
func (m *FundingShim) XXX_DiscardUnknown() {
	xxx_messageInfo_FundingShim.DiscardUnknown(m)
}

var xxx_messageInfo_FundingShim proto.InternalMessageInfo

type isFundingShim_Shim interface {
	isFundingShim_Shim()
}

type FundingShim_ChanPointShim struct {
	ChanPointShim *ChanPointShim `protobuf:"bytes,1,opt,name=chan_point_shim,json=chanPointShim,proto3,oneof"`
}

type FundingShim_PsbtShim struct {
	PsbtShim *PsbtShim `protobuf:"bytes,2,opt,name=psbt_shim,json=psbtShim,proto3,oneof"`
}

func (*FundingShim_ChanPointShim) isFundingShim_Shim() {}

func (*FundingShim_PsbtShim) isFundingShim_Shim() {}

func (m *FundingShim) GetShim() isFundingShim_Shim {
	if m != nil {
		return m.Shim
	}
	return nil
}

func (m *FundingShim) GetChanPointShim() *ChanPointShim {
	if x, ok := m.GetShim().(*FundingShim_ChanPointShim); ok {
		return x.ChanPointShim
	}
	return nil
}

func (m *FundingShim) GetPsbtShim() *PsbtShim {
	if x, ok := m.GetShim().(*FundingShim_PsbtShim); ok {
		return x.PsbtShim
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FundingShim) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FundingShim_ChanPointShim)(nil),
		(*FundingShim_PsbtShim)(nil),
	}
}

type FundingShimCancel struct {
	// The pending channel ID of the channel to cancel the funding shim for.
	PendingChanId        []byte   `protobuf:"bytes,1,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FundingShimCancel) Reset()         { *m = FundingShimCancel{} }
func (m *FundingShimCancel) String() string { return proto.CompactTextString(m) }
func (*FundingShimCancel) ProtoMessage()    {}
func (*FundingShimCancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{64}
}

func (m *FundingShimCancel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundingShimCancel.Unmarshal(m, b)
}
func (m *FundingShimCancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundingShimCancel.Marshal(b, m, deterministic)
}
func (m *FundingShimCancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundingShimCancel.Merge(m, src)
}
func (m *FundingShimCancel) XXX_Size() int {
	return xxx_messageInfo_FundingShimCancel.Size(m)
}
func (m *FundingShimCancel) XXX_DiscardUnknown() {
	xxx_messageInfo_FundingShimCancel.DiscardUnknown(m)
}

var xxx_messageInfo_FundingShimCancel proto.InternalMessageInfo

func (m *FundingShimCancel) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

type FundingPsbtVerify struct {
	//
	//The funded but not yet signed PSBT that sends the exact channel capacity
	//amount to the PK script returned in the open channel message in a previous
	//step.
	FundedPsbt []byte `protobuf:"bytes,1,opt,name=funded_psbt,json=fundedPsbt,proto3" json:"funded_psbt,omitempty"`
	// The pending channel ID of the channel to get the PSBT for.
	PendingChanId        []byte   `protobuf:"bytes,2,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FundingPsbtVerify) Reset()         { *m = FundingPsbtVerify{} }
func (m *FundingPsbtVerify) String() string { return proto.CompactTextString(m) }
func (*FundingPsbtVerify) ProtoMessage()    {}
func (*FundingPsbtVerify) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{65}
}

func (m *FundingPsbtVerify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundingPsbtVerify.Unmarshal(m, b)
}
func (m *FundingPsbtVerify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundingPsbtVerify.Marshal(b, m, deterministic)
}
func (m *FundingPsbtVerify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundingPsbtVerify.Merge(m, src)
}
func (m *FundingPsbtVerify) XXX_Size() int {
	return xxx_messageInfo_FundingPsbtVerify.Size(m)
}
func (m *FundingPsbtVerify) XXX_DiscardUnknown() {
	xxx_messageInfo_FundingPsbtVerify.DiscardUnknown(m)
}

var xxx_messageInfo_FundingPsbtVerify proto.InternalMessageInfo

func (m *FundingPsbtVerify) GetFundedPsbt() []byte {
	if m != nil {
		return m.FundedPsbt
	}
	return nil
}

func (m *FundingPsbtVerify) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

type FundingPsbtFinalize struct {
	//
	//The funded PSBT that contains all witness data to send the exact channel
	//capacity amount to the PK script returned in the open channel message in a
	//previous step. Cannot be set at the same time as final_raw_tx.
	SignedPsbt []byte `protobuf:"bytes,1,opt,name=signed_psbt,json=signedPsbt,proto3" json:"signed_psbt,omitempty"`
	// The pending channel ID of the channel to get the PSBT for.
	PendingChanId []byte `protobuf:"bytes,2,opt,name=pending_chan_id,json=pendingChanId,proto3" json:"pending_chan_id,omitempty"`
	//
	//As an alternative to the signed PSBT with all witness data, the final raw
	//wire format transaction can also be specified directly. Cannot be set at the
	//same time as signed_psbt.
	FinalRawTx           []byte   `protobuf:"bytes,3,opt,name=final_raw_tx,json=finalRawTx,proto3" json:"final_raw_tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FundingPsbtFinalize) Reset()         { *m = FundingPsbtFinalize{} }
func (m *FundingPsbtFinalize) String() string { return proto.CompactTextString(m) }
func (*FundingPsbtFinalize) ProtoMessage()    {}
func (*FundingPsbtFinalize) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{66}
}

func (m *FundingPsbtFinalize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundingPsbtFinalize.Unmarshal(m, b)
}
func (m *FundingPsbtFinalize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundingPsbtFinalize.Marshal(b, m, deterministic)
}
func (m *FundingPsbtFinalize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundingPsbtFinalize.Merge(m, src)
}
func (m *FundingPsbtFinalize) XXX_Size() int {
	return xxx_messageInfo_FundingPsbtFinalize.Size(m)
}
func (m *FundingPsbtFinalize) XXX_DiscardUnknown() {
	xxx_messageInfo_FundingPsbtFinalize.DiscardUnknown(m)
}

var xxx_messageInfo_FundingPsbtFinalize proto.InternalMessageInfo

func (m *FundingPsbtFinalize) GetSignedPsbt() []byte {
	if m != nil {
		return m.SignedPsbt
	}
	return nil
}

func (m *FundingPsbtFinalize) GetPendingChanId() []byte {
	if m != nil {
		return m.PendingChanId
	}
	return nil
}

func (m *FundingPsbtFinalize) GetFinalRawTx() []byte {
	if m != nil {
		return m.FinalRawTx
	}
	return nil
}

type FundingTransitionMsg struct {
	// Types that are valid to be assigned to Trigger:
	//	*FundingTransitionMsg_ShimRegister
	//	*FundingTransitionMsg_ShimCancel
	//	*FundingTransitionMsg_PsbtVerify
	//	*FundingTransitionMsg_PsbtFinalize
	Trigger              isFundingTransitionMsg_Trigger `protobuf_oneof:"trigger"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *FundingTransitionMsg) Reset()         { *m = FundingTransitionMsg{} }
func (m *FundingTransitionMsg) String() string { return proto.CompactTextString(m) }
func (*FundingTransitionMsg) ProtoMessage()    {}
func (*FundingTransitionMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{67}
}

func (m *FundingTransitionMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundingTransitionMsg.Unmarshal(m, b)
}
func (m *FundingTransitionMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundingTransitionMsg.Marshal(b, m, deterministic)
}
func (m *FundingTransitionMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundingTransitionMsg.Merge(m, src)
}
func (m *FundingTransitionMsg) XXX_Size() int {
	return xxx_messageInfo_FundingTransitionMsg.Size(m)
}
func (m *FundingTransitionMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_FundingTransitionMsg.DiscardUnknown(m)
}

var xxx_messageInfo_FundingTransitionMsg proto.InternalMessageInfo

type isFundingTransitionMsg_Trigger interface {
	isFundingTransitionMsg_Trigger()
}

type FundingTransitionMsg_ShimRegister struct {
	ShimRegister *FundingShim `protobuf:"bytes,1,opt,name=shim_register,json=shimRegister,proto3,oneof"`
}

type FundingTransitionMsg_ShimCancel struct {
	ShimCancel *FundingShimCancel `protobuf:"bytes,2,opt,name=shim_cancel,json=shimCancel,proto3,oneof"`
}

type FundingTransitionMsg_PsbtVerify struct {
	PsbtVerify *FundingPsbtVerify `protobuf:"bytes,3,opt,name=psbt_verify,json=psbtVerify,proto3,oneof"`
}

type FundingTransitionMsg_PsbtFinalize struct {
	PsbtFinalize *FundingPsbtFinalize `protobuf:"bytes,4,opt,name=psbt_finalize,json=psbtFinalize,proto3,oneof"`
}

func (*FundingTransitionMsg_ShimRegister) isFundingTransitionMsg_Trigger() {}

func (*FundingTransitionMsg_ShimCancel) isFundingTransitionMsg_Trigger() {}

func (*FundingTransitionMsg_PsbtVerify) isFundingTransitionMsg_Trigger() {}

func (*FundingTransitionMsg_PsbtFinalize) isFundingTransitionMsg_Trigger() {}

func (m *FundingTransitionMsg) GetTrigger() isFundingTransitionMsg_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *FundingTransitionMsg) GetShimRegister() *FundingShim {
	if x, ok := m.GetTrigger().(*FundingTransitionMsg_ShimRegister); ok {
		return x.ShimRegister
	}
	return nil
}

func (m *FundingTransitionMsg) GetShimCancel() *FundingShimCancel {
	if x, ok := m.GetTrigger().(*FundingTransitionMsg_ShimCancel); ok {
		return x.ShimCancel
	}
	return nil
}

func (m *FundingTransitionMsg) GetPsbtVerify() *FundingPsbtVerify {
	if x, ok := m.GetTrigger().(*FundingTransitionMsg_PsbtVerify); ok {
		return x.PsbtVerify
	}
	return nil
}

func (m *FundingTransitionMsg) GetPsbtFinalize() *FundingPsbtFinalize {
	if x, ok := m.GetTrigger().(*FundingTransitionMsg_PsbtFinalize); ok {
		return x.PsbtFinalize
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FundingTransitionMsg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FundingTransitionMsg_ShimRegister)(nil),
		(*FundingTransitionMsg_ShimCancel)(nil),
		(*FundingTransitionMsg_PsbtVerify)(nil),
		(*FundingTransitionMsg_PsbtFinalize)(nil),
	}
}

type FundingStateStepResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FundingStateStepResp) Reset()         { *m = FundingStateStepResp{} }
func (m *FundingStateStepResp) String() string { return proto.CompactTextString(m) }
func (*FundingStateStepResp) ProtoMessage()    {}
func (*FundingStateStepResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{68}
}

func (m *FundingStateStepResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundingStateStepResp.Unmarshal(m, b)
}
func (m *FundingStateStepResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundingStateStepResp.Marshal(b, m, deterministic)
}
func (m *FundingStateStepResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundingStateStepResp.Merge(m, src)
}
func (m *FundingStateStepResp) XXX_Size() int {
	return xxx_messageInfo_FundingStateStepResp.Size(m)
}
func (m *FundingStateStepResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FundingStateStepResp.DiscardUnknown(m)
}

var xxx_messageInfo_FundingStateStepResp proto.InternalMessageInfo

type PendingHTLC struct {
	// The direction within the channel that the htlc was sent
	Incoming bool `protobuf:"varint,1,opt,name=incoming,proto3" json:"incoming,omitempty"`
	// The total value of the htlc
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// The final output to be swept back to the user's wallet
	Outpoint string `protobuf:"bytes,3,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	// The next block height at which we can spend the current stage
	MaturityHeight uint32 `protobuf:"varint,4,opt,name=maturity_height,json=maturityHeight,proto3" json:"maturity_height,omitempty"`
	//
	//The number of blocks remaining until the current stage can be swept.
	//Negative values indicate how many blocks have passed since becoming
	//mature.
	BlocksTilMaturity int32 `protobuf:"varint,5,opt,name=blocks_til_maturity,json=blocksTilMaturity,proto3" json:"blocks_til_maturity,omitempty"`
	// Indicates whether the htlc is in its first or second stage of recovery
	Stage                uint32   `protobuf:"varint,6,opt,name=stage,proto3" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingHTLC) Reset()         { *m = PendingHTLC{} }
func (m *PendingHTLC) String() string { return proto.CompactTextString(m) }
func (*PendingHTLC) ProtoMessage()    {}
func (*PendingHTLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{69}
}

func (m *PendingHTLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingHTLC.Unmarshal(m, b)
}
func (m *PendingHTLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingHTLC.Marshal(b, m, deterministic)
}
func (m *PendingHTLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingHTLC.Merge(m, src)
}
func (m *PendingHTLC) XXX_Size() int {
	return xxx_messageInfo_PendingHTLC.Size(m)
}
func (m *PendingHTLC) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingHTLC.DiscardUnknown(m)
}

var xxx_messageInfo_PendingHTLC proto.InternalMessageInfo

func (m *PendingHTLC) GetIncoming() bool {
	if m != nil {
		return m.Incoming
	}
	return false
}

func (m *PendingHTLC) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PendingHTLC) GetOutpoint() string {
	if m != nil {
		return m.Outpoint
	}
	return ""
}

func (m *PendingHTLC) GetMaturityHeight() uint32 {
	if m != nil {
		return m.MaturityHeight
	}
	return 0
}

func (m *PendingHTLC) GetBlocksTilMaturity() int32 {
	if m != nil {
		return m.BlocksTilMaturity
	}
	return 0
}

func (m *PendingHTLC) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

type PendingChannelsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingChannelsRequest) Reset()         { *m = PendingChannelsRequest{} }
func (m *PendingChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*PendingChannelsRequest) ProtoMessage()    {}
func (*PendingChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{70}
}

func (m *PendingChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsRequest.Unmarshal(m, b)
}
func (m *PendingChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsRequest.Marshal(b, m, deterministic)
}
func (m *PendingChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsRequest.Merge(m, src)
}
func (m *PendingChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsRequest.Size(m)
}
func (m *PendingChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsRequest proto.InternalMessageInfo

type PendingChannelsResponse struct {
	// The balance in satoshis encumbered in pending channels
	TotalLimboBalance int64 `protobuf:"varint,1,opt,name=total_limbo_balance,json=totalLimboBalance,proto3" json:"total_limbo_balance,omitempty"`
	// Channels pending opening
	PendingOpenChannels []*PendingChannelsResponse_PendingOpenChannel `protobuf:"bytes,2,rep,name=pending_open_channels,json=pendingOpenChannels,proto3" json:"pending_open_channels,omitempty"`
	//
	//Deprecated: Channels pending closing previously contained cooperatively
	//closed channels with a single confirmation. These channels are now
	//considered closed from the time we see them on chain.
	PendingClosingChannels []*PendingChannelsResponse_ClosedChannel `protobuf:"bytes,3,rep,name=pending_closing_channels,json=pendingClosingChannels,proto3" json:"pending_closing_channels,omitempty"` // Deprecated: Do not use.
	// Channels pending force closing
	PendingForceClosingChannels []*PendingChannelsResponse_ForceClosedChannel `protobuf:"bytes,4,rep,name=pending_force_closing_channels,json=pendingForceClosingChannels,proto3" json:"pending_force_closing_channels,omitempty"`
	// Channels waiting for closing tx to confirm
	WaitingCloseChannels []*PendingChannelsResponse_WaitingCloseChannel `protobuf:"bytes,5,rep,name=waiting_close_channels,json=waitingCloseChannels,proto3" json:"waiting_close_channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *PendingChannelsResponse) Reset()         { *m = PendingChannelsResponse{} }
func (m *PendingChannelsResponse) String() string { return proto.CompactTextString(m) }
func (*PendingChannelsResponse) ProtoMessage()    {}
func (*PendingChannelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71}
}

func (m *PendingChannelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsResponse.Unmarshal(m, b)
}
func (m *PendingChannelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsResponse.Marshal(b, m, deterministic)
}
func (m *PendingChannelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsResponse.Merge(m, src)
}
func (m *PendingChannelsResponse) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsResponse.Size(m)
}
func (m *PendingChannelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsResponse proto.InternalMessageInfo

func (m *PendingChannelsResponse) GetTotalLimboBalance() int64 {
	if m != nil {
		return m.TotalLimboBalance
	}
	return 0
}

func (m *PendingChannelsResponse) GetPendingOpenChannels() []*PendingChannelsResponse_PendingOpenChannel {
	if m != nil {
		return m.PendingOpenChannels
	}
	return nil
}

// Deprecated: Do not use.
func (m *PendingChannelsResponse) GetPendingClosingChannels() []*PendingChannelsResponse_ClosedChannel {
	if m != nil {
		return m.PendingClosingChannels
	}
	return nil
}

func (m *PendingChannelsResponse) GetPendingForceClosingChannels() []*PendingChannelsResponse_ForceClosedChannel {
	if m != nil {
		return m.PendingForceClosingChannels
	}
	return nil
}

func (m *PendingChannelsResponse) GetWaitingCloseChannels() []*PendingChannelsResponse_WaitingCloseChannel {
	if m != nil {
		return m.WaitingCloseChannels
	}
	return nil
}

type PendingChannelsResponse_PendingChannel struct {
	RemoteNodePub []byte `protobuf:"bytes,1,opt,name=remote_node_pub,json=remoteNodePub,proto3" json:"remote_node_pub,omitempty"`
	ChannelPoint  string `protobuf:"bytes,2,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	Capacity      int64  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	LocalBalance  int64  `protobuf:"varint,4,opt,name=local_balance,json=localBalance,proto3" json:"local_balance,omitempty"`
	RemoteBalance int64  `protobuf:"varint,5,opt,name=remote_balance,json=remoteBalance,proto3" json:"remote_balance,omitempty"`
	// The minimum satoshis this node is required to reserve in its
	// balance.
	LocalChanReserveSat int64 `protobuf:"varint,6,opt,name=local_chan_reserve_sat,json=localChanReserveSat,proto3" json:"local_chan_reserve_sat,omitempty"`
	//
	//The minimum satoshis the other node is required to reserve in its
	//balance.
	RemoteChanReserveSat int64 `protobuf:"varint,7,opt,name=remote_chan_reserve_sat,json=remoteChanReserveSat,proto3" json:"remote_chan_reserve_sat,omitempty"`
	// The party that initiated opening the channel.
	Initiator Initiator `protobuf:"varint,8,opt,name=initiator,proto3,enum=lnrpc.Initiator" json:"initiator,omitempty"`
	// The commitment type used by this channel.
	CommitmentType       CommitmentType `protobuf:"varint,9,opt,name=commitment_type,json=commitmentType,proto3,enum=lnrpc.CommitmentType" json:"commitment_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PendingChannelsResponse_PendingChannel) Reset() {
	*m = PendingChannelsResponse_PendingChannel{}
}
func (m *PendingChannelsResponse_PendingChannel) String() string { return proto.CompactTextString(m) }
func (*PendingChannelsResponse_PendingChannel) ProtoMessage()    {}
func (*PendingChannelsResponse_PendingChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71, 0}
}

func (m *PendingChannelsResponse_PendingChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsResponse_PendingChannel.Unmarshal(m, b)
}
func (m *PendingChannelsResponse_PendingChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsResponse_PendingChannel.Marshal(b, m, deterministic)
}
func (m *PendingChannelsResponse_PendingChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsResponse_PendingChannel.Merge(m, src)
}
func (m *PendingChannelsResponse_PendingChannel) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsResponse_PendingChannel.Size(m)
}
func (m *PendingChannelsResponse_PendingChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsResponse_PendingChannel.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsResponse_PendingChannel proto.InternalMessageInfo

func (m *PendingChannelsResponse_PendingChannel) GetRemoteNodePub() []byte {
	if m != nil {
		return m.RemoteNodePub
	}
	return nil
}

func (m *PendingChannelsResponse_PendingChannel) GetChannelPoint() string {
	if m != nil {
		return m.ChannelPoint
	}
	return ""
}

func (m *PendingChannelsResponse_PendingChannel) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *PendingChannelsResponse_PendingChannel) GetLocalBalance() int64 {
	if m != nil {
		return m.LocalBalance
	}
	return 0
}

func (m *PendingChannelsResponse_PendingChannel) GetRemoteBalance() int64 {
	if m != nil {
		return m.RemoteBalance
	}
	return 0
}

func (m *PendingChannelsResponse_PendingChannel) GetLocalChanReserveSat() int64 {
	if m != nil {
		return m.LocalChanReserveSat
	}
	return 0
}

func (m *PendingChannelsResponse_PendingChannel) GetRemoteChanReserveSat() int64 {
	if m != nil {
		return m.RemoteChanReserveSat
	}
	return 0
}

func (m *PendingChannelsResponse_PendingChannel) GetInitiator() Initiator {
	if m != nil {
		return m.Initiator
	}
	return Initiator_INITIATOR_UNKNOWN
}

func (m *PendingChannelsResponse_PendingChannel) GetCommitmentType() CommitmentType {
	if m != nil {
		return m.CommitmentType
	}
	return CommitmentType_LEGACY
}

type PendingChannelsResponse_PendingOpenChannel struct {
	// The pending channel
	Channel *PendingChannelsResponse_PendingChannel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// The height at which this channel will be confirmed
	ConfirmationHeight uint32 `protobuf:"varint,2,opt,name=confirmation_height,json=confirmationHeight,proto3" json:"confirmation_height,omitempty"`
	//
	//The amount calculated to be paid in fees for the current set of
	//commitment transactions. The fee amount is persisted with the channel
	//in order to allow the fee amount to be removed and recalculated with
	//each channel state update, including updates that happen after a system
	//restart.
	CommitFee int64 `protobuf:"varint,4,opt,name=commit_fee,json=commitFee,proto3" json:"commit_fee,omitempty"`
	// The weight of the commitment transaction
	CommitWeight int64 `protobuf:"varint,5,opt,name=commit_weight,json=commitWeight,proto3" json:"commit_weight,omitempty"`
	//
	//The required number of satoshis per kilo-weight that the requester will
	//pay at all times, for both the funding transaction and commitment
	//transaction. This value can later be updated once the channel is open.
	FeePerKw             int64    `protobuf:"varint,6,opt,name=fee_per_kw,json=feePerKw,proto3" json:"fee_per_kw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingChannelsResponse_PendingOpenChannel) Reset() {
	*m = PendingChannelsResponse_PendingOpenChannel{}
}
func (m *PendingChannelsResponse_PendingOpenChannel) String() string {
	return proto.CompactTextString(m)
}
func (*PendingChannelsResponse_PendingOpenChannel) ProtoMessage() {}
func (*PendingChannelsResponse_PendingOpenChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71, 1}
}

func (m *PendingChannelsResponse_PendingOpenChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsResponse_PendingOpenChannel.Unmarshal(m, b)
}
func (m *PendingChannelsResponse_PendingOpenChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsResponse_PendingOpenChannel.Marshal(b, m, deterministic)
}
func (m *PendingChannelsResponse_PendingOpenChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsResponse_PendingOpenChannel.Merge(m, src)
}
func (m *PendingChannelsResponse_PendingOpenChannel) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsResponse_PendingOpenChannel.Size(m)
}
func (m *PendingChannelsResponse_PendingOpenChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsResponse_PendingOpenChannel.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsResponse_PendingOpenChannel proto.InternalMessageInfo

func (m *PendingChannelsResponse_PendingOpenChannel) GetChannel() *PendingChannelsResponse_PendingChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *PendingChannelsResponse_PendingOpenChannel) GetConfirmationHeight() uint32 {
	if m != nil {
		return m.ConfirmationHeight
	}
	return 0
}

func (m *PendingChannelsResponse_PendingOpenChannel) GetCommitFee() int64 {
	if m != nil {
		return m.CommitFee
	}
	return 0
}

func (m *PendingChannelsResponse_PendingOpenChannel) GetCommitWeight() int64 {
	if m != nil {
		return m.CommitWeight
	}
	return 0
}

func (m *PendingChannelsResponse_PendingOpenChannel) GetFeePerKw() int64 {
	if m != nil {
		return m.FeePerKw
	}
	return 0
}

type PendingChannelsResponse_WaitingCloseChannel struct {
	// The pending channel waiting for closing tx to confirm
	Channel *PendingChannelsResponse_PendingChannel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// The balance in satoshis encumbered in this channel
	LimboBalance int64 `protobuf:"varint,2,opt,name=limbo_balance,json=limboBalance,proto3" json:"limbo_balance,omitempty"`
	//
	//A list of valid commitment transactions. Any of these can confirm at
	//this point.
	Commitments          *PendingChannelsResponse_Commitments `protobuf:"bytes,3,opt,name=commitments,proto3" json:"commitments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *PendingChannelsResponse_WaitingCloseChannel) Reset() {
	*m = PendingChannelsResponse_WaitingCloseChannel{}
}
func (m *PendingChannelsResponse_WaitingCloseChannel) String() string {
	return proto.CompactTextString(m)
}
func (*PendingChannelsResponse_WaitingCloseChannel) ProtoMessage() {}
func (*PendingChannelsResponse_WaitingCloseChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71, 2}
}

func (m *PendingChannelsResponse_WaitingCloseChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsResponse_WaitingCloseChannel.Unmarshal(m, b)
}
func (m *PendingChannelsResponse_WaitingCloseChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsResponse_WaitingCloseChannel.Marshal(b, m, deterministic)
}
func (m *PendingChannelsResponse_WaitingCloseChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsResponse_WaitingCloseChannel.Merge(m, src)
}
func (m *PendingChannelsResponse_WaitingCloseChannel) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsResponse_WaitingCloseChannel.Size(m)
}
func (m *PendingChannelsResponse_WaitingCloseChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsResponse_WaitingCloseChannel.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsResponse_WaitingCloseChannel proto.InternalMessageInfo

func (m *PendingChannelsResponse_WaitingCloseChannel) GetChannel() *PendingChannelsResponse_PendingChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *PendingChannelsResponse_WaitingCloseChannel) GetLimboBalance() int64 {
	if m != nil {
		return m.LimboBalance
	}
	return 0
}

func (m *PendingChannelsResponse_WaitingCloseChannel) GetCommitments() *PendingChannelsResponse_Commitments {
	if m != nil {
		return m.Commitments
	}
	return nil
}

type PendingChannelsResponse_Commitments struct {
	// Hash of the local version of the commitment tx.
	LocalTxid string `protobuf:"bytes,1,opt,name=local_txid,json=localTxid,proto3" json:"local_txid,omitempty"`
	// Hash of the remote version of the commitment tx.
	RemoteTxid string `protobuf:"bytes,2,opt,name=remote_txid,json=remoteTxid,proto3" json:"remote_txid,omitempty"`
	// Hash of the remote pending version of the commitment tx.
	RemotePendingTxid string `protobuf:"bytes,3,opt,name=remote_pending_txid,json=remotePendingTxid,proto3" json:"remote_pending_txid,omitempty"`
	//
	//The amount in satoshis calculated to be paid in fees for the local
	//commitment.
	LocalCommitFeeSat uint64 `protobuf:"varint,4,opt,name=local_commit_fee_sat,json=localCommitFeeSat,proto3" json:"local_commit_fee_sat,omitempty"`
	//
	//The amount in satoshis calculated to be paid in fees for the remote
	//commitment.
	RemoteCommitFeeSat uint64 `protobuf:"varint,5,opt,name=remote_commit_fee_sat,json=remoteCommitFeeSat,proto3" json:"remote_commit_fee_sat,omitempty"`
	//
	//The amount in satoshis calculated to be paid in fees for the remote
	//pending commitment.
	RemotePendingCommitFeeSat uint64   `protobuf:"varint,6,opt,name=remote_pending_commit_fee_sat,json=remotePendingCommitFeeSat,proto3" json:"remote_pending_commit_fee_sat,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *PendingChannelsResponse_Commitments) Reset()         { *m = PendingChannelsResponse_Commitments{} }
func (m *PendingChannelsResponse_Commitments) String() string { return proto.CompactTextString(m) }
func (*PendingChannelsResponse_Commitments) ProtoMessage()    {}
func (*PendingChannelsResponse_Commitments) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71, 3}
}

func (m *PendingChannelsResponse_Commitments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsResponse_Commitments.Unmarshal(m, b)
}
func (m *PendingChannelsResponse_Commitments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsResponse_Commitments.Marshal(b, m, deterministic)
}
func (m *PendingChannelsResponse_Commitments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsResponse_Commitments.Merge(m, src)
}
func (m *PendingChannelsResponse_Commitments) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsResponse_Commitments.Size(m)
}
func (m *PendingChannelsResponse_Commitments) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsResponse_Commitments.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsResponse_Commitments proto.InternalMessageInfo

func (m *PendingChannelsResponse_Commitments) GetLocalTxid() string {
	if m != nil {
		return m.LocalTxid
	}
	return ""
}

func (m *PendingChannelsResponse_Commitments) GetRemoteTxid() string {
	if m != nil {
		return m.RemoteTxid
	}
	return ""
}

func (m *PendingChannelsResponse_Commitments) GetRemotePendingTxid() string {
	if m != nil {
		return m.RemotePendingTxid
	}
	return ""
}

func (m *PendingChannelsResponse_Commitments) GetLocalCommitFeeSat() uint64 {
	if m != nil {
		return m.LocalCommitFeeSat
	}
	return 0
}

func (m *PendingChannelsResponse_Commitments) GetRemoteCommitFeeSat() uint64 {
	if m != nil {
		return m.RemoteCommitFeeSat
	}
	return 0
}

func (m *PendingChannelsResponse_Commitments) GetRemotePendingCommitFeeSat() uint64 {
	if m != nil {
		return m.RemotePendingCommitFeeSat
	}
	return 0
}

type PendingChannelsResponse_ClosedChannel struct {
	// The pending channel to be closed
	Channel *PendingChannelsResponse_PendingChannel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// The transaction id of the closing transaction
	ClosingTxid          string   `protobuf:"bytes,2,opt,name=closing_txid,json=closingTxid,proto3" json:"closing_txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingChannelsResponse_ClosedChannel) Reset()         { *m = PendingChannelsResponse_ClosedChannel{} }
func (m *PendingChannelsResponse_ClosedChannel) String() string { return proto.CompactTextString(m) }
func (*PendingChannelsResponse_ClosedChannel) ProtoMessage()    {}
func (*PendingChannelsResponse_ClosedChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71, 4}
}

func (m *PendingChannelsResponse_ClosedChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsResponse_ClosedChannel.Unmarshal(m, b)
}
func (m *PendingChannelsResponse_ClosedChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsResponse_ClosedChannel.Marshal(b, m, deterministic)
}
func (m *PendingChannelsResponse_ClosedChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsResponse_ClosedChannel.Merge(m, src)
}
func (m *PendingChannelsResponse_ClosedChannel) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsResponse_ClosedChannel.Size(m)
}
func (m *PendingChannelsResponse_ClosedChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsResponse_ClosedChannel.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsResponse_ClosedChannel proto.InternalMessageInfo

func (m *PendingChannelsResponse_ClosedChannel) GetChannel() *PendingChannelsResponse_PendingChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *PendingChannelsResponse_ClosedChannel) GetClosingTxid() string {
	if m != nil {
		return m.ClosingTxid
	}
	return ""
}

type PendingChannelsResponse_ForceClosedChannel struct {
	// The pending channel to be force closed
	Channel *PendingChannelsResponse_PendingChannel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// The transaction id of the closing transaction
	ClosingTxid string `protobuf:"bytes,2,opt,name=closing_txid,json=closingTxid,proto3" json:"closing_txid,omitempty"`
	// The balance in satoshis encumbered in this pending channel
	LimboBalance int64 `protobuf:"varint,3,opt,name=limbo_balance,json=limboBalance,proto3" json:"limbo_balance,omitempty"`
	// The height at which funds can be swept into the wallet
	MaturityHeight uint32 `protobuf:"varint,4,opt,name=maturity_height,json=maturityHeight,proto3" json:"maturity_height,omitempty"`
	//
	//Remaining # of blocks until the commitment output can be swept.
	//Negative values indicate how many blocks have passed since becoming
	//mature.
	BlocksTilMaturity int32 `protobuf:"varint,5,opt,name=blocks_til_maturity,json=blocksTilMaturity,proto3" json:"blocks_til_maturity,omitempty"`
	// The total value of funds successfully recovered from this channel
	RecoveredBalance     int64                                                  `protobuf:"varint,6,opt,name=recovered_balance,json=recoveredBalance,proto3" json:"recovered_balance,omitempty"`
	PendingHtlcs         []*PendingHTLC                                         `protobuf:"bytes,8,rep,name=pending_htlcs,json=pendingHtlcs,proto3" json:"pending_htlcs,omitempty"`
	Anchor               PendingChannelsResponse_ForceClosedChannel_AnchorState `protobuf:"varint,9,opt,name=anchor,proto3,enum=lnrpc.PendingChannelsResponse_ForceClosedChannel_AnchorState" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *PendingChannelsResponse_ForceClosedChannel) Reset() {
	*m = PendingChannelsResponse_ForceClosedChannel{}
}
func (m *PendingChannelsResponse_ForceClosedChannel) String() string {
	return proto.CompactTextString(m)
}
func (*PendingChannelsResponse_ForceClosedChannel) ProtoMessage() {}
func (*PendingChannelsResponse_ForceClosedChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{71, 5}
}

func (m *PendingChannelsResponse_ForceClosedChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsResponse_ForceClosedChannel.Unmarshal(m, b)
}
func (m *PendingChannelsResponse_ForceClosedChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsResponse_ForceClosedChannel.Marshal(b, m, deterministic)
}
func (m *PendingChannelsResponse_ForceClosedChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsResponse_ForceClosedChannel.Merge(m, src)
}
func (m *PendingChannelsResponse_ForceClosedChannel) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsResponse_ForceClosedChannel.Size(m)
}
func (m *PendingChannelsResponse_ForceClosedChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsResponse_ForceClosedChannel.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsResponse_ForceClosedChannel proto.InternalMessageInfo

func (m *PendingChannelsResponse_ForceClosedChannel) GetChannel() *PendingChannelsResponse_PendingChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *PendingChannelsResponse_ForceClosedChannel) GetClosingTxid() string {
	if m != nil {
		return m.ClosingTxid
	}
	return ""
}

func (m *PendingChannelsResponse_ForceClosedChannel) GetLimboBalance() int64 {
	if m != nil {
		return m.LimboBalance
	}
	return 0
}

func (m *PendingChannelsResponse_ForceClosedChannel) GetMaturityHeight() uint32 {
	if m != nil {
		return m.MaturityHeight
	}
	return 0
}

func (m *PendingChannelsResponse_ForceClosedChannel) GetBlocksTilMaturity() int32 {
	if m != nil {
		return m.BlocksTilMaturity
	}
	return 0
}

func (m *PendingChannelsResponse_ForceClosedChannel) GetRecoveredBalance() int64 {
	if m != nil {
		return m.RecoveredBalance
	}
	return 0
}

func (m *PendingChannelsResponse_ForceClosedChannel) GetPendingHtlcs() []*PendingHTLC {
	if m != nil {
		return m.PendingHtlcs
	}
	return nil
}

func (m *PendingChannelsResponse_ForceClosedChannel) GetAnchor() PendingChannelsResponse_ForceClosedChannel_AnchorState {
	if m != nil {
		return m.Anchor
	}
	return PendingChannelsResponse_ForceClosedChannel_LIMBO
}

type ChannelEventSubscription struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelEventSubscription) Reset()         { *m = ChannelEventSubscription{} }
func (m *ChannelEventSubscription) String() string { return proto.CompactTextString(m) }
func (*ChannelEventSubscription) ProtoMessage()    {}
func (*ChannelEventSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{72}
}

func (m *ChannelEventSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelEventSubscription.Unmarshal(m, b)
}
func (m *ChannelEventSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelEventSubscription.Marshal(b, m, deterministic)
}
func (m *ChannelEventSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelEventSubscription.Merge(m, src)
}
func (m *ChannelEventSubscription) XXX_Size() int {
	return xxx_messageInfo_ChannelEventSubscription.Size(m)
}
func (m *ChannelEventSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelEventSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelEventSubscription proto.InternalMessageInfo

type ChannelEventUpdate struct {
	// Types that are valid to be assigned to Channel:
	//	*ChannelEventUpdate_OpenChannel
	//	*ChannelEventUpdate_ClosedChannel
	//	*ChannelEventUpdate_ActiveChannel
	//	*ChannelEventUpdate_InactiveChannel
	//	*ChannelEventUpdate_PendingOpenChannel
	Channel              isChannelEventUpdate_Channel  `protobuf_oneof:"channel"`
	Type                 ChannelEventUpdate_UpdateType `protobuf:"varint,5,opt,name=type,proto3,enum=lnrpc.ChannelEventUpdate_UpdateType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ChannelEventUpdate) Reset()         { *m = ChannelEventUpdate{} }
func (m *ChannelEventUpdate) String() string { return proto.CompactTextString(m) }
func (*ChannelEventUpdate) ProtoMessage()    {}
func (*ChannelEventUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{73}
}

func (m *ChannelEventUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelEventUpdate.Unmarshal(m, b)
}
func (m *ChannelEventUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelEventUpdate.Marshal(b, m, deterministic)
}
func (m *ChannelEventUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelEventUpdate.Merge(m, src)
}
func (m *ChannelEventUpdate) XXX_Size() int {
	return xxx_messageInfo_ChannelEventUpdate.Size(m)
}
func (m *ChannelEventUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelEventUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelEventUpdate proto.InternalMessageInfo

type isChannelEventUpdate_Channel interface {
	isChannelEventUpdate_Channel()
}

type ChannelEventUpdate_OpenChannel struct {
	OpenChannel *Channel `protobuf:"bytes,1,opt,name=open_channel,json=openChannel,proto3,oneof"`
}

type ChannelEventUpdate_ClosedChannel struct {
	ClosedChannel *ChannelCloseSummary `protobuf:"bytes,2,opt,name=closed_channel,json=closedChannel,proto3,oneof"`
}

type ChannelEventUpdate_ActiveChannel struct {
	ActiveChannel *ChannelPoint `protobuf:"bytes,3,opt,name=active_channel,json=activeChannel,proto3,oneof"`
}

type ChannelEventUpdate_InactiveChannel struct {
	InactiveChannel *ChannelPoint `protobuf:"bytes,4,opt,name=inactive_channel,json=inactiveChannel,proto3,oneof"`
}

type ChannelEventUpdate_PendingOpenChannel struct {
	PendingOpenChannel *PendingUpdate `protobuf:"bytes,6,opt,name=pending_open_channel,json=pendingOpenChannel,proto3,oneof"`
}

func (*ChannelEventUpdate_OpenChannel) isChannelEventUpdate_Channel() {}

func (*ChannelEventUpdate_ClosedChannel) isChannelEventUpdate_Channel() {}

func (*ChannelEventUpdate_ActiveChannel) isChannelEventUpdate_Channel() {}

func (*ChannelEventUpdate_InactiveChannel) isChannelEventUpdate_Channel() {}

func (*ChannelEventUpdate_PendingOpenChannel) isChannelEventUpdate_Channel() {}

func (m *ChannelEventUpdate) GetChannel() isChannelEventUpdate_Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ChannelEventUpdate) GetOpenChannel() *Channel {
	if x, ok := m.GetChannel().(*ChannelEventUpdate_OpenChannel); ok {
		return x.OpenChannel
	}
	return nil
}

func (m *ChannelEventUpdate) GetClosedChannel() *ChannelCloseSummary {
	if x, ok := m.GetChannel().(*ChannelEventUpdate_ClosedChannel); ok {
		return x.ClosedChannel
	}
	return nil
}

func (m *ChannelEventUpdate) GetActiveChannel() *ChannelPoint {
	if x, ok := m.GetChannel().(*ChannelEventUpdate_ActiveChannel); ok {
		return x.ActiveChannel
	}
	return nil
}

func (m *ChannelEventUpdate) GetInactiveChannel() *ChannelPoint {
	if x, ok := m.GetChannel().(*ChannelEventUpdate_InactiveChannel); ok {
		return x.InactiveChannel
	}
	return nil
}

func (m *ChannelEventUpdate) GetPendingOpenChannel() *PendingUpdate {
	if x, ok := m.GetChannel().(*ChannelEventUpdate_PendingOpenChannel); ok {
		return x.PendingOpenChannel
	}
	return nil
}

func (m *ChannelEventUpdate) GetType() ChannelEventUpdate_UpdateType {
	if m != nil {
		return m.Type
	}
	return ChannelEventUpdate_OPEN_CHANNEL
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ChannelEventUpdate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ChannelEventUpdate_OpenChannel)(nil),
		(*ChannelEventUpdate_ClosedChannel)(nil),
		(*ChannelEventUpdate_ActiveChannel)(nil),
		(*ChannelEventUpdate_InactiveChannel)(nil),
		(*ChannelEventUpdate_PendingOpenChannel)(nil),
	}
}

type WalletBalanceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletBalanceRequest) Reset()         { *m = WalletBalanceRequest{} }
func (m *WalletBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*WalletBalanceRequest) ProtoMessage()    {}
func (*WalletBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{74}
}

func (m *WalletBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletBalanceRequest.Unmarshal(m, b)
}
func (m *WalletBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletBalanceRequest.Marshal(b, m, deterministic)
}
func (m *WalletBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletBalanceRequest.Merge(m, src)
}
func (m *WalletBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_WalletBalanceRequest.Size(m)
}
func (m *WalletBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WalletBalanceRequest proto.InternalMessageInfo

type WalletBalanceResponse struct {
	// The balance of the wallet
	TotalBalance int64 `protobuf:"varint,1,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	// The confirmed balance of a wallet(with >= 1 confirmations)
	ConfirmedBalance int64 `protobuf:"varint,2,opt,name=confirmed_balance,json=confirmedBalance,proto3" json:"confirmed_balance,omitempty"`
	// The unconfirmed balance of a wallet(with 0 confirmations)
	UnconfirmedBalance   int64    `protobuf:"varint,3,opt,name=unconfirmed_balance,json=unconfirmedBalance,proto3" json:"unconfirmed_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletBalanceResponse) Reset()         { *m = WalletBalanceResponse{} }
func (m *WalletBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*WalletBalanceResponse) ProtoMessage()    {}
func (*WalletBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{75}
}

func (m *WalletBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletBalanceResponse.Unmarshal(m, b)
}
func (m *WalletBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletBalanceResponse.Marshal(b, m, deterministic)
}
func (m *WalletBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletBalanceResponse.Merge(m, src)
}
func (m *WalletBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_WalletBalanceResponse.Size(m)
}
func (m *WalletBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WalletBalanceResponse proto.InternalMessageInfo

func (m *WalletBalanceResponse) GetTotalBalance() int64 {
	if m != nil {
		return m.TotalBalance
	}
	return 0
}

func (m *WalletBalanceResponse) GetConfirmedBalance() int64 {
	if m != nil {
		return m.ConfirmedBalance
	}
	return 0
}

func (m *WalletBalanceResponse) GetUnconfirmedBalance() int64 {
	if m != nil {
		return m.UnconfirmedBalance
	}
	return 0
}

type GetAddressBalancesRequest struct {
	// Minimum number of confirmations for coins to be considered received
	Minconf int32 `protobuf:"varint,1,opt,name=minconf,proto3" json:"minconf,omitempty"`
	// If true then addresses which have been created but carry zero balance will be included
	Showzerobalance      bool     `protobuf:"varint,2,opt,name=showzerobalance,proto3" json:"showzerobalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressBalancesRequest) Reset()         { *m = GetAddressBalancesRequest{} }
func (m *GetAddressBalancesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressBalancesRequest) ProtoMessage()    {}
func (*GetAddressBalancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{76}
}

func (m *GetAddressBalancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressBalancesRequest.Unmarshal(m, b)
}
func (m *GetAddressBalancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressBalancesRequest.Marshal(b, m, deterministic)
}
func (m *GetAddressBalancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressBalancesRequest.Merge(m, src)
}
func (m *GetAddressBalancesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressBalancesRequest.Size(m)
}
func (m *GetAddressBalancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressBalancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressBalancesRequest proto.InternalMessageInfo

func (m *GetAddressBalancesRequest) GetMinconf() int32 {
	if m != nil {
		return m.Minconf
	}
	return 0
}

func (m *GetAddressBalancesRequest) GetShowzerobalance() bool {
	if m != nil {
		return m.Showzerobalance
	}
	return false
}

type GetAddressBalancesResponseAddr struct {
	// The address which has this balance
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Total balance in coins
	Total float64 `protobuf:"fixed64,2,opt,name=total,proto3" json:"total,omitempty"`
	// Total balance (atomic units)
	Stotal int64 `protobuf:"varint,3,opt,name=stotal,proto3" json:"stotal,omitempty"`
	// Balance which is currently spendable (coins)
	Spendable float64 `protobuf:"fixed64,4,opt,name=spendable,proto3" json:"spendable,omitempty"`
	// Balance which is currently spendable (atomic units)
	Sspendable int64 `protobuf:"varint,5,opt,name=sspendable,proto3" json:"sspendable,omitempty"`
	// Mined coins which have not yet matured (coins)
	Immaturereward float64 `protobuf:"fixed64,6,opt,name=immaturereward,proto3" json:"immaturereward,omitempty"`
	// Mined coins which have not yet matured (atomic units)
	Simmaturereward int64 `protobuf:"varint,7,opt,name=simmaturereward,proto3" json:"simmaturereward,omitempty"`
	// Unconfirmed balance in coins
	Unconfirmed float64 `protobuf:"fixed64,8,opt,name=unconfirmed,proto3" json:"unconfirmed,omitempty"`
	// Unconfirmed balance in atomic units
	Sunconfirmed int64 `protobuf:"varint,9,opt,name=sunconfirmed,proto3" json:"sunconfirmed,omitempty"`
	// The number of transaction outputs which make up the balance
	Outputcount          int32    `protobuf:"varint,10,opt,name=outputcount,proto3" json:"outputcount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressBalancesResponseAddr) Reset()         { *m = GetAddressBalancesResponseAddr{} }
func (m *GetAddressBalancesResponseAddr) String() string { return proto.CompactTextString(m) }
func (*GetAddressBalancesResponseAddr) ProtoMessage()    {}
func (*GetAddressBalancesResponseAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{77}
}

func (m *GetAddressBalancesResponseAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressBalancesResponseAddr.Unmarshal(m, b)
}
func (m *GetAddressBalancesResponseAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressBalancesResponseAddr.Marshal(b, m, deterministic)
}
func (m *GetAddressBalancesResponseAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressBalancesResponseAddr.Merge(m, src)
}
func (m *GetAddressBalancesResponseAddr) XXX_Size() int {
	return xxx_messageInfo_GetAddressBalancesResponseAddr.Size(m)
}
func (m *GetAddressBalancesResponseAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressBalancesResponseAddr.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressBalancesResponseAddr proto.InternalMessageInfo

func (m *GetAddressBalancesResponseAddr) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAddressBalancesResponseAddr) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetStotal() int64 {
	if m != nil {
		return m.Stotal
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetSpendable() float64 {
	if m != nil {
		return m.Spendable
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetSspendable() int64 {
	if m != nil {
		return m.Sspendable
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetImmaturereward() float64 {
	if m != nil {
		return m.Immaturereward
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetSimmaturereward() int64 {
	if m != nil {
		return m.Simmaturereward
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetUnconfirmed() float64 {
	if m != nil {
		return m.Unconfirmed
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetSunconfirmed() int64 {
	if m != nil {
		return m.Sunconfirmed
	}
	return 0
}

func (m *GetAddressBalancesResponseAddr) GetOutputcount() int32 {
	if m != nil {
		return m.Outputcount
	}
	return 0
}

type GetAddressBalancesResponse struct {
	Addrs                []*GetAddressBalancesResponseAddr `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GetAddressBalancesResponse) Reset()         { *m = GetAddressBalancesResponse{} }
func (m *GetAddressBalancesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAddressBalancesResponse) ProtoMessage()    {}
func (*GetAddressBalancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{78}
}

func (m *GetAddressBalancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressBalancesResponse.Unmarshal(m, b)
}
func (m *GetAddressBalancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressBalancesResponse.Marshal(b, m, deterministic)
}
func (m *GetAddressBalancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressBalancesResponse.Merge(m, src)
}
func (m *GetAddressBalancesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAddressBalancesResponse.Size(m)
}
func (m *GetAddressBalancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressBalancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressBalancesResponse proto.InternalMessageInfo

func (m *GetAddressBalancesResponse) GetAddrs() []*GetAddressBalancesResponseAddr {
	if m != nil {
		return m.Addrs
	}
	return nil
}

type Amount struct {
	// Value denominated in satoshis.
	Sat uint64 `protobuf:"varint,1,opt,name=sat,proto3" json:"sat,omitempty"`
	// Value denominated in milli-satoshis.
	Msat                 uint64   `protobuf:"varint,2,opt,name=msat,proto3" json:"msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Amount) Reset()         { *m = Amount{} }
func (m *Amount) String() string { return proto.CompactTextString(m) }
func (*Amount) ProtoMessage()    {}
func (*Amount) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{79}
}

func (m *Amount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Amount.Unmarshal(m, b)
}
func (m *Amount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Amount.Marshal(b, m, deterministic)
}
func (m *Amount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Amount.Merge(m, src)
}
func (m *Amount) XXX_Size() int {
	return xxx_messageInfo_Amount.Size(m)
}
func (m *Amount) XXX_DiscardUnknown() {
	xxx_messageInfo_Amount.DiscardUnknown(m)
}

var xxx_messageInfo_Amount proto.InternalMessageInfo

func (m *Amount) GetSat() uint64 {
	if m != nil {
		return m.Sat
	}
	return 0
}

func (m *Amount) GetMsat() uint64 {
	if m != nil {
		return m.Msat
	}
	return 0
}

type ChannelBalanceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelBalanceRequest) Reset()         { *m = ChannelBalanceRequest{} }
func (m *ChannelBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelBalanceRequest) ProtoMessage()    {}
func (*ChannelBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{80}
}

func (m *ChannelBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBalanceRequest.Unmarshal(m, b)
}
func (m *ChannelBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBalanceRequest.Marshal(b, m, deterministic)
}
func (m *ChannelBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBalanceRequest.Merge(m, src)
}
func (m *ChannelBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelBalanceRequest.Size(m)
}
func (m *ChannelBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBalanceRequest proto.InternalMessageInfo

type ChannelBalanceResponse struct {
	// Deprecated. Sum of channels balances denominated in satoshis
	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"` // Deprecated: Do not use.
	// Deprecated. Sum of channels pending balances denominated in satoshis
	PendingOpenBalance int64 `protobuf:"varint,2,opt,name=pending_open_balance,json=pendingOpenBalance,proto3" json:"pending_open_balance,omitempty"` // Deprecated: Do not use.
	// Sum of channels local balances.
	LocalBalance *Amount `protobuf:"bytes,3,opt,name=local_balance,json=localBalance,proto3" json:"local_balance,omitempty"`
	// Sum of channels remote balances.
	RemoteBalance *Amount `protobuf:"bytes,4,opt,name=remote_balance,json=remoteBalance,proto3" json:"remote_balance,omitempty"`
	// Sum of channels local unsettled balances.
	UnsettledLocalBalance *Amount `protobuf:"bytes,5,opt,name=unsettled_local_balance,json=unsettledLocalBalance,proto3" json:"unsettled_local_balance,omitempty"`
	// Sum of channels remote unsettled balances.
	UnsettledRemoteBalance *Amount `protobuf:"bytes,6,opt,name=unsettled_remote_balance,json=unsettledRemoteBalance,proto3" json:"unsettled_remote_balance,omitempty"`
	// Sum of channels pending local balances.
	PendingOpenLocalBalance *Amount `protobuf:"bytes,7,opt,name=pending_open_local_balance,json=pendingOpenLocalBalance,proto3" json:"pending_open_local_balance,omitempty"`
	// Sum of channels pending remote balances.
	PendingOpenRemoteBalance *Amount  `protobuf:"bytes,8,opt,name=pending_open_remote_balance,json=pendingOpenRemoteBalance,proto3" json:"pending_open_remote_balance,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ChannelBalanceResponse) Reset()         { *m = ChannelBalanceResponse{} }
func (m *ChannelBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelBalanceResponse) ProtoMessage()    {}
func (*ChannelBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{81}
}

func (m *ChannelBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBalanceResponse.Unmarshal(m, b)
}
func (m *ChannelBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBalanceResponse.Marshal(b, m, deterministic)
}
func (m *ChannelBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBalanceResponse.Merge(m, src)
}
func (m *ChannelBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelBalanceResponse.Size(m)
}
func (m *ChannelBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBalanceResponse proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *ChannelBalanceResponse) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// Deprecated: Do not use.
func (m *ChannelBalanceResponse) GetPendingOpenBalance() int64 {
	if m != nil {
		return m.PendingOpenBalance
	}
	return 0
}

func (m *ChannelBalanceResponse) GetLocalBalance() *Amount {
	if m != nil {
		return m.LocalBalance
	}
	return nil
}

func (m *ChannelBalanceResponse) GetRemoteBalance() *Amount {
	if m != nil {
		return m.RemoteBalance
	}
	return nil
}

func (m *ChannelBalanceResponse) GetUnsettledLocalBalance() *Amount {
	if m != nil {
		return m.UnsettledLocalBalance
	}
	return nil
}

func (m *ChannelBalanceResponse) GetUnsettledRemoteBalance() *Amount {
	if m != nil {
		return m.UnsettledRemoteBalance
	}
	return nil
}

func (m *ChannelBalanceResponse) GetPendingOpenLocalBalance() *Amount {
	if m != nil {
		return m.PendingOpenLocalBalance
	}
	return nil
}

func (m *ChannelBalanceResponse) GetPendingOpenRemoteBalance() *Amount {
	if m != nil {
		return m.PendingOpenRemoteBalance
	}
	return nil
}

type QueryRoutesRequest struct {
	// The 33-byte public key for the payment destination
	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	//
	//The amount to send expressed in satoshis.
	//
	//The fields amt and amt_msat are mutually exclusive.
	Amt int64 `protobuf:"varint,2,opt,name=amt,proto3" json:"amt,omitempty"`
	//
	//The amount to send expressed in millisatoshis.
	//
	//The fields amt and amt_msat are mutually exclusive.
	AmtMsat int64 `protobuf:"varint,12,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	//
	//An optional CLTV delta from the current height that should be used for the
	//timelock of the final hop. Note that unlike SendPayment, QueryRoutes does
	//not add any additional block padding on top of final_ctlv_delta. This
	//padding of a few blocks needs to be added manually or otherwise failures may
	//happen when a block comes in while the payment is in flight.
	FinalCltvDelta int32 `protobuf:"varint,4,opt,name=final_cltv_delta,json=finalCltvDelta,proto3" json:"final_cltv_delta,omitempty"`
	//
	//The maximum number of satoshis that will be paid as a fee of the payment.
	//This value can be represented either as a percentage of the amount being
	//sent, or as a fixed amount of the maximum fee the user is willing the pay to
	//send the payment.
	FeeLimit *FeeLimit `protobuf:"bytes,5,opt,name=fee_limit,json=feeLimit,proto3" json:"fee_limit,omitempty"`
	//
	//A list of nodes to ignore during path finding.
	IgnoredNodes [][]byte `protobuf:"bytes,6,rep,name=ignored_nodes,json=ignoredNodes,proto3" json:"ignored_nodes,omitempty"`
	//
	//Deprecated. A list of edges to ignore during path finding.
	IgnoredEdges []*EdgeLocator `protobuf:"bytes,7,rep,name=ignored_edges,json=ignoredEdges,proto3" json:"ignored_edges,omitempty"` // Deprecated: Do not use.
	//
	//The source node where the request route should originated from. If empty,
	//self is assumed.
	SourcePubKey []byte `protobuf:"bytes,8,opt,name=source_pub_key,json=sourcePubKey,proto3" json:"source_pub_key,omitempty"`
	//
	//If set to true, edge probabilities from mission control will be used to get
	//the optimal route.
	UseMissionControl bool `protobuf:"varint,9,opt,name=use_mission_control,json=useMissionControl,proto3" json:"use_mission_control,omitempty"`
	//
	//A list of directed node pairs that will be ignored during path finding.
	IgnoredPairs []*NodePair `protobuf:"bytes,10,rep,name=ignored_pairs,json=ignoredPairs,proto3" json:"ignored_pairs,omitempty"`
	//
	//An optional maximum total time lock for the route. If the source is empty or
	//ourselves, this should not exceed lnd's `--max-cltv-expiry` setting. If
	//zero, then the value of `--max-cltv-expiry` is used as the limit.
	CltvLimit uint32 `protobuf:"varint,11,opt,name=cltv_limit,json=cltvLimit,proto3" json:"cltv_limit,omitempty"`
	//
	//An optional field that can be used to pass an arbitrary set of TLV records
	//to a peer which understands the new records. This can be used to pass
	//application specific data during the payment attempt. If the destination
	//does not support the specified recrods, and error will be returned.
	//Record types are required to be in the custom range >= 65536.
	DestCustomRecords map[uint64][]byte `protobuf:"bytes,13,rep,name=dest_custom_records,json=destCustomRecords,proto3" json:"dest_custom_records,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//
	//The channel id of the channel that must be taken to the first hop. If zero,
	//any channel may be used.
	OutgoingChanId uint64 `protobuf:"varint,14,opt,name=outgoing_chan_id,json=outgoingChanId,proto3" json:"outgoing_chan_id,omitempty"`
	//
	//The pubkey of the last hop of the route. If empty, any hop may be used.
	LastHopPubkey []byte `protobuf:"bytes,15,opt,name=last_hop_pubkey,json=lastHopPubkey,proto3" json:"last_hop_pubkey,omitempty"`
	//
	//Optional route hints to reach the destination through private channels.
	RouteHints []*RouteHint `protobuf:"bytes,16,rep,name=route_hints,json=routeHints,proto3" json:"route_hints,omitempty"`
	//
	//Features assumed to be supported by the final node. All transitive feature
	//dependencies must also be set properly. For a given feature bit pair, either
	//optional or remote may be set, but not both. If this field is nil or empty,
	//the router will try to load destination features from the graph as a
	//fallback.
	DestFeatures         []FeatureBit `protobuf:"varint,17,rep,packed,name=dest_features,json=destFeatures,proto3,enum=lnrpc.FeatureBit" json:"dest_features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryRoutesRequest) Reset()         { *m = QueryRoutesRequest{} }
func (m *QueryRoutesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRoutesRequest) ProtoMessage()    {}
func (*QueryRoutesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{82}
}

func (m *QueryRoutesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRoutesRequest.Unmarshal(m, b)
}
func (m *QueryRoutesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRoutesRequest.Marshal(b, m, deterministic)
}
func (m *QueryRoutesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRoutesRequest.Merge(m, src)
}
func (m *QueryRoutesRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRoutesRequest.Size(m)
}
func (m *QueryRoutesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRoutesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRoutesRequest proto.InternalMessageInfo

func (m *QueryRoutesRequest) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *QueryRoutesRequest) GetAmt() int64 {
	if m != nil {
		return m.Amt
	}
	return 0
}

func (m *QueryRoutesRequest) GetAmtMsat() int64 {
	if m != nil {
		return m.AmtMsat
	}
	return 0
}

func (m *QueryRoutesRequest) GetFinalCltvDelta() int32 {
	if m != nil {
		return m.FinalCltvDelta
	}
	return 0
}

func (m *QueryRoutesRequest) GetFeeLimit() *FeeLimit {
	if m != nil {
		return m.FeeLimit
	}
	return nil
}

func (m *QueryRoutesRequest) GetIgnoredNodes() [][]byte {
	if m != nil {
		return m.IgnoredNodes
	}
	return nil
}

// Deprecated: Do not use.
func (m *QueryRoutesRequest) GetIgnoredEdges() []*EdgeLocator {
	if m != nil {
		return m.IgnoredEdges
	}
	return nil
}

func (m *QueryRoutesRequest) GetSourcePubKey() []byte {
	if m != nil {
		return m.SourcePubKey
	}
	return nil
}

func (m *QueryRoutesRequest) GetUseMissionControl() bool {
	if m != nil {
		return m.UseMissionControl
	}
	return false
}

func (m *QueryRoutesRequest) GetIgnoredPairs() []*NodePair {
	if m != nil {
		return m.IgnoredPairs
	}
	return nil
}

func (m *QueryRoutesRequest) GetCltvLimit() uint32 {
	if m != nil {
		return m.CltvLimit
	}
	return 0
}

func (m *QueryRoutesRequest) GetDestCustomRecords() map[uint64][]byte {
	if m != nil {
		return m.DestCustomRecords
	}
	return nil
}

func (m *QueryRoutesRequest) GetOutgoingChanId() uint64 {
	if m != nil {
		return m.OutgoingChanId
	}
	return 0
}

func (m *QueryRoutesRequest) GetLastHopPubkey() []byte {
	if m != nil {
		return m.LastHopPubkey
	}
	return nil
}

func (m *QueryRoutesRequest) GetRouteHints() []*RouteHint {
	if m != nil {
		return m.RouteHints
	}
	return nil
}

func (m *QueryRoutesRequest) GetDestFeatures() []FeatureBit {
	if m != nil {
		return m.DestFeatures
	}
	return nil
}

type NodePair struct {
	//
	//The sending node of the pair.
	From []byte `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	//
	//The receiving node of the pair.
	To                   []byte   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodePair) Reset()         { *m = NodePair{} }
func (m *NodePair) String() string { return proto.CompactTextString(m) }
func (*NodePair) ProtoMessage()    {}
func (*NodePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{83}
}

func (m *NodePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePair.Unmarshal(m, b)
}
func (m *NodePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePair.Marshal(b, m, deterministic)
}
func (m *NodePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePair.Merge(m, src)
}
func (m *NodePair) XXX_Size() int {
	return xxx_messageInfo_NodePair.Size(m)
}
func (m *NodePair) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePair.DiscardUnknown(m)
}

var xxx_messageInfo_NodePair proto.InternalMessageInfo

func (m *NodePair) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *NodePair) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

type EdgeLocator struct {
	// The short channel id of this edge.
	ChannelId uint64 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	//
	//The direction of this edge. If direction_reverse is false, the direction
	//of this edge is from the channel endpoint with the lexicographically smaller
	//pub key to the endpoint with the larger pub key. If direction_reverse is
	//is true, the edge goes the other way.
	DirectionReverse     bool     `protobuf:"varint,2,opt,name=direction_reverse,json=directionReverse,proto3" json:"direction_reverse,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdgeLocator) Reset()         { *m = EdgeLocator{} }
func (m *EdgeLocator) String() string { return proto.CompactTextString(m) }
func (*EdgeLocator) ProtoMessage()    {}
func (*EdgeLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{84}
}

func (m *EdgeLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeLocator.Unmarshal(m, b)
}
func (m *EdgeLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeLocator.Marshal(b, m, deterministic)
}
func (m *EdgeLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeLocator.Merge(m, src)
}
func (m *EdgeLocator) XXX_Size() int {
	return xxx_messageInfo_EdgeLocator.Size(m)
}
func (m *EdgeLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeLocator.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeLocator proto.InternalMessageInfo

func (m *EdgeLocator) GetChannelId() uint64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *EdgeLocator) GetDirectionReverse() bool {
	if m != nil {
		return m.DirectionReverse
	}
	return false
}

type QueryRoutesResponse struct {
	//
	//The route that results from the path finding operation. This is still a
	//repeated field to retain backwards compatibility.
	Routes []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	//
	//The success probability of the returned route based on the current mission
	//control state. [EXPERIMENTAL]
	SuccessProb          float64  `protobuf:"fixed64,2,opt,name=success_prob,json=successProb,proto3" json:"success_prob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRoutesResponse) Reset()         { *m = QueryRoutesResponse{} }
func (m *QueryRoutesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryRoutesResponse) ProtoMessage()    {}
func (*QueryRoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{85}
}

func (m *QueryRoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRoutesResponse.Unmarshal(m, b)
}
func (m *QueryRoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRoutesResponse.Marshal(b, m, deterministic)
}
func (m *QueryRoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRoutesResponse.Merge(m, src)
}
func (m *QueryRoutesResponse) XXX_Size() int {
	return xxx_messageInfo_QueryRoutesResponse.Size(m)
}
func (m *QueryRoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRoutesResponse proto.InternalMessageInfo

func (m *QueryRoutesResponse) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *QueryRoutesResponse) GetSuccessProb() float64 {
	if m != nil {
		return m.SuccessProb
	}
	return 0
}

type Hop struct {
	//
	//The unique channel ID for the channel. The first 3 bytes are the block
	//height, the next 3 the index within the block, and the last 2 bytes are the
	//output index for the channel.
	ChanId           uint64 `protobuf:"varint,1,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	ChanCapacity     int64  `protobuf:"varint,2,opt,name=chan_capacity,json=chanCapacity,proto3" json:"chan_capacity,omitempty"`
	AmtToForward     int64  `protobuf:"varint,3,opt,name=amt_to_forward,json=amtToForward,proto3" json:"amt_to_forward,omitempty"` // Deprecated: Do not use.
	Fee              int64  `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`                                         // Deprecated: Do not use.
	Expiry           uint32 `protobuf:"varint,5,opt,name=expiry,proto3" json:"expiry,omitempty"`
	AmtToForwardMsat int64  `protobuf:"varint,6,opt,name=amt_to_forward_msat,json=amtToForwardMsat,proto3" json:"amt_to_forward_msat,omitempty"`
	FeeMsat          int64  `protobuf:"varint,7,opt,name=fee_msat,json=feeMsat,proto3" json:"fee_msat,omitempty"`
	//
	//An optional public key of the hop. If the public key is given, the payment
	//can be executed without relying on a copy of the channel graph.
	PubKey string `protobuf:"bytes,8,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	//
	//If set to true, then this hop will be encoded using the new variable length
	//TLV format. Note that if any custom tlv_records below are specified, then
	//this field MUST be set to true for them to be encoded properly.
	TlvPayload bool `protobuf:"varint,9,opt,name=tlv_payload,json=tlvPayload,proto3" json:"tlv_payload,omitempty"`
	//
	//An optional TLV record that signals the use of an MPP payment. If present,
	//the receiver will enforce that that the same mpp_record is included in the
	//final hop payload of all non-zero payments in the HTLC set. If empty, a
	//regular single-shot payment is or was attempted.
	MppRecord *MPPRecord `protobuf:"bytes,10,opt,name=mpp_record,json=mppRecord,proto3" json:"mpp_record,omitempty"`
	//
	//An optional set of key-value TLV records. This is useful within the context
	//of the SendToRoute call as it allows callers to specify arbitrary K-V pairs
	//to drop off at each hop within the onion.
	CustomRecords        map[uint64][]byte `protobuf:"bytes,11,rep,name=custom_records,json=customRecords,proto3" json:"custom_records,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Hop) Reset()         { *m = Hop{} }
func (m *Hop) String() string { return proto.CompactTextString(m) }
func (*Hop) ProtoMessage()    {}
func (*Hop) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{86}
}

func (m *Hop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hop.Unmarshal(m, b)
}
func (m *Hop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hop.Marshal(b, m, deterministic)
}
func (m *Hop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hop.Merge(m, src)
}
func (m *Hop) XXX_Size() int {
	return xxx_messageInfo_Hop.Size(m)
}
func (m *Hop) XXX_DiscardUnknown() {
	xxx_messageInfo_Hop.DiscardUnknown(m)
}

var xxx_messageInfo_Hop proto.InternalMessageInfo

func (m *Hop) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *Hop) GetChanCapacity() int64 {
	if m != nil {
		return m.ChanCapacity
	}
	return 0
}

// Deprecated: Do not use.
func (m *Hop) GetAmtToForward() int64 {
	if m != nil {
		return m.AmtToForward
	}
	return 0
}

// Deprecated: Do not use.
func (m *Hop) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Hop) GetExpiry() uint32 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *Hop) GetAmtToForwardMsat() int64 {
	if m != nil {
		return m.AmtToForwardMsat
	}
	return 0
}

func (m *Hop) GetFeeMsat() int64 {
	if m != nil {
		return m.FeeMsat
	}
	return 0
}

func (m *Hop) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *Hop) GetTlvPayload() bool {
	if m != nil {
		return m.TlvPayload
	}
	return false
}

func (m *Hop) GetMppRecord() *MPPRecord {
	if m != nil {
		return m.MppRecord
	}
	return nil
}

func (m *Hop) GetCustomRecords() map[uint64][]byte {
	if m != nil {
		return m.CustomRecords
	}
	return nil
}

type MPPRecord struct {
	//
	//A unique, random identifier used to authenticate the sender as the intended
	//payer of a multi-path payment. The payment_addr must be the same for all
	//subpayments, and match the payment_addr provided in the receiver's invoice.
	//The same payment_addr must be used on all subpayments.
	PaymentAddr []byte `protobuf:"bytes,11,opt,name=payment_addr,json=paymentAddr,proto3" json:"payment_addr,omitempty"`
	//
	//The total amount in milli-satoshis being sent as part of a larger multi-path
	//payment. The caller is responsible for ensuring subpayments to the same node
	//and payment_hash sum exactly to total_amt_msat. The same
	//total_amt_msat must be used on all subpayments.
	TotalAmtMsat         int64    `protobuf:"varint,10,opt,name=total_amt_msat,json=totalAmtMsat,proto3" json:"total_amt_msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MPPRecord) Reset()         { *m = MPPRecord{} }
func (m *MPPRecord) String() string { return proto.CompactTextString(m) }
func (*MPPRecord) ProtoMessage()    {}
func (*MPPRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{87}
}

func (m *MPPRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MPPRecord.Unmarshal(m, b)
}
func (m *MPPRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MPPRecord.Marshal(b, m, deterministic)
}
func (m *MPPRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MPPRecord.Merge(m, src)
}
func (m *MPPRecord) XXX_Size() int {
	return xxx_messageInfo_MPPRecord.Size(m)
}
func (m *MPPRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MPPRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MPPRecord proto.InternalMessageInfo

func (m *MPPRecord) GetPaymentAddr() []byte {
	if m != nil {
		return m.PaymentAddr
	}
	return nil
}

func (m *MPPRecord) GetTotalAmtMsat() int64 {
	if m != nil {
		return m.TotalAmtMsat
	}
	return 0
}

//
//A path through the channel graph which runs over one or more channels in
//succession. This struct carries all the information required to craft the
//Sphinx onion packet, and send the payment along the first hop in the path. A
//route is only selected as valid if all the channels have sufficient capacity to
//carry the initial payment amount after fees are accounted for.
type Route struct {
	//
	//The cumulative (final) time lock across the entire route. This is the CLTV
	//value that should be extended to the first hop in the route. All other hops
	//will decrement the time-lock as advertised, leaving enough time for all
	//hops to wait for or present the payment preimage to complete the payment.
	TotalTimeLock uint32 `protobuf:"varint,1,opt,name=total_time_lock,json=totalTimeLock,proto3" json:"total_time_lock,omitempty"`
	//
	//The sum of the fees paid at each hop within the final route. In the case
	//of a one-hop payment, this value will be zero as we don't need to pay a fee
	//to ourselves.
	TotalFees int64 `protobuf:"varint,2,opt,name=total_fees,json=totalFees,proto3" json:"total_fees,omitempty"` // Deprecated: Do not use.
	//
	//The total amount of funds required to complete a payment over this route.
	//This value includes the cumulative fees at each hop. As a result, the HTLC
	//extended to the first-hop in the route will need to have at least this many
	//satoshis, otherwise the route will fail at an intermediate node due to an
	//insufficient amount of fees.
	TotalAmt int64 `protobuf:"varint,3,opt,name=total_amt,json=totalAmt,proto3" json:"total_amt,omitempty"` // Deprecated: Do not use.
	//
	//Contains details concerning the specific forwarding details at each hop.
	Hops []*Hop `protobuf:"bytes,4,rep,name=hops,proto3" json:"hops,omitempty"`
	//
	//The total fees in millisatoshis.
	TotalFeesMsat int64 `protobuf:"varint,5,opt,name=total_fees_msat,json=totalFeesMsat,proto3" json:"total_fees_msat,omitempty"`
	//
	//The total amount in millisatoshis.
	TotalAmtMsat         int64    `protobuf:"varint,6,opt,name=total_amt_msat,json=totalAmtMsat,proto3" json:"total_amt_msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{88}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetTotalTimeLock() uint32 {
	if m != nil {
		return m.TotalTimeLock
	}
	return 0
}

// Deprecated: Do not use.
func (m *Route) GetTotalFees() int64 {
	if m != nil {
		return m.TotalFees
	}
	return 0
}

// Deprecated: Do not use.
func (m *Route) GetTotalAmt() int64 {
	if m != nil {
		return m.TotalAmt
	}
	return 0
}

func (m *Route) GetHops() []*Hop {
	if m != nil {
		return m.Hops
	}
	return nil
}

func (m *Route) GetTotalFeesMsat() int64 {
	if m != nil {
		return m.TotalFeesMsat
	}
	return 0
}

func (m *Route) GetTotalAmtMsat() int64 {
	if m != nil {
		return m.TotalAmtMsat
	}
	return 0
}

type NodeInfoRequest struct {
	// The 33-byte compressed public of the target node
	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	// If true, will include all known channels associated with the node.
	IncludeChannels      bool     `protobuf:"varint,2,opt,name=include_channels,json=includeChannels,proto3" json:"include_channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfoRequest) Reset()         { *m = NodeInfoRequest{} }
func (m *NodeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*NodeInfoRequest) ProtoMessage()    {}
func (*NodeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{89}
}

func (m *NodeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoRequest.Unmarshal(m, b)
}
func (m *NodeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoRequest.Marshal(b, m, deterministic)
}
func (m *NodeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoRequest.Merge(m, src)
}
func (m *NodeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_NodeInfoRequest.Size(m)
}
func (m *NodeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoRequest proto.InternalMessageInfo

func (m *NodeInfoRequest) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *NodeInfoRequest) GetIncludeChannels() bool {
	if m != nil {
		return m.IncludeChannels
	}
	return false
}

type NodeInfo struct {
	//
	//An individual vertex/node within the channel graph. A node is
	//connected to other nodes by one or more channel edges emanating from it. As
	//the graph is directed, a node will also have an incoming edge attached to
	//it for each outgoing edge.
	Node *LightningNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// The total number of channels for the node.
	NumChannels uint32 `protobuf:"varint,2,opt,name=num_channels,json=numChannels,proto3" json:"num_channels,omitempty"`
	// The sum of all channels capacity for the node, denominated in satoshis.
	TotalCapacity int64 `protobuf:"varint,3,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	// A list of all public channels for the node.
	Channels             []*ChannelEdge `protobuf:"bytes,4,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{90}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetNode() *LightningNode {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *NodeInfo) GetNumChannels() uint32 {
	if m != nil {
		return m.NumChannels
	}
	return 0
}

func (m *NodeInfo) GetTotalCapacity() int64 {
	if m != nil {
		return m.TotalCapacity
	}
	return 0
}

func (m *NodeInfo) GetChannels() []*ChannelEdge {
	if m != nil {
		return m.Channels
	}
	return nil
}

//
//An individual vertex/node within the channel graph. A node is
//connected to other nodes by one or more channel edges emanating from it. As the
//graph is directed, a node will also have an incoming edge attached to it for
//each outgoing edge.
type LightningNode struct {
	LastUpdate uint32 `protobuf:"varint,1,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	// The public key of the node
	PubKey               []byte              `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Alias                string              `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Addresses            []*NodeAddress      `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Color                string              `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	Features             map[uint32]*Feature `protobuf:"bytes,6,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LightningNode) Reset()         { *m = LightningNode{} }
func (m *LightningNode) String() string { return proto.CompactTextString(m) }
func (*LightningNode) ProtoMessage()    {}
func (*LightningNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{91}
}

func (m *LightningNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightningNode.Unmarshal(m, b)
}
func (m *LightningNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightningNode.Marshal(b, m, deterministic)
}
func (m *LightningNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightningNode.Merge(m, src)
}
func (m *LightningNode) XXX_Size() int {
	return xxx_messageInfo_LightningNode.Size(m)
}
func (m *LightningNode) XXX_DiscardUnknown() {
	xxx_messageInfo_LightningNode.DiscardUnknown(m)
}

var xxx_messageInfo_LightningNode proto.InternalMessageInfo

func (m *LightningNode) GetLastUpdate() uint32 {
	if m != nil {
		return m.LastUpdate
	}
	return 0
}

func (m *LightningNode) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *LightningNode) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *LightningNode) GetAddresses() []*NodeAddress {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *LightningNode) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *LightningNode) GetFeatures() map[uint32]*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

type NodeAddress struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeAddress) Reset()         { *m = NodeAddress{} }
func (m *NodeAddress) String() string { return proto.CompactTextString(m) }
func (*NodeAddress) ProtoMessage()    {}
func (*NodeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{92}
}

func (m *NodeAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAddress.Unmarshal(m, b)
}
func (m *NodeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAddress.Marshal(b, m, deterministic)
}
func (m *NodeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAddress.Merge(m, src)
}
func (m *NodeAddress) XXX_Size() int {
	return xxx_messageInfo_NodeAddress.Size(m)
}
func (m *NodeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAddress proto.InternalMessageInfo

func (m *NodeAddress) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *NodeAddress) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type RoutingPolicy struct {
	TimeLockDelta        uint32   `protobuf:"varint,1,opt,name=time_lock_delta,json=timeLockDelta,proto3" json:"time_lock_delta,omitempty"`
	MinHtlc              int64    `protobuf:"varint,2,opt,name=min_htlc,json=minHtlc,proto3" json:"min_htlc,omitempty"`
	FeeBaseMsat          int64    `protobuf:"varint,3,opt,name=fee_base_msat,json=feeBaseMsat,proto3" json:"fee_base_msat,omitempty"`
	FeeRateMilliMsat     int64    `protobuf:"varint,4,opt,name=fee_rate_milli_msat,json=feeRateMilliMsat,proto3" json:"fee_rate_milli_msat,omitempty"`
	Disabled             bool     `protobuf:"varint,5,opt,name=disabled,proto3" json:"disabled,omitempty"`
	MaxHtlcMsat          uint64   `protobuf:"varint,6,opt,name=max_htlc_msat,json=maxHtlcMsat,proto3" json:"max_htlc_msat,omitempty"`
	LastUpdate           uint32   `protobuf:"varint,7,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoutingPolicy) Reset()         { *m = RoutingPolicy{} }
func (m *RoutingPolicy) String() string { return proto.CompactTextString(m) }
func (*RoutingPolicy) ProtoMessage()    {}
func (*RoutingPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{93}
}

func (m *RoutingPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutingPolicy.Unmarshal(m, b)
}
func (m *RoutingPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutingPolicy.Marshal(b, m, deterministic)
}
func (m *RoutingPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutingPolicy.Merge(m, src)
}
func (m *RoutingPolicy) XXX_Size() int {
	return xxx_messageInfo_RoutingPolicy.Size(m)
}
func (m *RoutingPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutingPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_RoutingPolicy proto.InternalMessageInfo

func (m *RoutingPolicy) GetTimeLockDelta() uint32 {
	if m != nil {
		return m.TimeLockDelta
	}
	return 0
}

func (m *RoutingPolicy) GetMinHtlc() int64 {
	if m != nil {
		return m.MinHtlc
	}
	return 0
}

func (m *RoutingPolicy) GetFeeBaseMsat() int64 {
	if m != nil {
		return m.FeeBaseMsat
	}
	return 0
}

func (m *RoutingPolicy) GetFeeRateMilliMsat() int64 {
	if m != nil {
		return m.FeeRateMilliMsat
	}
	return 0
}

func (m *RoutingPolicy) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *RoutingPolicy) GetMaxHtlcMsat() uint64 {
	if m != nil {
		return m.MaxHtlcMsat
	}
	return 0
}

func (m *RoutingPolicy) GetLastUpdate() uint32 {
	if m != nil {
		return m.LastUpdate
	}
	return 0
}

//
//A fully authenticated channel along with all its unique attributes.
//Once an authenticated channel announcement has been processed on the network,
//then an instance of ChannelEdgeInfo encapsulating the channels attributes is
//stored. The other portions relevant to routing policy of a channel are stored
//within a ChannelEdgePolicy for each direction of the channel.
type ChannelEdge struct {
	//
	//The unique channel ID for the channel. The first 3 bytes are the block
	//height, the next 3 the index within the block, and the last 2 bytes are the
	//output index for the channel.
	ChannelId            uint64         `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChanPoint            string         `protobuf:"bytes,2,opt,name=chan_point,json=chanPoint,proto3" json:"chan_point,omitempty"`
	LastUpdate           uint32         `protobuf:"varint,3,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"` // Deprecated: Do not use.
	Node1Pub             []byte         `protobuf:"bytes,4,opt,name=node1_pub,json=node1Pub,proto3" json:"node1_pub,omitempty"`
	Node2Pub             []byte         `protobuf:"bytes,5,opt,name=node2_pub,json=node2Pub,proto3" json:"node2_pub,omitempty"`
	Capacity             int64          `protobuf:"varint,6,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Node1Policy          *RoutingPolicy `protobuf:"bytes,7,opt,name=node1_policy,json=node1Policy,proto3" json:"node1_policy,omitempty"`
	Node2Policy          *RoutingPolicy `protobuf:"bytes,8,opt,name=node2_policy,json=node2Policy,proto3" json:"node2_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChannelEdge) Reset()         { *m = ChannelEdge{} }
func (m *ChannelEdge) String() string { return proto.CompactTextString(m) }
func (*ChannelEdge) ProtoMessage()    {}
func (*ChannelEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{94}
}

func (m *ChannelEdge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelEdge.Unmarshal(m, b)
}
func (m *ChannelEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelEdge.Marshal(b, m, deterministic)
}
func (m *ChannelEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelEdge.Merge(m, src)
}
func (m *ChannelEdge) XXX_Size() int {
	return xxx_messageInfo_ChannelEdge.Size(m)
}
func (m *ChannelEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelEdge.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelEdge proto.InternalMessageInfo

func (m *ChannelEdge) GetChannelId() uint64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *ChannelEdge) GetChanPoint() string {
	if m != nil {
		return m.ChanPoint
	}
	return ""
}

// Deprecated: Do not use.
func (m *ChannelEdge) GetLastUpdate() uint32 {
	if m != nil {
		return m.LastUpdate
	}
	return 0
}

func (m *ChannelEdge) GetNode1Pub() []byte {
	if m != nil {
		return m.Node1Pub
	}
	return nil
}

func (m *ChannelEdge) GetNode2Pub() []byte {
	if m != nil {
		return m.Node2Pub
	}
	return nil
}

func (m *ChannelEdge) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ChannelEdge) GetNode1Policy() *RoutingPolicy {
	if m != nil {
		return m.Node1Policy
	}
	return nil
}

func (m *ChannelEdge) GetNode2Policy() *RoutingPolicy {
	if m != nil {
		return m.Node2Policy
	}
	return nil
}

type ChannelGraphRequest struct {
	//
	//Whether unannounced channels are included in the response or not. If set,
	//unannounced channels are included. Unannounced channels are both private
	//channels, and public channels that are not yet announced to the network.
	IncludeUnannounced   bool     `protobuf:"varint,1,opt,name=include_unannounced,json=includeUnannounced,proto3" json:"include_unannounced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelGraphRequest) Reset()         { *m = ChannelGraphRequest{} }
func (m *ChannelGraphRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelGraphRequest) ProtoMessage()    {}
func (*ChannelGraphRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{95}
}

func (m *ChannelGraphRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelGraphRequest.Unmarshal(m, b)
}
func (m *ChannelGraphRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelGraphRequest.Marshal(b, m, deterministic)
}
func (m *ChannelGraphRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelGraphRequest.Merge(m, src)
}
func (m *ChannelGraphRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelGraphRequest.Size(m)
}
func (m *ChannelGraphRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelGraphRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelGraphRequest proto.InternalMessageInfo

func (m *ChannelGraphRequest) GetIncludeUnannounced() bool {
	if m != nil {
		return m.IncludeUnannounced
	}
	return false
}

// Returns a new instance of the directed channel graph.
type ChannelGraph struct {
	// The list of `LightningNode`s in this channel graph
	Nodes []*LightningNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// The list of `ChannelEdge`s in this channel graph
	Edges                []*ChannelEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChannelGraph) Reset()         { *m = ChannelGraph{} }
func (m *ChannelGraph) String() string { return proto.CompactTextString(m) }
func (*ChannelGraph) ProtoMessage()    {}
func (*ChannelGraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{96}
}

func (m *ChannelGraph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelGraph.Unmarshal(m, b)
}
func (m *ChannelGraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelGraph.Marshal(b, m, deterministic)
}
func (m *ChannelGraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelGraph.Merge(m, src)
}
func (m *ChannelGraph) XXX_Size() int {
	return xxx_messageInfo_ChannelGraph.Size(m)
}
func (m *ChannelGraph) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelGraph.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelGraph proto.InternalMessageInfo

func (m *ChannelGraph) GetNodes() []*LightningNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ChannelGraph) GetEdges() []*ChannelEdge {
	if m != nil {
		return m.Edges
	}
	return nil
}

type NodeMetricsRequest struct {
	// The requested node metrics.
	Types                []NodeMetricType `protobuf:"varint,1,rep,packed,name=types,proto3,enum=lnrpc.NodeMetricType" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NodeMetricsRequest) Reset()         { *m = NodeMetricsRequest{} }
func (m *NodeMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*NodeMetricsRequest) ProtoMessage()    {}
func (*NodeMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{97}
}

func (m *NodeMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMetricsRequest.Unmarshal(m, b)
}
func (m *NodeMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMetricsRequest.Marshal(b, m, deterministic)
}
func (m *NodeMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMetricsRequest.Merge(m, src)
}
func (m *NodeMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_NodeMetricsRequest.Size(m)
}
func (m *NodeMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMetricsRequest proto.InternalMessageInfo

func (m *NodeMetricsRequest) GetTypes() []NodeMetricType {
	if m != nil {
		return m.Types
	}
	return nil
}

type NodeMetricsResponse struct {
	//
	//Betweenness centrality is the sum of the ratio of shortest paths that pass
	//through the node for each pair of nodes in the graph (not counting paths
	//starting or ending at this node).
	//Map of node pubkey to betweenness centrality of the node. Normalized
	//values are in the [0,1] closed interval.
	BetweennessCentrality map[string]*FloatMetric `protobuf:"bytes,1,rep,name=betweenness_centrality,json=betweennessCentrality,proto3" json:"betweenness_centrality,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *NodeMetricsResponse) Reset()         { *m = NodeMetricsResponse{} }
func (m *NodeMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*NodeMetricsResponse) ProtoMessage()    {}
func (*NodeMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{98}
}

func (m *NodeMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMetricsResponse.Unmarshal(m, b)
}
func (m *NodeMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMetricsResponse.Marshal(b, m, deterministic)
}
func (m *NodeMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMetricsResponse.Merge(m, src)
}
func (m *NodeMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_NodeMetricsResponse.Size(m)
}
func (m *NodeMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMetricsResponse proto.InternalMessageInfo

func (m *NodeMetricsResponse) GetBetweennessCentrality() map[string]*FloatMetric {
	if m != nil {
		return m.BetweennessCentrality
	}
	return nil
}

type FloatMetric struct {
	// Arbitrary float value.
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// The value normalized to [0,1] or [-1,1].
	NormalizedValue      float64  `protobuf:"fixed64,2,opt,name=normalized_value,json=normalizedValue,proto3" json:"normalized_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FloatMetric) Reset()         { *m = FloatMetric{} }
func (m *FloatMetric) String() string { return proto.CompactTextString(m) }
func (*FloatMetric) ProtoMessage()    {}
func (*FloatMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{99}
}

func (m *FloatMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatMetric.Unmarshal(m, b)
}
func (m *FloatMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatMetric.Marshal(b, m, deterministic)
}
func (m *FloatMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatMetric.Merge(m, src)
}
func (m *FloatMetric) XXX_Size() int {
	return xxx_messageInfo_FloatMetric.Size(m)
}
func (m *FloatMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatMetric.DiscardUnknown(m)
}

var xxx_messageInfo_FloatMetric proto.InternalMessageInfo

func (m *FloatMetric) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *FloatMetric) GetNormalizedValue() float64 {
	if m != nil {
		return m.NormalizedValue
	}
	return 0
}

type ChanInfoRequest struct {
	//
	//The unique channel ID for the channel. The first 3 bytes are the block
	//height, the next 3 the index within the block, and the last 2 bytes are the
	//output index for the channel.
	ChanId               uint64   `protobuf:"varint,1,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChanInfoRequest) Reset()         { *m = ChanInfoRequest{} }
func (m *ChanInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ChanInfoRequest) ProtoMessage()    {}
func (*ChanInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{100}
}

func (m *ChanInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChanInfoRequest.Unmarshal(m, b)
}
func (m *ChanInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChanInfoRequest.Marshal(b, m, deterministic)
}
func (m *ChanInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChanInfoRequest.Merge(m, src)
}
func (m *ChanInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ChanInfoRequest.Size(m)
}
func (m *ChanInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChanInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChanInfoRequest proto.InternalMessageInfo

func (m *ChanInfoRequest) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

type NetworkInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInfoRequest) Reset()         { *m = NetworkInfoRequest{} }
func (m *NetworkInfoRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkInfoRequest) ProtoMessage()    {}
func (*NetworkInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{101}
}

func (m *NetworkInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInfoRequest.Unmarshal(m, b)
}
func (m *NetworkInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInfoRequest.Marshal(b, m, deterministic)
}
func (m *NetworkInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInfoRequest.Merge(m, src)
}
func (m *NetworkInfoRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkInfoRequest.Size(m)
}
func (m *NetworkInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInfoRequest proto.InternalMessageInfo

type NetworkInfo struct {
	GraphDiameter        uint32  `protobuf:"varint,1,opt,name=graph_diameter,json=graphDiameter,proto3" json:"graph_diameter,omitempty"`
	AvgOutDegree         float64 `protobuf:"fixed64,2,opt,name=avg_out_degree,json=avgOutDegree,proto3" json:"avg_out_degree,omitempty"`
	MaxOutDegree         uint32  `protobuf:"varint,3,opt,name=max_out_degree,json=maxOutDegree,proto3" json:"max_out_degree,omitempty"`
	NumNodes             uint32  `protobuf:"varint,4,opt,name=num_nodes,json=numNodes,proto3" json:"num_nodes,omitempty"`
	NumChannels          uint32  `protobuf:"varint,5,opt,name=num_channels,json=numChannels,proto3" json:"num_channels,omitempty"`
	TotalNetworkCapacity int64   `protobuf:"varint,6,opt,name=total_network_capacity,json=totalNetworkCapacity,proto3" json:"total_network_capacity,omitempty"`
	AvgChannelSize       float64 `protobuf:"fixed64,7,opt,name=avg_channel_size,json=avgChannelSize,proto3" json:"avg_channel_size,omitempty"`
	MinChannelSize       int64   `protobuf:"varint,8,opt,name=min_channel_size,json=minChannelSize,proto3" json:"min_channel_size,omitempty"`
	MaxChannelSize       int64   `protobuf:"varint,9,opt,name=max_channel_size,json=maxChannelSize,proto3" json:"max_channel_size,omitempty"`
	MedianChannelSizeSat int64   `protobuf:"varint,10,opt,name=median_channel_size_sat,json=medianChannelSizeSat,proto3" json:"median_channel_size_sat,omitempty"`
	// The number of edges marked as zombies.
	NumZombieChans       uint64   `protobuf:"varint,11,opt,name=num_zombie_chans,json=numZombieChans,proto3" json:"num_zombie_chans,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInfo) Reset()         { *m = NetworkInfo{} }
func (m *NetworkInfo) String() string { return proto.CompactTextString(m) }
func (*NetworkInfo) ProtoMessage()    {}
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{102}
}

func (m *NetworkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInfo.Unmarshal(m, b)
}
func (m *NetworkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInfo.Marshal(b, m, deterministic)
}
func (m *NetworkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInfo.Merge(m, src)
}
func (m *NetworkInfo) XXX_Size() int {
	return xxx_messageInfo_NetworkInfo.Size(m)
}
func (m *NetworkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInfo proto.InternalMessageInfo

func (m *NetworkInfo) GetGraphDiameter() uint32 {
	if m != nil {
		return m.GraphDiameter
	}
	return 0
}

func (m *NetworkInfo) GetAvgOutDegree() float64 {
	if m != nil {
		return m.AvgOutDegree
	}
	return 0
}

func (m *NetworkInfo) GetMaxOutDegree() uint32 {
	if m != nil {
		return m.MaxOutDegree
	}
	return 0
}

func (m *NetworkInfo) GetNumNodes() uint32 {
	if m != nil {
		return m.NumNodes
	}
	return 0
}

func (m *NetworkInfo) GetNumChannels() uint32 {
	if m != nil {
		return m.NumChannels
	}
	return 0
}

func (m *NetworkInfo) GetTotalNetworkCapacity() int64 {
	if m != nil {
		return m.TotalNetworkCapacity
	}
	return 0
}

func (m *NetworkInfo) GetAvgChannelSize() float64 {
	if m != nil {
		return m.AvgChannelSize
	}
	return 0
}

func (m *NetworkInfo) GetMinChannelSize() int64 {
	if m != nil {
		return m.MinChannelSize
	}
	return 0
}

func (m *NetworkInfo) GetMaxChannelSize() int64 {
	if m != nil {
		return m.MaxChannelSize
	}
	return 0
}

func (m *NetworkInfo) GetMedianChannelSizeSat() int64 {
	if m != nil {
		return m.MedianChannelSizeSat
	}
	return 0
}

func (m *NetworkInfo) GetNumZombieChans() uint64 {
	if m != nil {
		return m.NumZombieChans
	}
	return 0
}

type StopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{103}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

type StopResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{104}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

type GraphTopologySubscription struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphTopologySubscription) Reset()         { *m = GraphTopologySubscription{} }
func (m *GraphTopologySubscription) String() string { return proto.CompactTextString(m) }
func (*GraphTopologySubscription) ProtoMessage()    {}
func (*GraphTopologySubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{105}
}

func (m *GraphTopologySubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTopologySubscription.Unmarshal(m, b)
}
func (m *GraphTopologySubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTopologySubscription.Marshal(b, m, deterministic)
}
func (m *GraphTopologySubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTopologySubscription.Merge(m, src)
}
func (m *GraphTopologySubscription) XXX_Size() int {
	return xxx_messageInfo_GraphTopologySubscription.Size(m)
}
func (m *GraphTopologySubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTopologySubscription.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTopologySubscription proto.InternalMessageInfo

type GraphTopologyUpdate struct {
	NodeUpdates          []*NodeUpdate          `protobuf:"bytes,1,rep,name=node_updates,json=nodeUpdates,proto3" json:"node_updates,omitempty"`
	ChannelUpdates       []*ChannelEdgeUpdate   `protobuf:"bytes,2,rep,name=channel_updates,json=channelUpdates,proto3" json:"channel_updates,omitempty"`
	ClosedChans          []*ClosedChannelUpdate `protobuf:"bytes,3,rep,name=closed_chans,json=closedChans,proto3" json:"closed_chans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GraphTopologyUpdate) Reset()         { *m = GraphTopologyUpdate{} }
func (m *GraphTopologyUpdate) String() string { return proto.CompactTextString(m) }
func (*GraphTopologyUpdate) ProtoMessage()    {}
func (*GraphTopologyUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{106}
}

func (m *GraphTopologyUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphTopologyUpdate.Unmarshal(m, b)
}
func (m *GraphTopologyUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphTopologyUpdate.Marshal(b, m, deterministic)
}
func (m *GraphTopologyUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphTopologyUpdate.Merge(m, src)
}
func (m *GraphTopologyUpdate) XXX_Size() int {
	return xxx_messageInfo_GraphTopologyUpdate.Size(m)
}
func (m *GraphTopologyUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphTopologyUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_GraphTopologyUpdate proto.InternalMessageInfo

func (m *GraphTopologyUpdate) GetNodeUpdates() []*NodeUpdate {
	if m != nil {
		return m.NodeUpdates
	}
	return nil
}

func (m *GraphTopologyUpdate) GetChannelUpdates() []*ChannelEdgeUpdate {
	if m != nil {
		return m.ChannelUpdates
	}
	return nil
}

func (m *GraphTopologyUpdate) GetClosedChans() []*ClosedChannelUpdate {
	if m != nil {
		return m.ClosedChans
	}
	return nil
}

type NodeUpdate struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	IdentityKey          string   `protobuf:"bytes,2,opt,name=identity_key,json=identityKey,proto3" json:"identity_key,omitempty"`
	GlobalFeatures       []byte   `protobuf:"bytes,3,opt,name=global_features,json=globalFeatures,proto3" json:"global_features,omitempty"`
	Alias                string   `protobuf:"bytes,4,opt,name=alias,proto3" json:"alias,omitempty"`
	Color                string   `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeUpdate) Reset()         { *m = NodeUpdate{} }
func (m *NodeUpdate) String() string { return proto.CompactTextString(m) }
func (*NodeUpdate) ProtoMessage()    {}
func (*NodeUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{107}
}

func (m *NodeUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeUpdate.Unmarshal(m, b)
}
func (m *NodeUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeUpdate.Marshal(b, m, deterministic)
}
func (m *NodeUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeUpdate.Merge(m, src)
}
func (m *NodeUpdate) XXX_Size() int {
	return xxx_messageInfo_NodeUpdate.Size(m)
}
func (m *NodeUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_NodeUpdate proto.InternalMessageInfo

func (m *NodeUpdate) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *NodeUpdate) GetIdentityKey() string {
	if m != nil {
		return m.IdentityKey
	}
	return ""
}

func (m *NodeUpdate) GetGlobalFeatures() []byte {
	if m != nil {
		return m.GlobalFeatures
	}
	return nil
}

func (m *NodeUpdate) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *NodeUpdate) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type ChannelEdgeUpdate struct {
	//
	//The unique channel ID for the channel. The first 3 bytes are the block
	//height, the next 3 the index within the block, and the last 2 bytes are the
	//output index for the channel.
	ChanId               uint64         `protobuf:"varint,1,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	ChanPoint            *ChannelPoint  `protobuf:"bytes,2,opt,name=chan_point,json=chanPoint,proto3" json:"chan_point,omitempty"`
	Capacity             int64          `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	RoutingPolicy        *RoutingPolicy `protobuf:"bytes,4,opt,name=routing_policy,json=routingPolicy,proto3" json:"routing_policy,omitempty"`
	AdvertisingNode      string         `protobuf:"bytes,5,opt,name=advertising_node,json=advertisingNode,proto3" json:"advertising_node,omitempty"`
	ConnectingNode       string         `protobuf:"bytes,6,opt,name=connecting_node,json=connectingNode,proto3" json:"connecting_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChannelEdgeUpdate) Reset()         { *m = ChannelEdgeUpdate{} }
func (m *ChannelEdgeUpdate) String() string { return proto.CompactTextString(m) }
func (*ChannelEdgeUpdate) ProtoMessage()    {}
func (*ChannelEdgeUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{108}
}

func (m *ChannelEdgeUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelEdgeUpdate.Unmarshal(m, b)
}
func (m *ChannelEdgeUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelEdgeUpdate.Marshal(b, m, deterministic)
}
func (m *ChannelEdgeUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelEdgeUpdate.Merge(m, src)
}
func (m *ChannelEdgeUpdate) XXX_Size() int {
	return xxx_messageInfo_ChannelEdgeUpdate.Size(m)
}
func (m *ChannelEdgeUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelEdgeUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelEdgeUpdate proto.InternalMessageInfo

func (m *ChannelEdgeUpdate) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *ChannelEdgeUpdate) GetChanPoint() *ChannelPoint {
	if m != nil {
		return m.ChanPoint
	}
	return nil
}

func (m *ChannelEdgeUpdate) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ChannelEdgeUpdate) GetRoutingPolicy() *RoutingPolicy {
	if m != nil {
		return m.RoutingPolicy
	}
	return nil
}

func (m *ChannelEdgeUpdate) GetAdvertisingNode() string {
	if m != nil {
		return m.AdvertisingNode
	}
	return ""
}

func (m *ChannelEdgeUpdate) GetConnectingNode() string {
	if m != nil {
		return m.ConnectingNode
	}
	return ""
}

type ClosedChannelUpdate struct {
	//
	//The unique channel ID for the channel. The first 3 bytes are the block
	//height, the next 3 the index within the block, and the last 2 bytes are the
	//output index for the channel.
	ChanId               uint64        `protobuf:"varint,1,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	Capacity             int64         `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	ClosedHeight         uint32        `protobuf:"varint,3,opt,name=closed_height,json=closedHeight,proto3" json:"closed_height,omitempty"`
	ChanPoint            *ChannelPoint `protobuf:"bytes,4,opt,name=chan_point,json=chanPoint,proto3" json:"chan_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClosedChannelUpdate) Reset()         { *m = ClosedChannelUpdate{} }
func (m *ClosedChannelUpdate) String() string { return proto.CompactTextString(m) }
func (*ClosedChannelUpdate) ProtoMessage()    {}
func (*ClosedChannelUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{109}
}

func (m *ClosedChannelUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosedChannelUpdate.Unmarshal(m, b)
}
func (m *ClosedChannelUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosedChannelUpdate.Marshal(b, m, deterministic)
}
func (m *ClosedChannelUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosedChannelUpdate.Merge(m, src)
}
func (m *ClosedChannelUpdate) XXX_Size() int {
	return xxx_messageInfo_ClosedChannelUpdate.Size(m)
}
func (m *ClosedChannelUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosedChannelUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ClosedChannelUpdate proto.InternalMessageInfo

func (m *ClosedChannelUpdate) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *ClosedChannelUpdate) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *ClosedChannelUpdate) GetClosedHeight() uint32 {
	if m != nil {
		return m.ClosedHeight
	}
	return 0
}

func (m *ClosedChannelUpdate) GetChanPoint() *ChannelPoint {
	if m != nil {
		return m.ChanPoint
	}
	return nil
}

type HopHint struct {
	// The public key of the node at the start of the channel.
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The unique identifier of the channel.
	ChanId uint64 `protobuf:"varint,2,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// The base fee of the channel denominated in millisatoshis.
	FeeBaseMsat uint32 `protobuf:"varint,3,opt,name=fee_base_msat,json=feeBaseMsat,proto3" json:"fee_base_msat,omitempty"`
	//
	//The fee rate of the channel for sending one satoshi across it denominated in
	//millionths of a satoshi.
	FeeProportionalMillionths uint32 `protobuf:"varint,4,opt,name=fee_proportional_millionths,json=feeProportionalMillionths,proto3" json:"fee_proportional_millionths,omitempty"`
	// The time-lock delta of the channel.
	CltvExpiryDelta      uint32   `protobuf:"varint,5,opt,name=cltv_expiry_delta,json=cltvExpiryDelta,proto3" json:"cltv_expiry_delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HopHint) Reset()         { *m = HopHint{} }
func (m *HopHint) String() string { return proto.CompactTextString(m) }
func (*HopHint) ProtoMessage()    {}
func (*HopHint) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{110}
}

func (m *HopHint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HopHint.Unmarshal(m, b)
}
func (m *HopHint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HopHint.Marshal(b, m, deterministic)
}
func (m *HopHint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HopHint.Merge(m, src)
}
func (m *HopHint) XXX_Size() int {
	return xxx_messageInfo_HopHint.Size(m)
}
func (m *HopHint) XXX_DiscardUnknown() {
	xxx_messageInfo_HopHint.DiscardUnknown(m)
}

var xxx_messageInfo_HopHint proto.InternalMessageInfo

func (m *HopHint) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *HopHint) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *HopHint) GetFeeBaseMsat() uint32 {
	if m != nil {
		return m.FeeBaseMsat
	}
	return 0
}

func (m *HopHint) GetFeeProportionalMillionths() uint32 {
	if m != nil {
		return m.FeeProportionalMillionths
	}
	return 0
}

func (m *HopHint) GetCltvExpiryDelta() uint32 {
	if m != nil {
		return m.CltvExpiryDelta
	}
	return 0
}

type RouteHint struct {
	//
	//A list of hop hints that when chained together can assist in reaching a
	//specific destination.
	HopHints             []*HopHint `protobuf:"bytes,1,rep,name=hop_hints,json=hopHints,proto3" json:"hop_hints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RouteHint) Reset()         { *m = RouteHint{} }
func (m *RouteHint) String() string { return proto.CompactTextString(m) }
func (*RouteHint) ProtoMessage()    {}
func (*RouteHint) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{111}
}

func (m *RouteHint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteHint.Unmarshal(m, b)
}
func (m *RouteHint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteHint.Marshal(b, m, deterministic)
}
func (m *RouteHint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteHint.Merge(m, src)
}
func (m *RouteHint) XXX_Size() int {
	return xxx_messageInfo_RouteHint.Size(m)
}
func (m *RouteHint) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteHint.DiscardUnknown(m)
}

var xxx_messageInfo_RouteHint proto.InternalMessageInfo

func (m *RouteHint) GetHopHints() []*HopHint {
	if m != nil {
		return m.HopHints
	}
	return nil
}

type Invoice struct {
	//
	//An optional memo to attach along with the invoice. Used for record keeping
	//purposes for the invoice's creator, and will also be set in the description
	//field of the encoded payment request if the description_hash field is not
	//being used.
	Memo string `protobuf:"bytes,1,opt,name=memo,proto3" json:"memo,omitempty"`
	//
	//The 32 byte preimage which will allow settling an incoming HTLC.
	RPreimage []byte `protobuf:"bytes,3,opt,name=r_preimage,json=rPreimage,proto3" json:"r_preimage,omitempty"`
	//
	//The hash of the preimage.
	RHash []byte `protobuf:"bytes,4,opt,name=r_hash,json=rHash,proto3" json:"r_hash,omitempty"`
	//
	//The value of this invoice in satoshis
	//
	//The fields value and value_msat are mutually exclusive.
	Value int64 `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
	//
	//The value of this invoice in millisatoshis
	//
	//The fields value and value_msat are mutually exclusive.
	ValueMsat int64 `protobuf:"varint,23,opt,name=value_msat,json=valueMsat,proto3" json:"value_msat,omitempty"`
	// Whether this invoice has been fulfilled
	Settled bool `protobuf:"varint,6,opt,name=settled,proto3" json:"settled,omitempty"` // Deprecated: Do not use.
	// When this invoice was created
	CreationDate int64 `protobuf:"varint,7,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	// When this invoice was settled
	SettleDate int64 `protobuf:"varint,8,opt,name=settle_date,json=settleDate,proto3" json:"settle_date,omitempty"`
	//
	//A bare-bones invoice for a payment within the Lightning Network. With the
	//details of the invoice, the sender has all the data necessary to send a
	//payment to the recipient.
	PaymentRequest string `protobuf:"bytes,9,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
	//
	//Hash (SHA-256) of a description of the payment. Used if the description of
	//payment (memo) is too long to naturally fit within the description field
	//of an encoded payment request.
	DescriptionHash []byte `protobuf:"bytes,10,opt,name=description_hash,json=descriptionHash,proto3" json:"description_hash,omitempty"`
	// Payment request expiry time in seconds. Default is 3600 (1 hour).
	Expiry int64 `protobuf:"varint,11,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// Fallback on-chain address.
	FallbackAddr string `protobuf:"bytes,12,opt,name=fallback_addr,json=fallbackAddr,proto3" json:"fallback_addr,omitempty"`
	// Delta to use for the time-lock of the CLTV extended to the final hop.
	CltvExpiry uint64 `protobuf:"varint,13,opt,name=cltv_expiry,json=cltvExpiry,proto3" json:"cltv_expiry,omitempty"`
	//
	//Route hints that can each be individually used to assist in reaching the
	//invoice's destination.
	RouteHints []*RouteHint `protobuf:"bytes,14,rep,name=route_hints,json=routeHints,proto3" json:"route_hints,omitempty"`
	// Whether this invoice should include routing hints for private channels.
	Private bool `protobuf:"varint,15,opt,name=private,proto3" json:"private,omitempty"`
	//
	//The "add" index of this invoice. Each newly created invoice will increment
	//this index making it monotonically increasing. Callers to the
	//SubscribeInvoices call can use this to instantly get notified of all added
	//invoices with an add_index greater than this one.
	AddIndex uint64 `protobuf:"varint,16,opt,name=add_index,json=addIndex,proto3" json:"add_index,omitempty"`
	//
	//The "settle" index of this invoice. Each newly settled invoice will
	//increment this index making it monotonically increasing. Callers to the
	//SubscribeInvoices call can use this to instantly get notified of all
	//settled invoices with an settle_index greater than this one.
	SettleIndex uint64 `protobuf:"varint,17,opt,name=settle_index,json=settleIndex,proto3" json:"settle_index,omitempty"`
	//
	//The amount that was accepted for this invoice, in satoshis. This will ONLY
	//be set if this invoice has been settled. We provide this field as if the
	//invoice was created with a zero value, then we need to record what amount
	//was ultimately accepted. Additionally, it's possible that the sender paid
	//MORE that was specified in the original invoice. So we'll record that here
	//as well.
	AmtPaidSat int64 `protobuf:"varint,19,opt,name=amt_paid_sat,json=amtPaidSat,proto3" json:"amt_paid_sat,omitempty"`
	//
	//The amount that was accepted for this invoice, in millisatoshis. This will
	//ONLY be set if this invoice has been settled. We provide this field as if
	//the invoice was created with a zero value, then we need to record what
	//amount was ultimately accepted. Additionally, it's possible that the sender
	//paid MORE that was specified in the original invoice. So we'll record that
	//here as well.
	AmtPaidMsat int64 `protobuf:"varint,20,opt,name=amt_paid_msat,json=amtPaidMsat,proto3" json:"amt_paid_msat,omitempty"`
	//
	//The state the invoice is in.
	State Invoice_InvoiceState `protobuf:"varint,21,opt,name=state,proto3,enum=lnrpc.Invoice_InvoiceState" json:"state,omitempty"`
	// List of HTLCs paying to this invoice [EXPERIMENTAL].
	Htlcs []*InvoiceHTLC `protobuf:"bytes,22,rep,name=htlcs,proto3" json:"htlcs,omitempty"`
	// List of features advertised on the invoice.
	Features map[uint32]*Feature `protobuf:"bytes,24,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//
	//Indicates if this invoice was a spontaneous payment that arrived via keysend
	//[EXPERIMENTAL].
	IsKeysend            bool     `protobuf:"varint,25,opt,name=is_keysend,json=isKeysend,proto3" json:"is_keysend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{112}
}

func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (m *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(m, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Invoice) GetRPreimage() []byte {
	if m != nil {
		return m.RPreimage
	}
	return nil
}

func (m *Invoice) GetRHash() []byte {
	if m != nil {
		return m.RHash
	}
	return nil
}

func (m *Invoice) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Invoice) GetValueMsat() int64 {
	if m != nil {
		return m.ValueMsat
	}
	return 0
}

// Deprecated: Do not use.
func (m *Invoice) GetSettled() bool {
	if m != nil {
		return m.Settled
	}
	return false
}

func (m *Invoice) GetCreationDate() int64 {
	if m != nil {
		return m.CreationDate
	}
	return 0
}

func (m *Invoice) GetSettleDate() int64 {
	if m != nil {
		return m.SettleDate
	}
	return 0
}

func (m *Invoice) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

func (m *Invoice) GetDescriptionHash() []byte {
	if m != nil {
		return m.DescriptionHash
	}
	return nil
}

func (m *Invoice) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *Invoice) GetFallbackAddr() string {
	if m != nil {
		return m.FallbackAddr
	}
	return ""
}

func (m *Invoice) GetCltvExpiry() uint64 {
	if m != nil {
		return m.CltvExpiry
	}
	return 0
}

func (m *Invoice) GetRouteHints() []*RouteHint {
	if m != nil {
		return m.RouteHints
	}
	return nil
}

func (m *Invoice) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *Invoice) GetAddIndex() uint64 {
	if m != nil {
		return m.AddIndex
	}
	return 0
}

func (m *Invoice) GetSettleIndex() uint64 {
	if m != nil {
		return m.SettleIndex
	}
	return 0
}

func (m *Invoice) GetAmtPaidSat() int64 {
	if m != nil {
		return m.AmtPaidSat
	}
	return 0
}

func (m *Invoice) GetAmtPaidMsat() int64 {
	if m != nil {
		return m.AmtPaidMsat
	}
	return 0
}

func (m *Invoice) GetState() Invoice_InvoiceState {
	if m != nil {
		return m.State
	}
	return Invoice_OPEN
}

func (m *Invoice) GetHtlcs() []*InvoiceHTLC {
	if m != nil {
		return m.Htlcs
	}
	return nil
}

func (m *Invoice) GetFeatures() map[uint32]*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Invoice) GetIsKeysend() bool {
	if m != nil {
		return m.IsKeysend
	}
	return false
}

// Details of an HTLC that paid to an invoice
type InvoiceHTLC struct {
	// Short channel id over which the htlc was received.
	ChanId uint64 `protobuf:"varint,1,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// Index identifying the htlc on the channel.
	HtlcIndex uint64 `protobuf:"varint,2,opt,name=htlc_index,json=htlcIndex,proto3" json:"htlc_index,omitempty"`
	// The amount of the htlc in msat.
	AmtMsat uint64 `protobuf:"varint,3,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	// Block height at which this htlc was accepted.
	AcceptHeight int32 `protobuf:"varint,4,opt,name=accept_height,json=acceptHeight,proto3" json:"accept_height,omitempty"`
	// Time at which this htlc was accepted.
	AcceptTime int64 `protobuf:"varint,5,opt,name=accept_time,json=acceptTime,proto3" json:"accept_time,omitempty"`
	// Time at which this htlc was settled or canceled.
	ResolveTime int64 `protobuf:"varint,6,opt,name=resolve_time,json=resolveTime,proto3" json:"resolve_time,omitempty"`
	// Block height at which this htlc expires.
	ExpiryHeight int32 `protobuf:"varint,7,opt,name=expiry_height,json=expiryHeight,proto3" json:"expiry_height,omitempty"`
	// Current state the htlc is in.
	State InvoiceHTLCState `protobuf:"varint,8,opt,name=state,proto3,enum=lnrpc.InvoiceHTLCState" json:"state,omitempty"`
	// Custom tlv records.
	CustomRecords map[uint64][]byte `protobuf:"bytes,9,rep,name=custom_records,json=customRecords,proto3" json:"custom_records,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The total amount of the mpp payment in msat.
	MppTotalAmtMsat      uint64   `protobuf:"varint,10,opt,name=mpp_total_amt_msat,json=mppTotalAmtMsat,proto3" json:"mpp_total_amt_msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceHTLC) Reset()         { *m = InvoiceHTLC{} }
func (m *InvoiceHTLC) String() string { return proto.CompactTextString(m) }
func (*InvoiceHTLC) ProtoMessage()    {}
func (*InvoiceHTLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{113}
}

func (m *InvoiceHTLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceHTLC.Unmarshal(m, b)
}
func (m *InvoiceHTLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceHTLC.Marshal(b, m, deterministic)
}
func (m *InvoiceHTLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceHTLC.Merge(m, src)
}
func (m *InvoiceHTLC) XXX_Size() int {
	return xxx_messageInfo_InvoiceHTLC.Size(m)
}
func (m *InvoiceHTLC) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceHTLC.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceHTLC proto.InternalMessageInfo

func (m *InvoiceHTLC) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *InvoiceHTLC) GetHtlcIndex() uint64 {
	if m != nil {
		return m.HtlcIndex
	}
	return 0
}

func (m *InvoiceHTLC) GetAmtMsat() uint64 {
	if m != nil {
		return m.AmtMsat
	}
	return 0
}

func (m *InvoiceHTLC) GetAcceptHeight() int32 {
	if m != nil {
		return m.AcceptHeight
	}
	return 0
}

func (m *InvoiceHTLC) GetAcceptTime() int64 {
	if m != nil {
		return m.AcceptTime
	}
	return 0
}

func (m *InvoiceHTLC) GetResolveTime() int64 {
	if m != nil {
		return m.ResolveTime
	}
	return 0
}

func (m *InvoiceHTLC) GetExpiryHeight() int32 {
	if m != nil {
		return m.ExpiryHeight
	}
	return 0
}

func (m *InvoiceHTLC) GetState() InvoiceHTLCState {
	if m != nil {
		return m.State
	}
	return InvoiceHTLCState_ACCEPTED
}

func (m *InvoiceHTLC) GetCustomRecords() map[uint64][]byte {
	if m != nil {
		return m.CustomRecords
	}
	return nil
}

func (m *InvoiceHTLC) GetMppTotalAmtMsat() uint64 {
	if m != nil {
		return m.MppTotalAmtMsat
	}
	return 0
}

type AddInvoiceResponse struct {
	RHash []byte `protobuf:"bytes,1,opt,name=r_hash,json=rHash,proto3" json:"r_hash,omitempty"`
	//
	//A bare-bones invoice for a payment within the Lightning Network. With the
	//details of the invoice, the sender has all the data necessary to send a
	//payment to the recipient. Represented as bech32 encoding.
	PaymentRequest string `protobuf:"bytes,2,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
	//
	//The "add" index of this invoice. Each newly created invoice will increment
	//this index making it monotonically increasing. Callers to the
	//SubscribeInvoices call can use this to instantly get notified of all added
	//invoices with an add_index greater than this one.
	AddIndex             uint64   `protobuf:"varint,16,opt,name=add_index,json=addIndex,proto3" json:"add_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddInvoiceResponse) Reset()         { *m = AddInvoiceResponse{} }
func (m *AddInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*AddInvoiceResponse) ProtoMessage()    {}
func (*AddInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{114}
}

func (m *AddInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInvoiceResponse.Unmarshal(m, b)
}
func (m *AddInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInvoiceResponse.Marshal(b, m, deterministic)
}
func (m *AddInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInvoiceResponse.Merge(m, src)
}
func (m *AddInvoiceResponse) XXX_Size() int {
	return xxx_messageInfo_AddInvoiceResponse.Size(m)
}
func (m *AddInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddInvoiceResponse proto.InternalMessageInfo

func (m *AddInvoiceResponse) GetRHash() []byte {
	if m != nil {
		return m.RHash
	}
	return nil
}

func (m *AddInvoiceResponse) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

func (m *AddInvoiceResponse) GetAddIndex() uint64 {
	if m != nil {
		return m.AddIndex
	}
	return 0
}

type PaymentHash struct {
	//
	//The payment hash of the invoice to be looked up.
	RHash                []byte   `protobuf:"bytes,2,opt,name=r_hash,json=rHash,proto3" json:"r_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentHash) Reset()         { *m = PaymentHash{} }
func (m *PaymentHash) String() string { return proto.CompactTextString(m) }
func (*PaymentHash) ProtoMessage()    {}
func (*PaymentHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{115}
}

func (m *PaymentHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentHash.Unmarshal(m, b)
}
func (m *PaymentHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentHash.Marshal(b, m, deterministic)
}
func (m *PaymentHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentHash.Merge(m, src)
}
func (m *PaymentHash) XXX_Size() int {
	return xxx_messageInfo_PaymentHash.Size(m)
}
func (m *PaymentHash) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentHash.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentHash proto.InternalMessageInfo

func (m *PaymentHash) GetRHash() []byte {
	if m != nil {
		return m.RHash
	}
	return nil
}

type ListInvoiceRequest struct {
	//
	//If set, only invoices that are not settled and not canceled will be returned
	//in the response.
	PendingOnly bool `protobuf:"varint,1,opt,name=pending_only,json=pendingOnly,proto3" json:"pending_only,omitempty"`
	//
	//The index of an invoice that will be used as either the start or end of a
	//query to determine which invoices should be returned in the response.
	IndexOffset uint64 `protobuf:"varint,4,opt,name=index_offset,json=indexOffset,proto3" json:"index_offset,omitempty"`
	// The max number of invoices to return in the response to this query.
	NumMaxInvoices uint64 `protobuf:"varint,5,opt,name=num_max_invoices,json=numMaxInvoices,proto3" json:"num_max_invoices,omitempty"`
	//
	//If set, the invoices returned will result from seeking backwards from the
	//specified index offset. This can be used to paginate backwards.
	Reversed             bool     `protobuf:"varint,6,opt,name=reversed,proto3" json:"reversed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInvoiceRequest) Reset()         { *m = ListInvoiceRequest{} }
func (m *ListInvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListInvoiceRequest) ProtoMessage()    {}
func (*ListInvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{116}
}

func (m *ListInvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInvoiceRequest.Unmarshal(m, b)
}
func (m *ListInvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInvoiceRequest.Marshal(b, m, deterministic)
}
func (m *ListInvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInvoiceRequest.Merge(m, src)
}
func (m *ListInvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListInvoiceRequest.Size(m)
}
func (m *ListInvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListInvoiceRequest proto.InternalMessageInfo

func (m *ListInvoiceRequest) GetPendingOnly() bool {
	if m != nil {
		return m.PendingOnly
	}
	return false
}

func (m *ListInvoiceRequest) GetIndexOffset() uint64 {
	if m != nil {
		return m.IndexOffset
	}
	return 0
}

func (m *ListInvoiceRequest) GetNumMaxInvoices() uint64 {
	if m != nil {
		return m.NumMaxInvoices
	}
	return 0
}

func (m *ListInvoiceRequest) GetReversed() bool {
	if m != nil {
		return m.Reversed
	}
	return false
}

type ListInvoiceResponse struct {
	//
	//A list of invoices from the time slice of the time series specified in the
	//request.
	Invoices []*Invoice `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
	//
	//The index of the last item in the set of returned invoices. This can be used
	//to seek further, pagination style.
	LastIndexOffset uint64 `protobuf:"varint,2,opt,name=last_index_offset,json=lastIndexOffset,proto3" json:"last_index_offset,omitempty"`
	//
	//The index of the last item in the set of returned invoices. This can be used
	//to seek backwards, pagination style.
	FirstIndexOffset     uint64   `protobuf:"varint,3,opt,name=first_index_offset,json=firstIndexOffset,proto3" json:"first_index_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInvoiceResponse) Reset()         { *m = ListInvoiceResponse{} }
func (m *ListInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*ListInvoiceResponse) ProtoMessage()    {}
func (*ListInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{117}
}

func (m *ListInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInvoiceResponse.Unmarshal(m, b)
}
func (m *ListInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInvoiceResponse.Marshal(b, m, deterministic)
}
func (m *ListInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInvoiceResponse.Merge(m, src)
}
func (m *ListInvoiceResponse) XXX_Size() int {
	return xxx_messageInfo_ListInvoiceResponse.Size(m)
}
func (m *ListInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListInvoiceResponse proto.InternalMessageInfo

func (m *ListInvoiceResponse) GetInvoices() []*Invoice {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func (m *ListInvoiceResponse) GetLastIndexOffset() uint64 {
	if m != nil {
		return m.LastIndexOffset
	}
	return 0
}

func (m *ListInvoiceResponse) GetFirstIndexOffset() uint64 {
	if m != nil {
		return m.FirstIndexOffset
	}
	return 0
}

type InvoiceSubscription struct {
	//
	//If specified (non-zero), then we'll first start by sending out
	//notifications for all added indexes with an add_index greater than this
	//value. This allows callers to catch up on any events they missed while they
	//weren't connected to the streaming RPC.
	AddIndex uint64 `protobuf:"varint,1,opt,name=add_index,json=addIndex,proto3" json:"add_index,omitempty"`
	//
	//If specified (non-zero), then we'll first start by sending out
	//notifications for all settled indexes with an settle_index greater than
	//this value. This allows callers to catch up on any events they missed while
	//they weren't connected to the streaming RPC.
	SettleIndex          uint64   `protobuf:"varint,2,opt,name=settle_index,json=settleIndex,proto3" json:"settle_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceSubscription) Reset()         { *m = InvoiceSubscription{} }
func (m *InvoiceSubscription) String() string { return proto.CompactTextString(m) }
func (*InvoiceSubscription) ProtoMessage()    {}
func (*InvoiceSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{118}
}

func (m *InvoiceSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceSubscription.Unmarshal(m, b)
}
func (m *InvoiceSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceSubscription.Marshal(b, m, deterministic)
}
func (m *InvoiceSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceSubscription.Merge(m, src)
}
func (m *InvoiceSubscription) XXX_Size() int {
	return xxx_messageInfo_InvoiceSubscription.Size(m)
}
func (m *InvoiceSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceSubscription proto.InternalMessageInfo

func (m *InvoiceSubscription) GetAddIndex() uint64 {
	if m != nil {
		return m.AddIndex
	}
	return 0
}

func (m *InvoiceSubscription) GetSettleIndex() uint64 {
	if m != nil {
		return m.SettleIndex
	}
	return 0
}

type Payment struct {
	// The payment hash
	PaymentHash string `protobuf:"bytes,1,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	// Deprecated, use value_sat or value_msat.
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"` // Deprecated: Do not use.
	// Deprecated, use creation_time_ns
	CreationDate int64 `protobuf:"varint,3,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"` // Deprecated: Do not use.
	// Deprecated, use fee_sat or fee_msat.
	Fee int64 `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"` // Deprecated: Do not use.
	// The payment preimage
	PaymentPreimage []byte `protobuf:"bytes,6,opt,name=payment_preimage,json=paymentPreimage,proto3" json:"payment_preimage,omitempty"`
	// The value of the payment in satoshis
	ValueSat int64 `protobuf:"varint,7,opt,name=value_sat,json=valueSat,proto3" json:"value_sat,omitempty"`
	// The value of the payment in milli-satoshis
	ValueMsat int64 `protobuf:"varint,8,opt,name=value_msat,json=valueMsat,proto3" json:"value_msat,omitempty"`
	// The optional payment request being fulfilled.
	PaymentRequest string `protobuf:"bytes,9,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
	// The status of the payment.
	Status Payment_PaymentStatus `protobuf:"varint,10,opt,name=status,proto3,enum=lnrpc.Payment_PaymentStatus" json:"status,omitempty"`
	//  The fee paid for this payment in satoshis
	FeeSat int64 `protobuf:"varint,11,opt,name=fee_sat,json=feeSat,proto3" json:"fee_sat,omitempty"`
	//  The fee paid for this payment in milli-satoshis
	FeeMsat int64 `protobuf:"varint,12,opt,name=fee_msat,json=feeMsat,proto3" json:"fee_msat,omitempty"`
	// The time in UNIX nanoseconds at which the payment was created.
	CreationTimeNs int64 `protobuf:"varint,13,opt,name=creation_time_ns,json=creationTimeNs,proto3" json:"creation_time_ns,omitempty"`
	// The HTLCs made in attempt to settle the payment.
	Htlcs []*HTLCAttempt `protobuf:"bytes,14,rep,name=htlcs,proto3" json:"htlcs,omitempty"`
	//
	//The creation index of this payment. Each payment can be uniquely identified
	//by this index, which may not strictly increment by 1 for payments made in
	//older versions of lnd.
	PaymentIndex         uint64               `protobuf:"varint,15,opt,name=payment_index,json=paymentIndex,proto3" json:"payment_index,omitempty"`
	FailureReason        PaymentFailureReason `protobuf:"varint,16,opt,name=failure_reason,json=failureReason,proto3,enum=lnrpc.PaymentFailureReason" json:"failure_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{119}
}

func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (m *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(m, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetPaymentHash() string {
	if m != nil {
		return m.PaymentHash
	}
	return ""
}

// Deprecated: Do not use.
func (m *Payment) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Deprecated: Do not use.
func (m *Payment) GetCreationDate() int64 {
	if m != nil {
		return m.CreationDate
	}
	return 0
}

// Deprecated: Do not use.
func (m *Payment) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Payment) GetPaymentPreimage() []byte {
	if m != nil {
		return m.PaymentPreimage
	}
	return nil
}

func (m *Payment) GetValueSat() int64 {
	if m != nil {
		return m.ValueSat
	}
	return 0
}

func (m *Payment) GetValueMsat() int64 {
	if m != nil {
		return m.ValueMsat
	}
	return 0
}

func (m *Payment) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

func (m *Payment) GetStatus() Payment_PaymentStatus {
	if m != nil {
		return m.Status
	}
	return Payment_UNKNOWN
}

func (m *Payment) GetFeeSat() int64 {
	if m != nil {
		return m.FeeSat
	}
	return 0
}

func (m *Payment) GetFeeMsat() int64 {
	if m != nil {
		return m.FeeMsat
	}
	return 0
}

func (m *Payment) GetCreationTimeNs() int64 {
	if m != nil {
		return m.CreationTimeNs
	}
	return 0
}

func (m *Payment) GetHtlcs() []*HTLCAttempt {
	if m != nil {
		return m.Htlcs
	}
	return nil
}

func (m *Payment) GetPaymentIndex() uint64 {
	if m != nil {
		return m.PaymentIndex
	}
	return 0
}

func (m *Payment) GetFailureReason() PaymentFailureReason {
	if m != nil {
		return m.FailureReason
	}
	return PaymentFailureReason_FAILURE_REASON_NONE
}

type HTLCAttempt struct {
	// The status of the HTLC.
	Status HTLCAttempt_HTLCStatus `protobuf:"varint,1,opt,name=status,proto3,enum=lnrpc.HTLCAttempt_HTLCStatus" json:"status,omitempty"`
	// The route taken by this HTLC.
	Route *Route `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	// The time in UNIX nanoseconds at which this HTLC was sent.
	AttemptTimeNs int64 `protobuf:"varint,3,opt,name=attempt_time_ns,json=attemptTimeNs,proto3" json:"attempt_time_ns,omitempty"`
	//
	//The time in UNIX nanoseconds at which this HTLC was settled or failed.
	//This value will not be set if the HTLC is still IN_FLIGHT.
	ResolveTimeNs int64 `protobuf:"varint,4,opt,name=resolve_time_ns,json=resolveTimeNs,proto3" json:"resolve_time_ns,omitempty"`
	// Detailed htlc failure info.
	Failure *Failure `protobuf:"bytes,5,opt,name=failure,proto3" json:"failure,omitempty"`
	// The preimage that was used to settle the HTLC.
	Preimage             []byte   `protobuf:"bytes,6,opt,name=preimage,proto3" json:"preimage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTLCAttempt) Reset()         { *m = HTLCAttempt{} }
func (m *HTLCAttempt) String() string { return proto.CompactTextString(m) }
func (*HTLCAttempt) ProtoMessage()    {}
func (*HTLCAttempt) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{120}
}

func (m *HTLCAttempt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTLCAttempt.Unmarshal(m, b)
}
func (m *HTLCAttempt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTLCAttempt.Marshal(b, m, deterministic)
}
func (m *HTLCAttempt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTLCAttempt.Merge(m, src)
}
func (m *HTLCAttempt) XXX_Size() int {
	return xxx_messageInfo_HTLCAttempt.Size(m)
}
func (m *HTLCAttempt) XXX_DiscardUnknown() {
	xxx_messageInfo_HTLCAttempt.DiscardUnknown(m)
}

var xxx_messageInfo_HTLCAttempt proto.InternalMessageInfo

func (m *HTLCAttempt) GetStatus() HTLCAttempt_HTLCStatus {
	if m != nil {
		return m.Status
	}
	return HTLCAttempt_IN_FLIGHT
}

func (m *HTLCAttempt) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *HTLCAttempt) GetAttemptTimeNs() int64 {
	if m != nil {
		return m.AttemptTimeNs
	}
	return 0
}

func (m *HTLCAttempt) GetResolveTimeNs() int64 {
	if m != nil {
		return m.ResolveTimeNs
	}
	return 0
}

func (m *HTLCAttempt) GetFailure() *Failure {
	if m != nil {
		return m.Failure
	}
	return nil
}

func (m *HTLCAttempt) GetPreimage() []byte {
	if m != nil {
		return m.Preimage
	}
	return nil
}

type ListPaymentsRequest struct {
	//
	//If true, then return payments that have not yet fully completed. This means
	//that pending payments, as well as failed payments will show up if this
	//field is set to true. This flag doesn't change the meaning of the indices,
	//which are tied to individual payments.
	IncludeIncomplete bool `protobuf:"varint,1,opt,name=include_incomplete,json=includeIncomplete,proto3" json:"include_incomplete,omitempty"`
	//
	//The index of a payment that will be used as either the start or end of a
	//query to determine which payments should be returned in the response. The
	//index_offset is exclusive. In the case of a zero index_offset, the query
	//will start with the oldest payment when paginating forwards, or will end
	//with the most recent payment when paginating backwards.
	IndexOffset uint64 `protobuf:"varint,2,opt,name=index_offset,json=indexOffset,proto3" json:"index_offset,omitempty"`
	// The maximal number of payments returned in the response to this query.
	MaxPayments uint64 `protobuf:"varint,3,opt,name=max_payments,json=maxPayments,proto3" json:"max_payments,omitempty"`
	//
	//If set, the payments returned will result from seeking backwards from the
	//specified index offset. This can be used to paginate backwards. The order
	//of the returned payments is always oldest first (ascending index order).
	Reversed             bool     `protobuf:"varint,4,opt,name=reversed,proto3" json:"reversed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPaymentsRequest) Reset()         { *m = ListPaymentsRequest{} }
func (m *ListPaymentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPaymentsRequest) ProtoMessage()    {}
func (*ListPaymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{121}
}

func (m *ListPaymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPaymentsRequest.Unmarshal(m, b)
}
func (m *ListPaymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPaymentsRequest.Marshal(b, m, deterministic)
}
func (m *ListPaymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPaymentsRequest.Merge(m, src)
}
func (m *ListPaymentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPaymentsRequest.Size(m)
}
func (m *ListPaymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPaymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPaymentsRequest proto.InternalMessageInfo

func (m *ListPaymentsRequest) GetIncludeIncomplete() bool {
	if m != nil {
		return m.IncludeIncomplete
	}
	return false
}

func (m *ListPaymentsRequest) GetIndexOffset() uint64 {
	if m != nil {
		return m.IndexOffset
	}
	return 0
}

func (m *ListPaymentsRequest) GetMaxPayments() uint64 {
	if m != nil {
		return m.MaxPayments
	}
	return 0
}

func (m *ListPaymentsRequest) GetReversed() bool {
	if m != nil {
		return m.Reversed
	}
	return false
}

type ListPaymentsResponse struct {
	// The list of payments
	Payments []*Payment `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
	//
	//The index of the first item in the set of returned payments. This can be
	//used as the index_offset to continue seeking backwards in the next request.
	FirstIndexOffset uint64 `protobuf:"varint,2,opt,name=first_index_offset,json=firstIndexOffset,proto3" json:"first_index_offset,omitempty"`
	//
	//The index of the last item in the set of returned payments. This can be used
	//as the index_offset to continue seeking forwards in the next request.
	LastIndexOffset      uint64   `protobuf:"varint,3,opt,name=last_index_offset,json=lastIndexOffset,proto3" json:"last_index_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPaymentsResponse) Reset()         { *m = ListPaymentsResponse{} }
func (m *ListPaymentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPaymentsResponse) ProtoMessage()    {}
func (*ListPaymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{122}
}

func (m *ListPaymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPaymentsResponse.Unmarshal(m, b)
}
func (m *ListPaymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPaymentsResponse.Marshal(b, m, deterministic)
}
func (m *ListPaymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPaymentsResponse.Merge(m, src)
}
func (m *ListPaymentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPaymentsResponse.Size(m)
}
func (m *ListPaymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPaymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPaymentsResponse proto.InternalMessageInfo

func (m *ListPaymentsResponse) GetPayments() []*Payment {
	if m != nil {
		return m.Payments
	}
	return nil
}

func (m *ListPaymentsResponse) GetFirstIndexOffset() uint64 {
	if m != nil {
		return m.FirstIndexOffset
	}
	return 0
}

func (m *ListPaymentsResponse) GetLastIndexOffset() uint64 {
	if m != nil {
		return m.LastIndexOffset
	}
	return 0
}

type DeleteAllPaymentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllPaymentsRequest) Reset()         { *m = DeleteAllPaymentsRequest{} }
func (m *DeleteAllPaymentsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAllPaymentsRequest) ProtoMessage()    {}
func (*DeleteAllPaymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{123}
}

func (m *DeleteAllPaymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAllPaymentsRequest.Unmarshal(m, b)
}
func (m *DeleteAllPaymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAllPaymentsRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAllPaymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllPaymentsRequest.Merge(m, src)
}
func (m *DeleteAllPaymentsRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAllPaymentsRequest.Size(m)
}
func (m *DeleteAllPaymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllPaymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllPaymentsRequest proto.InternalMessageInfo

type DeleteAllPaymentsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllPaymentsResponse) Reset()         { *m = DeleteAllPaymentsResponse{} }
func (m *DeleteAllPaymentsResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAllPaymentsResponse) ProtoMessage()    {}
func (*DeleteAllPaymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{124}
}

func (m *DeleteAllPaymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAllPaymentsResponse.Unmarshal(m, b)
}
func (m *DeleteAllPaymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAllPaymentsResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAllPaymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllPaymentsResponse.Merge(m, src)
}
func (m *DeleteAllPaymentsResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAllPaymentsResponse.Size(m)
}
func (m *DeleteAllPaymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllPaymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllPaymentsResponse proto.InternalMessageInfo

type AbandonChannelRequest struct {
	ChannelPoint           *ChannelPoint `protobuf:"bytes,1,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	PendingFundingShimOnly bool          `protobuf:"varint,2,opt,name=pending_funding_shim_only,json=pendingFundingShimOnly,proto3" json:"pending_funding_shim_only,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}      `json:"-"`
	XXX_unrecognized       []byte        `json:"-"`
	XXX_sizecache          int32         `json:"-"`
}

func (m *AbandonChannelRequest) Reset()         { *m = AbandonChannelRequest{} }
func (m *AbandonChannelRequest) String() string { return proto.CompactTextString(m) }
func (*AbandonChannelRequest) ProtoMessage()    {}
func (*AbandonChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{125}
}

func (m *AbandonChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbandonChannelRequest.Unmarshal(m, b)
}
func (m *AbandonChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbandonChannelRequest.Marshal(b, m, deterministic)
}
func (m *AbandonChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbandonChannelRequest.Merge(m, src)
}
func (m *AbandonChannelRequest) XXX_Size() int {
	return xxx_messageInfo_AbandonChannelRequest.Size(m)
}
func (m *AbandonChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AbandonChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AbandonChannelRequest proto.InternalMessageInfo

func (m *AbandonChannelRequest) GetChannelPoint() *ChannelPoint {
	if m != nil {
		return m.ChannelPoint
	}
	return nil
}

func (m *AbandonChannelRequest) GetPendingFundingShimOnly() bool {
	if m != nil {
		return m.PendingFundingShimOnly
	}
	return false
}

type AbandonChannelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AbandonChannelResponse) Reset()         { *m = AbandonChannelResponse{} }
func (m *AbandonChannelResponse) String() string { return proto.CompactTextString(m) }
func (*AbandonChannelResponse) ProtoMessage()    {}
func (*AbandonChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{126}
}

func (m *AbandonChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbandonChannelResponse.Unmarshal(m, b)
}
func (m *AbandonChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbandonChannelResponse.Marshal(b, m, deterministic)
}
func (m *AbandonChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbandonChannelResponse.Merge(m, src)
}
func (m *AbandonChannelResponse) XXX_Size() int {
	return xxx_messageInfo_AbandonChannelResponse.Size(m)
}
func (m *AbandonChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AbandonChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AbandonChannelResponse proto.InternalMessageInfo

type DebugLevelRequest struct {
	Show                 bool     `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	LevelSpec            string   `protobuf:"bytes,2,opt,name=level_spec,json=levelSpec,proto3" json:"level_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLevelRequest) Reset()         { *m = DebugLevelRequest{} }
func (m *DebugLevelRequest) String() string { return proto.CompactTextString(m) }
func (*DebugLevelRequest) ProtoMessage()    {}
func (*DebugLevelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{127}
}

func (m *DebugLevelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLevelRequest.Unmarshal(m, b)
}
func (m *DebugLevelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLevelRequest.Marshal(b, m, deterministic)
}
func (m *DebugLevelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLevelRequest.Merge(m, src)
}
func (m *DebugLevelRequest) XXX_Size() int {
	return xxx_messageInfo_DebugLevelRequest.Size(m)
}
func (m *DebugLevelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLevelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLevelRequest proto.InternalMessageInfo

func (m *DebugLevelRequest) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *DebugLevelRequest) GetLevelSpec() string {
	if m != nil {
		return m.LevelSpec
	}
	return ""
}

type DebugLevelResponse struct {
	SubSystems           string   `protobuf:"bytes,1,opt,name=sub_systems,json=subSystems,proto3" json:"sub_systems,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLevelResponse) Reset()         { *m = DebugLevelResponse{} }
func (m *DebugLevelResponse) String() string { return proto.CompactTextString(m) }
func (*DebugLevelResponse) ProtoMessage()    {}
func (*DebugLevelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{128}
}

func (m *DebugLevelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLevelResponse.Unmarshal(m, b)
}
func (m *DebugLevelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLevelResponse.Marshal(b, m, deterministic)
}
func (m *DebugLevelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLevelResponse.Merge(m, src)
}
func (m *DebugLevelResponse) XXX_Size() int {
	return xxx_messageInfo_DebugLevelResponse.Size(m)
}
func (m *DebugLevelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLevelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLevelResponse proto.InternalMessageInfo

func (m *DebugLevelResponse) GetSubSystems() string {
	if m != nil {
		return m.SubSystems
	}
	return ""
}

type PayReqString struct {
	// The payment request string to be decoded
	PayReq               string   `protobuf:"bytes,1,opt,name=pay_req,json=payReq,proto3" json:"pay_req,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayReqString) Reset()         { *m = PayReqString{} }
func (m *PayReqString) String() string { return proto.CompactTextString(m) }
func (*PayReqString) ProtoMessage()    {}
func (*PayReqString) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{129}
}

func (m *PayReqString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayReqString.Unmarshal(m, b)
}
func (m *PayReqString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayReqString.Marshal(b, m, deterministic)
}
func (m *PayReqString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayReqString.Merge(m, src)
}
func (m *PayReqString) XXX_Size() int {
	return xxx_messageInfo_PayReqString.Size(m)
}
func (m *PayReqString) XXX_DiscardUnknown() {
	xxx_messageInfo_PayReqString.DiscardUnknown(m)
}

var xxx_messageInfo_PayReqString proto.InternalMessageInfo

func (m *PayReqString) GetPayReq() string {
	if m != nil {
		return m.PayReq
	}
	return ""
}

type PayReq struct {
	Destination          []byte              `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	PaymentHash          []byte              `protobuf:"bytes,2,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	NumSatoshis          int64               `protobuf:"varint,3,opt,name=num_satoshis,json=numSatoshis,proto3" json:"num_satoshis,omitempty"`
	Timestamp            int64               `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Expiry               int64               `protobuf:"varint,5,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Description          string              `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	DescriptionHash      []byte              `protobuf:"bytes,7,opt,name=description_hash,json=descriptionHash,proto3" json:"description_hash,omitempty"`
	FallbackAddr         string              `protobuf:"bytes,8,opt,name=fallback_addr,json=fallbackAddr,proto3" json:"fallback_addr,omitempty"`
	CltvExpiry           int64               `protobuf:"varint,9,opt,name=cltv_expiry,json=cltvExpiry,proto3" json:"cltv_expiry,omitempty"`
	RouteHints           []*RouteHint        `protobuf:"bytes,10,rep,name=route_hints,json=routeHints,proto3" json:"route_hints,omitempty"`
	PaymentAddr          []byte              `protobuf:"bytes,11,opt,name=payment_addr,json=paymentAddr,proto3" json:"payment_addr,omitempty"`
	NumMsat              int64               `protobuf:"varint,12,opt,name=num_msat,json=numMsat,proto3" json:"num_msat,omitempty"`
	Features             map[uint32]*Feature `protobuf:"bytes,13,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PayReq) Reset()         { *m = PayReq{} }
func (m *PayReq) String() string { return proto.CompactTextString(m) }
func (*PayReq) ProtoMessage()    {}
func (*PayReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{130}
}

func (m *PayReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayReq.Unmarshal(m, b)
}
func (m *PayReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayReq.Marshal(b, m, deterministic)
}
func (m *PayReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayReq.Merge(m, src)
}
func (m *PayReq) XXX_Size() int {
	return xxx_messageInfo_PayReq.Size(m)
}
func (m *PayReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PayReq.DiscardUnknown(m)
}

var xxx_messageInfo_PayReq proto.InternalMessageInfo

func (m *PayReq) GetDestination() []byte {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *PayReq) GetPaymentHash() []byte {
	if m != nil {
		return m.PaymentHash
	}
	return nil
}

func (m *PayReq) GetNumSatoshis() int64 {
	if m != nil {
		return m.NumSatoshis
	}
	return 0
}

func (m *PayReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PayReq) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *PayReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PayReq) GetDescriptionHash() []byte {
	if m != nil {
		return m.DescriptionHash
	}
	return nil
}

func (m *PayReq) GetFallbackAddr() string {
	if m != nil {
		return m.FallbackAddr
	}
	return ""
}

func (m *PayReq) GetCltvExpiry() int64 {
	if m != nil {
		return m.CltvExpiry
	}
	return 0
}

func (m *PayReq) GetRouteHints() []*RouteHint {
	if m != nil {
		return m.RouteHints
	}
	return nil
}

func (m *PayReq) GetPaymentAddr() []byte {
	if m != nil {
		return m.PaymentAddr
	}
	return nil
}

func (m *PayReq) GetNumMsat() int64 {
	if m != nil {
		return m.NumMsat
	}
	return 0
}

func (m *PayReq) GetFeatures() map[uint32]*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

type Feature struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsRequired           bool     `protobuf:"varint,3,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	IsKnown              bool     `protobuf:"varint,4,opt,name=is_known,json=isKnown,proto3" json:"is_known,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{131}
}

func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (m *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(m, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Feature) GetIsRequired() bool {
	if m != nil {
		return m.IsRequired
	}
	return false
}

func (m *Feature) GetIsKnown() bool {
	if m != nil {
		return m.IsKnown
	}
	return false
}

type FeeReportRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeeReportRequest) Reset()         { *m = FeeReportRequest{} }
func (m *FeeReportRequest) String() string { return proto.CompactTextString(m) }
func (*FeeReportRequest) ProtoMessage()    {}
func (*FeeReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{132}
}

func (m *FeeReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeReportRequest.Unmarshal(m, b)
}
func (m *FeeReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeReportRequest.Marshal(b, m, deterministic)
}
func (m *FeeReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeReportRequest.Merge(m, src)
}
func (m *FeeReportRequest) XXX_Size() int {
	return xxx_messageInfo_FeeReportRequest.Size(m)
}
func (m *FeeReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeeReportRequest proto.InternalMessageInfo

type ChannelFeeReport struct {
	// The short channel id that this fee report belongs to.
	ChanId uint64 `protobuf:"varint,5,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// The channel that this fee report belongs to.
	ChannelPoint string `protobuf:"bytes,1,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	// The base fee charged regardless of the number of milli-satoshis sent.
	BaseFeeMsat int64 `protobuf:"varint,2,opt,name=base_fee_msat,json=baseFeeMsat,proto3" json:"base_fee_msat,omitempty"`
	// The amount charged per milli-satoshis transferred expressed in
	// millionths of a satoshi.
	FeePerMil int64 `protobuf:"varint,3,opt,name=fee_per_mil,json=feePerMil,proto3" json:"fee_per_mil,omitempty"`
	// The effective fee rate in milli-satoshis. Computed by dividing the
	// fee_per_mil value by 1 million.
	FeeRate              float64  `protobuf:"fixed64,4,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelFeeReport) Reset()         { *m = ChannelFeeReport{} }
func (m *ChannelFeeReport) String() string { return proto.CompactTextString(m) }
func (*ChannelFeeReport) ProtoMessage()    {}
func (*ChannelFeeReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{133}
}

func (m *ChannelFeeReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelFeeReport.Unmarshal(m, b)
}
func (m *ChannelFeeReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelFeeReport.Marshal(b, m, deterministic)
}
func (m *ChannelFeeReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelFeeReport.Merge(m, src)
}
func (m *ChannelFeeReport) XXX_Size() int {
	return xxx_messageInfo_ChannelFeeReport.Size(m)
}
func (m *ChannelFeeReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelFeeReport.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelFeeReport proto.InternalMessageInfo

func (m *ChannelFeeReport) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *ChannelFeeReport) GetChannelPoint() string {
	if m != nil {
		return m.ChannelPoint
	}
	return ""
}

func (m *ChannelFeeReport) GetBaseFeeMsat() int64 {
	if m != nil {
		return m.BaseFeeMsat
	}
	return 0
}

func (m *ChannelFeeReport) GetFeePerMil() int64 {
	if m != nil {
		return m.FeePerMil
	}
	return 0
}

func (m *ChannelFeeReport) GetFeeRate() float64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

type FeeReportResponse struct {
	// An array of channel fee reports which describes the current fee schedule
	// for each channel.
	ChannelFees []*ChannelFeeReport `protobuf:"bytes,1,rep,name=channel_fees,json=channelFees,proto3" json:"channel_fees,omitempty"`
	// The total amount of fee revenue (in satoshis) the switch has collected
	// over the past 24 hrs.
	DayFeeSum uint64 `protobuf:"varint,2,opt,name=day_fee_sum,json=dayFeeSum,proto3" json:"day_fee_sum,omitempty"`
	// The total amount of fee revenue (in satoshis) the switch has collected
	// over the past 1 week.
	WeekFeeSum uint64 `protobuf:"varint,3,opt,name=week_fee_sum,json=weekFeeSum,proto3" json:"week_fee_sum,omitempty"`
	// The total amount of fee revenue (in satoshis) the switch has collected
	// over the past 1 month.
	MonthFeeSum          uint64   `protobuf:"varint,4,opt,name=month_fee_sum,json=monthFeeSum,proto3" json:"month_fee_sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeeReportResponse) Reset()         { *m = FeeReportResponse{} }
func (m *FeeReportResponse) String() string { return proto.CompactTextString(m) }
func (*FeeReportResponse) ProtoMessage()    {}
func (*FeeReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{134}
}

func (m *FeeReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeReportResponse.Unmarshal(m, b)
}
func (m *FeeReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeReportResponse.Marshal(b, m, deterministic)
}
func (m *FeeReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeReportResponse.Merge(m, src)
}
func (m *FeeReportResponse) XXX_Size() int {
	return xxx_messageInfo_FeeReportResponse.Size(m)
}
func (m *FeeReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeeReportResponse proto.InternalMessageInfo

func (m *FeeReportResponse) GetChannelFees() []*ChannelFeeReport {
	if m != nil {
		return m.ChannelFees
	}
	return nil
}

func (m *FeeReportResponse) GetDayFeeSum() uint64 {
	if m != nil {
		return m.DayFeeSum
	}
	return 0
}

func (m *FeeReportResponse) GetWeekFeeSum() uint64 {
	if m != nil {
		return m.WeekFeeSum
	}
	return 0
}

func (m *FeeReportResponse) GetMonthFeeSum() uint64 {
	if m != nil {
		return m.MonthFeeSum
	}
	return 0
}

type PolicyUpdateRequest struct {
	// Types that are valid to be assigned to Scope:
	//	*PolicyUpdateRequest_Global
	//	*PolicyUpdateRequest_ChanPoint
	Scope isPolicyUpdateRequest_Scope `protobuf_oneof:"scope"`
	// The base fee charged regardless of the number of milli-satoshis sent.
	BaseFeeMsat int64 `protobuf:"varint,3,opt,name=base_fee_msat,json=baseFeeMsat,proto3" json:"base_fee_msat,omitempty"`
	// The effective fee rate in milli-satoshis. The precision of this value
	// goes up to 6 decimal places, so 1e-6.
	FeeRate float64 `protobuf:"fixed64,4,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	// The required timelock delta for HTLCs forwarded over the channel.
	TimeLockDelta uint32 `protobuf:"varint,5,opt,name=time_lock_delta,json=timeLockDelta,proto3" json:"time_lock_delta,omitempty"`
	// If set, the maximum HTLC size in milli-satoshis. If unset, the maximum
	// HTLC will be unchanged.
	MaxHtlcMsat uint64 `protobuf:"varint,6,opt,name=max_htlc_msat,json=maxHtlcMsat,proto3" json:"max_htlc_msat,omitempty"`
	// The minimum HTLC size in milli-satoshis. Only applied if
	// min_htlc_msat_specified is true.
	MinHtlcMsat uint64 `protobuf:"varint,7,opt,name=min_htlc_msat,json=minHtlcMsat,proto3" json:"min_htlc_msat,omitempty"`
	// If true, min_htlc_msat is applied.
	MinHtlcMsatSpecified bool     `protobuf:"varint,8,opt,name=min_htlc_msat_specified,json=minHtlcMsatSpecified,proto3" json:"min_htlc_msat_specified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolicyUpdateRequest) Reset()         { *m = PolicyUpdateRequest{} }
func (m *PolicyUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*PolicyUpdateRequest) ProtoMessage()    {}
func (*PolicyUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{135}
}

func (m *PolicyUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyUpdateRequest.Unmarshal(m, b)
}
func (m *PolicyUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyUpdateRequest.Marshal(b, m, deterministic)
}
func (m *PolicyUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyUpdateRequest.Merge(m, src)
}
func (m *PolicyUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_PolicyUpdateRequest.Size(m)
}
func (m *PolicyUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyUpdateRequest proto.InternalMessageInfo

type isPolicyUpdateRequest_Scope interface {
	isPolicyUpdateRequest_Scope()
}

type PolicyUpdateRequest_Global struct {
	Global bool `protobuf:"varint,1,opt,name=global,proto3,oneof"`
}

type PolicyUpdateRequest_ChanPoint struct {
	ChanPoint *ChannelPoint `protobuf:"bytes,2,opt,name=chan_point,json=chanPoint,proto3,oneof"`
}

func (*PolicyUpdateRequest_Global) isPolicyUpdateRequest_Scope() {}

func (*PolicyUpdateRequest_ChanPoint) isPolicyUpdateRequest_Scope() {}

func (m *PolicyUpdateRequest) GetScope() isPolicyUpdateRequest_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *PolicyUpdateRequest) GetGlobal() bool {
	if x, ok := m.GetScope().(*PolicyUpdateRequest_Global); ok {
		return x.Global
	}
	return false
}

func (m *PolicyUpdateRequest) GetChanPoint() *ChannelPoint {
	if x, ok := m.GetScope().(*PolicyUpdateRequest_ChanPoint); ok {
		return x.ChanPoint
	}
	return nil
}

func (m *PolicyUpdateRequest) GetBaseFeeMsat() int64 {
	if m != nil {
		return m.BaseFeeMsat
	}
	return 0
}

func (m *PolicyUpdateRequest) GetFeeRate() float64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

func (m *PolicyUpdateRequest) GetTimeLockDelta() uint32 {
	if m != nil {
		return m.TimeLockDelta
	}
	return 0
}

func (m *PolicyUpdateRequest) GetMaxHtlcMsat() uint64 {
	if m != nil {
		return m.MaxHtlcMsat
	}
	return 0
}

func (m *PolicyUpdateRequest) GetMinHtlcMsat() uint64 {
	if m != nil {
		return m.MinHtlcMsat
	}
	return 0
}

func (m *PolicyUpdateRequest) GetMinHtlcMsatSpecified() bool {
	if m != nil {
		return m.MinHtlcMsatSpecified
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PolicyUpdateRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PolicyUpdateRequest_Global)(nil),
		(*PolicyUpdateRequest_ChanPoint)(nil),
	}
}

type PolicyUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolicyUpdateResponse) Reset()         { *m = PolicyUpdateResponse{} }
func (m *PolicyUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*PolicyUpdateResponse) ProtoMessage()    {}
func (*PolicyUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{136}
}

func (m *PolicyUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyUpdateResponse.Unmarshal(m, b)
}
func (m *PolicyUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyUpdateResponse.Marshal(b, m, deterministic)
}
func (m *PolicyUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyUpdateResponse.Merge(m, src)
}
func (m *PolicyUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_PolicyUpdateResponse.Size(m)
}
func (m *PolicyUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyUpdateResponse proto.InternalMessageInfo

type ForwardingHistoryRequest struct {
	// Start time is the starting point of the forwarding history request. All
	// records beyond this point will be included, respecting the end time, and
	// the index offset.
	StartTime uint64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// End time is the end point of the forwarding history request. The
	// response will carry at most 50k records between the start time and the
	// end time. The index offset can be used to implement pagination.
	EndTime uint64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Index offset is the offset in the time series to start at. As each
	// response can only contain 50k records, callers can use this to skip
	// around within a packed time series.
	IndexOffset uint32 `protobuf:"varint,3,opt,name=index_offset,json=indexOffset,proto3" json:"index_offset,omitempty"`
	// The max number of events to return in the response to this query.
	NumMaxEvents         uint32   `protobuf:"varint,4,opt,name=num_max_events,json=numMaxEvents,proto3" json:"num_max_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardingHistoryRequest) Reset()         { *m = ForwardingHistoryRequest{} }
func (m *ForwardingHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*ForwardingHistoryRequest) ProtoMessage()    {}
func (*ForwardingHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{137}
}

func (m *ForwardingHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardingHistoryRequest.Unmarshal(m, b)
}
func (m *ForwardingHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardingHistoryRequest.Marshal(b, m, deterministic)
}
func (m *ForwardingHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardingHistoryRequest.Merge(m, src)
}
func (m *ForwardingHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_ForwardingHistoryRequest.Size(m)
}
func (m *ForwardingHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardingHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardingHistoryRequest proto.InternalMessageInfo

func (m *ForwardingHistoryRequest) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ForwardingHistoryRequest) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ForwardingHistoryRequest) GetIndexOffset() uint32 {
	if m != nil {
		return m.IndexOffset
	}
	return 0
}

func (m *ForwardingHistoryRequest) GetNumMaxEvents() uint32 {
	if m != nil {
		return m.NumMaxEvents
	}
	return 0
}

type ForwardingEvent struct {
	// Timestamp is the time (unix epoch offset) that this circuit was
	// completed.
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The incoming channel ID that carried the HTLC that created the circuit.
	ChanIdIn uint64 `protobuf:"varint,2,opt,name=chan_id_in,json=chanIdIn,proto3" json:"chan_id_in,omitempty"`
	// The outgoing channel ID that carried the preimage that completed the
	// circuit.
	ChanIdOut uint64 `protobuf:"varint,4,opt,name=chan_id_out,json=chanIdOut,proto3" json:"chan_id_out,omitempty"`
	// The total amount (in satoshis) of the incoming HTLC that created half
	// the circuit.
	AmtIn uint64 `protobuf:"varint,5,opt,name=amt_in,json=amtIn,proto3" json:"amt_in,omitempty"`
	// The total amount (in satoshis) of the outgoing HTLC that created the
	// second half of the circuit.
	AmtOut uint64 `protobuf:"varint,6,opt,name=amt_out,json=amtOut,proto3" json:"amt_out,omitempty"`
	// The total fee (in satoshis) that this payment circuit carried.
	Fee uint64 `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	// The total fee (in milli-satoshis) that this payment circuit carried.
	FeeMsat uint64 `protobuf:"varint,8,opt,name=fee_msat,json=feeMsat,proto3" json:"fee_msat,omitempty"`
	// The total amount (in milli-satoshis) of the incoming HTLC that created
	// half the circuit.
	AmtInMsat uint64 `protobuf:"varint,9,opt,name=amt_in_msat,json=amtInMsat,proto3" json:"amt_in_msat,omitempty"`
	// The total amount (in milli-satoshis) of the outgoing HTLC that created
	// the second half of the circuit.
	AmtOutMsat           uint64   `protobuf:"varint,10,opt,name=amt_out_msat,json=amtOutMsat,proto3" json:"amt_out_msat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardingEvent) Reset()         { *m = ForwardingEvent{} }
func (m *ForwardingEvent) String() string { return proto.CompactTextString(m) }
func (*ForwardingEvent) ProtoMessage()    {}
func (*ForwardingEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{138}
}

func (m *ForwardingEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardingEvent.Unmarshal(m, b)
}
func (m *ForwardingEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardingEvent.Marshal(b, m, deterministic)
}
func (m *ForwardingEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardingEvent.Merge(m, src)
}
func (m *ForwardingEvent) XXX_Size() int {
	return xxx_messageInfo_ForwardingEvent.Size(m)
}
func (m *ForwardingEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardingEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardingEvent proto.InternalMessageInfo

func (m *ForwardingEvent) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ForwardingEvent) GetChanIdIn() uint64 {
	if m != nil {
		return m.ChanIdIn
	}
	return 0
}

func (m *ForwardingEvent) GetChanIdOut() uint64 {
	if m != nil {
		return m.ChanIdOut
	}
	return 0
}

func (m *ForwardingEvent) GetAmtIn() uint64 {
	if m != nil {
		return m.AmtIn
	}
	return 0
}

func (m *ForwardingEvent) GetAmtOut() uint64 {
	if m != nil {
		return m.AmtOut
	}
	return 0
}

func (m *ForwardingEvent) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *ForwardingEvent) GetFeeMsat() uint64 {
	if m != nil {
		return m.FeeMsat
	}
	return 0
}

func (m *ForwardingEvent) GetAmtInMsat() uint64 {
	if m != nil {
		return m.AmtInMsat
	}
	return 0
}

func (m *ForwardingEvent) GetAmtOutMsat() uint64 {
	if m != nil {
		return m.AmtOutMsat
	}
	return 0
}

type ForwardingHistoryResponse struct {
	// A list of forwarding events from the time slice of the time series
	// specified in the request.
	ForwardingEvents []*ForwardingEvent `protobuf:"bytes,1,rep,name=forwarding_events,json=forwardingEvents,proto3" json:"forwarding_events,omitempty"`
	// The index of the last time in the set of returned forwarding events. Can
	// be used to seek further, pagination style.
	LastOffsetIndex      uint32   `protobuf:"varint,2,opt,name=last_offset_index,json=lastOffsetIndex,proto3" json:"last_offset_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardingHistoryResponse) Reset()         { *m = ForwardingHistoryResponse{} }
func (m *ForwardingHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*ForwardingHistoryResponse) ProtoMessage()    {}
func (*ForwardingHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{139}
}

func (m *ForwardingHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardingHistoryResponse.Unmarshal(m, b)
}
func (m *ForwardingHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardingHistoryResponse.Marshal(b, m, deterministic)
}
func (m *ForwardingHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardingHistoryResponse.Merge(m, src)
}
func (m *ForwardingHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_ForwardingHistoryResponse.Size(m)
}
func (m *ForwardingHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardingHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardingHistoryResponse proto.InternalMessageInfo

func (m *ForwardingHistoryResponse) GetForwardingEvents() []*ForwardingEvent {
	if m != nil {
		return m.ForwardingEvents
	}
	return nil
}

func (m *ForwardingHistoryResponse) GetLastOffsetIndex() uint32 {
	if m != nil {
		return m.LastOffsetIndex
	}
	return 0
}

type ExportChannelBackupRequest struct {
	// The target channel point to obtain a back up for.
	ChanPoint            *ChannelPoint `protobuf:"bytes,1,opt,name=chan_point,json=chanPoint,proto3" json:"chan_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ExportChannelBackupRequest) Reset()         { *m = ExportChannelBackupRequest{} }
func (m *ExportChannelBackupRequest) String() string { return proto.CompactTextString(m) }
func (*ExportChannelBackupRequest) ProtoMessage()    {}
func (*ExportChannelBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{140}
}

func (m *ExportChannelBackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportChannelBackupRequest.Unmarshal(m, b)
}
func (m *ExportChannelBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportChannelBackupRequest.Marshal(b, m, deterministic)
}
func (m *ExportChannelBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportChannelBackupRequest.Merge(m, src)
}
func (m *ExportChannelBackupRequest) XXX_Size() int {
	return xxx_messageInfo_ExportChannelBackupRequest.Size(m)
}
func (m *ExportChannelBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportChannelBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportChannelBackupRequest proto.InternalMessageInfo

func (m *ExportChannelBackupRequest) GetChanPoint() *ChannelPoint {
	if m != nil {
		return m.ChanPoint
	}
	return nil
}

type ChannelBackup struct {
	//
	//Identifies the channel that this backup belongs to.
	ChanPoint *ChannelPoint `protobuf:"bytes,1,opt,name=chan_point,json=chanPoint,proto3" json:"chan_point,omitempty"`
	//
	//Is an encrypted single-chan backup. this can be passed to
	//RestoreChannelBackups, or the WalletUnlocker Init and Unlock methods in
	//order to trigger the recovery protocol.
	ChanBackup           []byte   `protobuf:"bytes,2,opt,name=chan_backup,json=chanBackup,proto3" json:"chan_backup,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelBackup) Reset()         { *m = ChannelBackup{} }
func (m *ChannelBackup) String() string { return proto.CompactTextString(m) }
func (*ChannelBackup) ProtoMessage()    {}
func (*ChannelBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{141}
}

func (m *ChannelBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBackup.Unmarshal(m, b)
}
func (m *ChannelBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBackup.Marshal(b, m, deterministic)
}
func (m *ChannelBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBackup.Merge(m, src)
}
func (m *ChannelBackup) XXX_Size() int {
	return xxx_messageInfo_ChannelBackup.Size(m)
}
func (m *ChannelBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBackup.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBackup proto.InternalMessageInfo

func (m *ChannelBackup) GetChanPoint() *ChannelPoint {
	if m != nil {
		return m.ChanPoint
	}
	return nil
}

func (m *ChannelBackup) GetChanBackup() []byte {
	if m != nil {
		return m.ChanBackup
	}
	return nil
}

type MultiChanBackup struct {
	//
	//Is the set of all channels that are included in this multi-channel backup.
	ChanPoints []*ChannelPoint `protobuf:"bytes,1,rep,name=chan_points,json=chanPoints,proto3" json:"chan_points,omitempty"`
	//
	//A single encrypted blob containing all the static channel backups of the
	//channel listed above. This can be stored as a single file or blob, and
	//safely be replaced with any prior/future versions.
	MultiChanBackup      []byte   `protobuf:"bytes,2,opt,name=multi_chan_backup,json=multiChanBackup,proto3" json:"multi_chan_backup,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiChanBackup) Reset()         { *m = MultiChanBackup{} }
func (m *MultiChanBackup) String() string { return proto.CompactTextString(m) }
func (*MultiChanBackup) ProtoMessage()    {}
func (*MultiChanBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{142}
}

func (m *MultiChanBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiChanBackup.Unmarshal(m, b)
}
func (m *MultiChanBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiChanBackup.Marshal(b, m, deterministic)
}
func (m *MultiChanBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiChanBackup.Merge(m, src)
}
func (m *MultiChanBackup) XXX_Size() int {
	return xxx_messageInfo_MultiChanBackup.Size(m)
}
func (m *MultiChanBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiChanBackup.DiscardUnknown(m)
}

var xxx_messageInfo_MultiChanBackup proto.InternalMessageInfo

func (m *MultiChanBackup) GetChanPoints() []*ChannelPoint {
	if m != nil {
		return m.ChanPoints
	}
	return nil
}

func (m *MultiChanBackup) GetMultiChanBackup() []byte {
	if m != nil {
		return m.MultiChanBackup
	}
	return nil
}

type ChanBackupExportRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChanBackupExportRequest) Reset()         { *m = ChanBackupExportRequest{} }
func (m *ChanBackupExportRequest) String() string { return proto.CompactTextString(m) }
func (*ChanBackupExportRequest) ProtoMessage()    {}
func (*ChanBackupExportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{143}
}

func (m *ChanBackupExportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChanBackupExportRequest.Unmarshal(m, b)
}
func (m *ChanBackupExportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChanBackupExportRequest.Marshal(b, m, deterministic)
}
func (m *ChanBackupExportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChanBackupExportRequest.Merge(m, src)
}
func (m *ChanBackupExportRequest) XXX_Size() int {
	return xxx_messageInfo_ChanBackupExportRequest.Size(m)
}
func (m *ChanBackupExportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChanBackupExportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChanBackupExportRequest proto.InternalMessageInfo

type ChanBackupSnapshot struct {
	//
	//The set of new channels that have been added since the last channel backup
	//snapshot was requested.
	SingleChanBackups *ChannelBackups `protobuf:"bytes,1,opt,name=single_chan_backups,json=singleChanBackups,proto3" json:"single_chan_backups,omitempty"`
	//
	//A multi-channel backup that covers all open channels currently known to
	//lnd.
	MultiChanBackup      *MultiChanBackup `protobuf:"bytes,2,opt,name=multi_chan_backup,json=multiChanBackup,proto3" json:"multi_chan_backup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChanBackupSnapshot) Reset()         { *m = ChanBackupSnapshot{} }
func (m *ChanBackupSnapshot) String() string { return proto.CompactTextString(m) }
func (*ChanBackupSnapshot) ProtoMessage()    {}
func (*ChanBackupSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{144}
}

func (m *ChanBackupSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChanBackupSnapshot.Unmarshal(m, b)
}
func (m *ChanBackupSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChanBackupSnapshot.Marshal(b, m, deterministic)
}
func (m *ChanBackupSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChanBackupSnapshot.Merge(m, src)
}
func (m *ChanBackupSnapshot) XXX_Size() int {
	return xxx_messageInfo_ChanBackupSnapshot.Size(m)
}
func (m *ChanBackupSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_ChanBackupSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_ChanBackupSnapshot proto.InternalMessageInfo

func (m *ChanBackupSnapshot) GetSingleChanBackups() *ChannelBackups {
	if m != nil {
		return m.SingleChanBackups
	}
	return nil
}

func (m *ChanBackupSnapshot) GetMultiChanBackup() *MultiChanBackup {
	if m != nil {
		return m.MultiChanBackup
	}
	return nil
}

type ChannelBackups struct {
	//
	//A set of single-chan static channel backups.
	ChanBackups          []*ChannelBackup `protobuf:"bytes,1,rep,name=chan_backups,json=chanBackups,proto3" json:"chan_backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChannelBackups) Reset()         { *m = ChannelBackups{} }
func (m *ChannelBackups) String() string { return proto.CompactTextString(m) }
func (*ChannelBackups) ProtoMessage()    {}
func (*ChannelBackups) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{145}
}

func (m *ChannelBackups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBackups.Unmarshal(m, b)
}
func (m *ChannelBackups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBackups.Marshal(b, m, deterministic)
}
func (m *ChannelBackups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBackups.Merge(m, src)
}
func (m *ChannelBackups) XXX_Size() int {
	return xxx_messageInfo_ChannelBackups.Size(m)
}
func (m *ChannelBackups) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBackups.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBackups proto.InternalMessageInfo

func (m *ChannelBackups) GetChanBackups() []*ChannelBackup {
	if m != nil {
		return m.ChanBackups
	}
	return nil
}

type RestoreChanBackupRequest struct {
	// Types that are valid to be assigned to Backup:
	//	*RestoreChanBackupRequest_ChanBackups
	//	*RestoreChanBackupRequest_MultiChanBackup
	Backup               isRestoreChanBackupRequest_Backup `protobuf_oneof:"backup"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RestoreChanBackupRequest) Reset()         { *m = RestoreChanBackupRequest{} }
func (m *RestoreChanBackupRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreChanBackupRequest) ProtoMessage()    {}
func (*RestoreChanBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{146}
}

func (m *RestoreChanBackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreChanBackupRequest.Unmarshal(m, b)
}
func (m *RestoreChanBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreChanBackupRequest.Marshal(b, m, deterministic)
}
func (m *RestoreChanBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreChanBackupRequest.Merge(m, src)
}
func (m *RestoreChanBackupRequest) XXX_Size() int {
	return xxx_messageInfo_RestoreChanBackupRequest.Size(m)
}
func (m *RestoreChanBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreChanBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreChanBackupRequest proto.InternalMessageInfo

type isRestoreChanBackupRequest_Backup interface {
	isRestoreChanBackupRequest_Backup()
}

type RestoreChanBackupRequest_ChanBackups struct {
	ChanBackups *ChannelBackups `protobuf:"bytes,1,opt,name=chan_backups,json=chanBackups,proto3,oneof"`
}

type RestoreChanBackupRequest_MultiChanBackup struct {
	MultiChanBackup []byte `protobuf:"bytes,2,opt,name=multi_chan_backup,json=multiChanBackup,proto3,oneof"`
}

func (*RestoreChanBackupRequest_ChanBackups) isRestoreChanBackupRequest_Backup() {}

func (*RestoreChanBackupRequest_MultiChanBackup) isRestoreChanBackupRequest_Backup() {}

func (m *RestoreChanBackupRequest) GetBackup() isRestoreChanBackupRequest_Backup {
	if m != nil {
		return m.Backup
	}
	return nil
}

func (m *RestoreChanBackupRequest) GetChanBackups() *ChannelBackups {
	if x, ok := m.GetBackup().(*RestoreChanBackupRequest_ChanBackups); ok {
		return x.ChanBackups
	}
	return nil
}

func (m *RestoreChanBackupRequest) GetMultiChanBackup() []byte {
	if x, ok := m.GetBackup().(*RestoreChanBackupRequest_MultiChanBackup); ok {
		return x.MultiChanBackup
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RestoreChanBackupRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RestoreChanBackupRequest_ChanBackups)(nil),
		(*RestoreChanBackupRequest_MultiChanBackup)(nil),
	}
}

type RestoreBackupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreBackupResponse) Reset()         { *m = RestoreBackupResponse{} }
func (m *RestoreBackupResponse) String() string { return proto.CompactTextString(m) }
func (*RestoreBackupResponse) ProtoMessage()    {}
func (*RestoreBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{147}
}

func (m *RestoreBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreBackupResponse.Unmarshal(m, b)
}
func (m *RestoreBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreBackupResponse.Marshal(b, m, deterministic)
}
func (m *RestoreBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreBackupResponse.Merge(m, src)
}
func (m *RestoreBackupResponse) XXX_Size() int {
	return xxx_messageInfo_RestoreBackupResponse.Size(m)
}
func (m *RestoreBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreBackupResponse proto.InternalMessageInfo

type ChannelBackupSubscription struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelBackupSubscription) Reset()         { *m = ChannelBackupSubscription{} }
func (m *ChannelBackupSubscription) String() string { return proto.CompactTextString(m) }
func (*ChannelBackupSubscription) ProtoMessage()    {}
func (*ChannelBackupSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{148}
}

func (m *ChannelBackupSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBackupSubscription.Unmarshal(m, b)
}
func (m *ChannelBackupSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBackupSubscription.Marshal(b, m, deterministic)
}
func (m *ChannelBackupSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBackupSubscription.Merge(m, src)
}
func (m *ChannelBackupSubscription) XXX_Size() int {
	return xxx_messageInfo_ChannelBackupSubscription.Size(m)
}
func (m *ChannelBackupSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBackupSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBackupSubscription proto.InternalMessageInfo

type VerifyChanBackupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyChanBackupResponse) Reset()         { *m = VerifyChanBackupResponse{} }
func (m *VerifyChanBackupResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyChanBackupResponse) ProtoMessage()    {}
func (*VerifyChanBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{149}
}

func (m *VerifyChanBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyChanBackupResponse.Unmarshal(m, b)
}
func (m *VerifyChanBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyChanBackupResponse.Marshal(b, m, deterministic)
}
func (m *VerifyChanBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyChanBackupResponse.Merge(m, src)
}
func (m *VerifyChanBackupResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyChanBackupResponse.Size(m)
}
func (m *VerifyChanBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyChanBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyChanBackupResponse proto.InternalMessageInfo

type Failure struct {
	// Failure code as defined in the Lightning spec
	Code Failure_FailureCode `protobuf:"varint,1,opt,name=code,proto3,enum=lnrpc.Failure_FailureCode" json:"code,omitempty"`
	// An optional channel update message.
	ChannelUpdate *ChannelUpdate `protobuf:"bytes,3,opt,name=channel_update,json=channelUpdate,proto3" json:"channel_update,omitempty"`
	// A failure type-dependent htlc value.
	HtlcMsat uint64 `protobuf:"varint,4,opt,name=htlc_msat,json=htlcMsat,proto3" json:"htlc_msat,omitempty"`
	// The sha256 sum of the onion payload.
	OnionSha_256 []byte `protobuf:"bytes,5,opt,name=onion_sha_256,json=onionSha256,proto3" json:"onion_sha_256,omitempty"`
	// A failure type-dependent cltv expiry value.
	CltvExpiry uint32 `protobuf:"varint,6,opt,name=cltv_expiry,json=cltvExpiry,proto3" json:"cltv_expiry,omitempty"`
	// A failure type-dependent flags value.
	Flags uint32 `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	//
	//The position in the path of the intermediate or final node that generated
	//the failure message. Position zero is the sender node.
	FailureSourceIndex uint32 `protobuf:"varint,8,opt,name=failure_source_index,json=failureSourceIndex,proto3" json:"failure_source_index,omitempty"`
	// A failure type-dependent block height.
	Height               uint32   `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Failure) Reset()         { *m = Failure{} }
func (m *Failure) String() string { return proto.CompactTextString(m) }
func (*Failure) ProtoMessage()    {}
func (*Failure) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{150}
}

func (m *Failure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failure.Unmarshal(m, b)
}
func (m *Failure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failure.Marshal(b, m, deterministic)
}
func (m *Failure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failure.Merge(m, src)
}
func (m *Failure) XXX_Size() int {
	return xxx_messageInfo_Failure.Size(m)
}
func (m *Failure) XXX_DiscardUnknown() {
	xxx_messageInfo_Failure.DiscardUnknown(m)
}

var xxx_messageInfo_Failure proto.InternalMessageInfo

func (m *Failure) GetCode() Failure_FailureCode {
	if m != nil {
		return m.Code
	}
	return Failure_RESERVED
}

func (m *Failure) GetChannelUpdate() *ChannelUpdate {
	if m != nil {
		return m.ChannelUpdate
	}
	return nil
}

func (m *Failure) GetHtlcMsat() uint64 {
	if m != nil {
		return m.HtlcMsat
	}
	return 0
}

func (m *Failure) GetOnionSha_256() []byte {
	if m != nil {
		return m.OnionSha_256
	}
	return nil
}

func (m *Failure) GetCltvExpiry() uint32 {
	if m != nil {
		return m.CltvExpiry
	}
	return 0
}

func (m *Failure) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *Failure) GetFailureSourceIndex() uint32 {
	if m != nil {
		return m.FailureSourceIndex
	}
	return 0
}

func (m *Failure) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ChannelUpdate struct {
	//
	//The signature that validates the announced data and proves the ownership
	//of node id.
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	//
	//The target chain that this channel was opened within. This value
	//should be the genesis hash of the target chain. Along with the short
	//channel ID, this uniquely identifies the channel globally in a
	//blockchain.
	ChainHash []byte `protobuf:"bytes,2,opt,name=chain_hash,json=chainHash,proto3" json:"chain_hash,omitempty"`
	//
	//The unique description of the funding transaction.
	ChanId uint64 `protobuf:"varint,3,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	//
	//A timestamp that allows ordering in the case of multiple announcements.
	//We should ignore the message if timestamp is not greater than the
	//last-received.
	Timestamp uint32 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//
	//The bitfield that describes whether optional fields are present in this
	//update. Currently, the least-significant bit must be set to 1 if the
	//optional field MaxHtlc is present.
	MessageFlags uint32 `protobuf:"varint,10,opt,name=message_flags,json=messageFlags,proto3" json:"message_flags,omitempty"`
	//
	//The bitfield that describes additional meta-data concerning how the
	//update is to be interpreted. Currently, the least-significant bit must be
	//set to 0 if the creating node corresponds to the first node in the
	//previously sent channel announcement and 1 otherwise. If the second bit
	//is set, then the channel is set to be disabled.
	ChannelFlags uint32 `protobuf:"varint,5,opt,name=channel_flags,json=channelFlags,proto3" json:"channel_flags,omitempty"`
	//
	//The minimum number of blocks this node requires to be added to the expiry
	//of HTLCs. This is a security parameter determined by the node operator.
	//This value represents the required gap between the time locks of the
	//incoming and outgoing HTLC's set to this node.
	TimeLockDelta uint32 `protobuf:"varint,6,opt,name=time_lock_delta,json=timeLockDelta,proto3" json:"time_lock_delta,omitempty"`
	//
	//The minimum HTLC value which will be accepted.
	HtlcMinimumMsat uint64 `protobuf:"varint,7,opt,name=htlc_minimum_msat,json=htlcMinimumMsat,proto3" json:"htlc_minimum_msat,omitempty"`
	//
	//The base fee that must be used for incoming HTLC's to this particular
	//channel. This value will be tacked onto the required for a payment
	//independent of the size of the payment.
	BaseFee uint32 `protobuf:"varint,8,opt,name=base_fee,json=baseFee,proto3" json:"base_fee,omitempty"`
	//
	//The fee rate that will be charged per millionth of a satoshi.
	FeeRate uint32 `protobuf:"varint,9,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	//
	//The maximum HTLC value which will be accepted.
	HtlcMaximumMsat uint64 `protobuf:"varint,11,opt,name=htlc_maximum_msat,json=htlcMaximumMsat,proto3" json:"htlc_maximum_msat,omitempty"`
	//
	//The set of data that was appended to this message, some of which we may
	//not actually know how to iterate or parse. By holding onto this data, we
	//ensure that we're able to properly validate the set of signatures that
	//cover these new fields, and ensure we're able to make upgrades to the
	//network in a forwards compatible manner.
	ExtraOpaqueData      []byte   `protobuf:"bytes,12,opt,name=extra_opaque_data,json=extraOpaqueData,proto3" json:"extra_opaque_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelUpdate) Reset()         { *m = ChannelUpdate{} }
func (m *ChannelUpdate) String() string { return proto.CompactTextString(m) }
func (*ChannelUpdate) ProtoMessage()    {}
func (*ChannelUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{151}
}

func (m *ChannelUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelUpdate.Unmarshal(m, b)
}
func (m *ChannelUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelUpdate.Marshal(b, m, deterministic)
}
func (m *ChannelUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelUpdate.Merge(m, src)
}
func (m *ChannelUpdate) XXX_Size() int {
	return xxx_messageInfo_ChannelUpdate.Size(m)
}
func (m *ChannelUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelUpdate proto.InternalMessageInfo

func (m *ChannelUpdate) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ChannelUpdate) GetChainHash() []byte {
	if m != nil {
		return m.ChainHash
	}
	return nil
}

func (m *ChannelUpdate) GetChanId() uint64 {
	if m != nil {
		return m.ChanId
	}
	return 0
}

func (m *ChannelUpdate) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ChannelUpdate) GetMessageFlags() uint32 {
	if m != nil {
		return m.MessageFlags
	}
	return 0
}

func (m *ChannelUpdate) GetChannelFlags() uint32 {
	if m != nil {
		return m.ChannelFlags
	}
	return 0
}

func (m *ChannelUpdate) GetTimeLockDelta() uint32 {
	if m != nil {
		return m.TimeLockDelta
	}
	return 0
}

func (m *ChannelUpdate) GetHtlcMinimumMsat() uint64 {
	if m != nil {
		return m.HtlcMinimumMsat
	}
	return 0
}

func (m *ChannelUpdate) GetBaseFee() uint32 {
	if m != nil {
		return m.BaseFee
	}
	return 0
}

func (m *ChannelUpdate) GetFeeRate() uint32 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

func (m *ChannelUpdate) GetHtlcMaximumMsat() uint64 {
	if m != nil {
		return m.HtlcMaximumMsat
	}
	return 0
}

func (m *ChannelUpdate) GetExtraOpaqueData() []byte {
	if m != nil {
		return m.ExtraOpaqueData
	}
	return nil
}

type Op struct {
	Entity               string   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Actions              []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Op) Reset()         { *m = Op{} }
func (m *Op) String() string { return proto.CompactTextString(m) }
func (*Op) ProtoMessage()    {}
func (*Op) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{152}
}

func (m *Op) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Op.Unmarshal(m, b)
}
func (m *Op) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Op.Marshal(b, m, deterministic)
}
func (m *Op) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Op.Merge(m, src)
}
func (m *Op) XXX_Size() int {
	return xxx_messageInfo_Op.Size(m)
}
func (m *Op) XXX_DiscardUnknown() {
	xxx_messageInfo_Op.DiscardUnknown(m)
}

var xxx_messageInfo_Op proto.InternalMessageInfo

func (m *Op) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

func (m *Op) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

type ReSyncChainRequest struct {
	FromHeight           int32    `protobuf:"varint,1,opt,name=from_height,json=fromHeight,proto3" json:"from_height,omitempty"`
	ToHeight             int32    `protobuf:"varint,2,opt,name=to_height,json=toHeight,proto3" json:"to_height,omitempty"`
	Addresses            []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	DropDb               bool     `protobuf:"varint,4,opt,name=drop_db,json=dropDb,proto3" json:"drop_db,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReSyncChainRequest) Reset()         { *m = ReSyncChainRequest{} }
func (m *ReSyncChainRequest) String() string { return proto.CompactTextString(m) }
func (*ReSyncChainRequest) ProtoMessage()    {}
func (*ReSyncChainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{153}
}

func (m *ReSyncChainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReSyncChainRequest.Unmarshal(m, b)
}
func (m *ReSyncChainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReSyncChainRequest.Marshal(b, m, deterministic)
}
func (m *ReSyncChainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReSyncChainRequest.Merge(m, src)
}
func (m *ReSyncChainRequest) XXX_Size() int {
	return xxx_messageInfo_ReSyncChainRequest.Size(m)
}
func (m *ReSyncChainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReSyncChainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReSyncChainRequest proto.InternalMessageInfo

func (m *ReSyncChainRequest) GetFromHeight() int32 {
	if m != nil {
		return m.FromHeight
	}
	return 0
}

func (m *ReSyncChainRequest) GetToHeight() int32 {
	if m != nil {
		return m.ToHeight
	}
	return 0
}

func (m *ReSyncChainRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ReSyncChainRequest) GetDropDb() bool {
	if m != nil {
		return m.DropDb
	}
	return false
}

type ReSyncChainResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReSyncChainResponse) Reset()         { *m = ReSyncChainResponse{} }
func (m *ReSyncChainResponse) String() string { return proto.CompactTextString(m) }
func (*ReSyncChainResponse) ProtoMessage()    {}
func (*ReSyncChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{154}
}

func (m *ReSyncChainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReSyncChainResponse.Unmarshal(m, b)
}
func (m *ReSyncChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReSyncChainResponse.Marshal(b, m, deterministic)
}
func (m *ReSyncChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReSyncChainResponse.Merge(m, src)
}
func (m *ReSyncChainResponse) XXX_Size() int {
	return xxx_messageInfo_ReSyncChainResponse.Size(m)
}
func (m *ReSyncChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReSyncChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReSyncChainResponse proto.InternalMessageInfo

type StopReSyncRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopReSyncRequest) Reset()         { *m = StopReSyncRequest{} }
func (m *StopReSyncRequest) String() string { return proto.CompactTextString(m) }
func (*StopReSyncRequest) ProtoMessage()    {}
func (*StopReSyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{155}
}

func (m *StopReSyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReSyncRequest.Unmarshal(m, b)
}
func (m *StopReSyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReSyncRequest.Marshal(b, m, deterministic)
}
func (m *StopReSyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReSyncRequest.Merge(m, src)
}
func (m *StopReSyncRequest) XXX_Size() int {
	return xxx_messageInfo_StopReSyncRequest.Size(m)
}
func (m *StopReSyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReSyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopReSyncRequest proto.InternalMessageInfo

type StopReSyncResponse struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopReSyncResponse) Reset()         { *m = StopReSyncResponse{} }
func (m *StopReSyncResponse) String() string { return proto.CompactTextString(m) }
func (*StopReSyncResponse) ProtoMessage()    {}
func (*StopReSyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{156}
}

func (m *StopReSyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReSyncResponse.Unmarshal(m, b)
}
func (m *StopReSyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReSyncResponse.Marshal(b, m, deterministic)
}
func (m *StopReSyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReSyncResponse.Merge(m, src)
}
func (m *StopReSyncResponse) XXX_Size() int {
	return xxx_messageInfo_StopReSyncResponse.Size(m)
}
func (m *StopReSyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReSyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopReSyncResponse proto.InternalMessageInfo

func (m *StopReSyncResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type GetWalletSeedRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWalletSeedRequest) Reset()         { *m = GetWalletSeedRequest{} }
func (m *GetWalletSeedRequest) String() string { return proto.CompactTextString(m) }
func (*GetWalletSeedRequest) ProtoMessage()    {}
func (*GetWalletSeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{157}
}

func (m *GetWalletSeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWalletSeedRequest.Unmarshal(m, b)
}
func (m *GetWalletSeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWalletSeedRequest.Marshal(b, m, deterministic)
}
func (m *GetWalletSeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWalletSeedRequest.Merge(m, src)
}
func (m *GetWalletSeedRequest) XXX_Size() int {
	return xxx_messageInfo_GetWalletSeedRequest.Size(m)
}
func (m *GetWalletSeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWalletSeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWalletSeedRequest proto.InternalMessageInfo

type GetWalletSeedResponse struct {
	Seed                 []string `protobuf:"bytes,1,rep,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWalletSeedResponse) Reset()         { *m = GetWalletSeedResponse{} }
func (m *GetWalletSeedResponse) String() string { return proto.CompactTextString(m) }
func (*GetWalletSeedResponse) ProtoMessage()    {}
func (*GetWalletSeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{158}
}

func (m *GetWalletSeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWalletSeedResponse.Unmarshal(m, b)
}
func (m *GetWalletSeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWalletSeedResponse.Marshal(b, m, deterministic)
}
func (m *GetWalletSeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWalletSeedResponse.Merge(m, src)
}
func (m *GetWalletSeedResponse) XXX_Size() int {
	return xxx_messageInfo_GetWalletSeedResponse.Size(m)
}
func (m *GetWalletSeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWalletSeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWalletSeedResponse proto.InternalMessageInfo

func (m *GetWalletSeedResponse) GetSeed() []string {
	if m != nil {
		return m.Seed
	}
	return nil
}

type ChangeSeedPassphraseRequest struct {
	//
	//current_seed_passphrase is the optional user specified passphrase that
	//encrypts the current seed.
	CurrentSeedPassphrase string `protobuf:"bytes,1,opt,name=current_seed_passphrase,json=currentSeedPassphrase,proto3" json:"current_seed_passphrase,omitempty"`
	//
	//current_seed_passphrase_bin overrides current_seed_passphrase if specified,
	//for binary representation of the current seed passphrase. If using JSON then
	//this field must be base64 encoded.
	CurrentSeedPassphraseBin []byte `protobuf:"bytes,2,opt,name=current_seed_passphrase_bin,json=currentSeedPassphraseBin,proto3" json:"current_seed_passphrase_bin,omitempty"`
	//
	//current_seed is the seed whose passphrase is going to be changed
	CurrentSeed []string `protobuf:"bytes,3,rep,name=current_seed,json=currentSeed,proto3" json:"current_seed,omitempty"`
	//
	//new_seed_passphrase is the optional user specified passphrase that will be used
	//to encrypt the seed.
	NewSeedPassphrase string `protobuf:"bytes,4,opt,name=new_seed_passphrase,json=newSeedPassphrase,proto3" json:"new_seed_passphrase,omitempty"`
	//
	//new_seed_passphrase_bin overrides new_seed_passphrase if specified, for binary
	//representation of the passphrase. If using JSON then this field must be base64
	//encoded.
	NewSeedPassphraseBin []byte   `protobuf:"bytes,5,opt,name=new_seed_passphrase_bin,json=newSeedPassphraseBin,proto3" json:"new_seed_passphrase_bin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeSeedPassphraseRequest) Reset()         { *m = ChangeSeedPassphraseRequest{} }
func (m *ChangeSeedPassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeSeedPassphraseRequest) ProtoMessage()    {}
func (*ChangeSeedPassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{159}
}

func (m *ChangeSeedPassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeSeedPassphraseRequest.Unmarshal(m, b)
}
func (m *ChangeSeedPassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeSeedPassphraseRequest.Marshal(b, m, deterministic)
}
func (m *ChangeSeedPassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeSeedPassphraseRequest.Merge(m, src)
}
func (m *ChangeSeedPassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeSeedPassphraseRequest.Size(m)
}
func (m *ChangeSeedPassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeSeedPassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeSeedPassphraseRequest proto.InternalMessageInfo

func (m *ChangeSeedPassphraseRequest) GetCurrentSeedPassphrase() string {
	if m != nil {
		return m.CurrentSeedPassphrase
	}
	return ""
}

func (m *ChangeSeedPassphraseRequest) GetCurrentSeedPassphraseBin() []byte {
	if m != nil {
		return m.CurrentSeedPassphraseBin
	}
	return nil
}

func (m *ChangeSeedPassphraseRequest) GetCurrentSeed() []string {
	if m != nil {
		return m.CurrentSeed
	}
	return nil
}

func (m *ChangeSeedPassphraseRequest) GetNewSeedPassphrase() string {
	if m != nil {
		return m.NewSeedPassphrase
	}
	return ""
}

func (m *ChangeSeedPassphraseRequest) GetNewSeedPassphraseBin() []byte {
	if m != nil {
		return m.NewSeedPassphraseBin
	}
	return nil
}

type ChangeSeedPassphraseResponse struct {
	Seed                 []string `protobuf:"bytes,1,rep,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeSeedPassphraseResponse) Reset()         { *m = ChangeSeedPassphraseResponse{} }
func (m *ChangeSeedPassphraseResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeSeedPassphraseResponse) ProtoMessage()    {}
func (*ChangeSeedPassphraseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{160}
}

func (m *ChangeSeedPassphraseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeSeedPassphraseResponse.Unmarshal(m, b)
}
func (m *ChangeSeedPassphraseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeSeedPassphraseResponse.Marshal(b, m, deterministic)
}
func (m *ChangeSeedPassphraseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeSeedPassphraseResponse.Merge(m, src)
}
func (m *ChangeSeedPassphraseResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeSeedPassphraseResponse.Size(m)
}
func (m *ChangeSeedPassphraseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeSeedPassphraseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeSeedPassphraseResponse proto.InternalMessageInfo

func (m *ChangeSeedPassphraseResponse) GetSeed() []string {
	if m != nil {
		return m.Seed
	}
	return nil
}

type GetSecretRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSecretRequest) Reset()         { *m = GetSecretRequest{} }
func (m *GetSecretRequest) String() string { return proto.CompactTextString(m) }
func (*GetSecretRequest) ProtoMessage()    {}
func (*GetSecretRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{161}
}

func (m *GetSecretRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSecretRequest.Unmarshal(m, b)
}
func (m *GetSecretRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSecretRequest.Marshal(b, m, deterministic)
}
func (m *GetSecretRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSecretRequest.Merge(m, src)
}
func (m *GetSecretRequest) XXX_Size() int {
	return xxx_messageInfo_GetSecretRequest.Size(m)
}
func (m *GetSecretRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSecretRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSecretRequest proto.InternalMessageInfo

func (m *GetSecretRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetSecretResponse struct {
	Secret               string   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSecretResponse) Reset()         { *m = GetSecretResponse{} }
func (m *GetSecretResponse) String() string { return proto.CompactTextString(m) }
func (*GetSecretResponse) ProtoMessage()    {}
func (*GetSecretResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{162}
}

func (m *GetSecretResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSecretResponse.Unmarshal(m, b)
}
func (m *GetSecretResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSecretResponse.Marshal(b, m, deterministic)
}
func (m *GetSecretResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSecretResponse.Merge(m, src)
}
func (m *GetSecretResponse) XXX_Size() int {
	return xxx_messageInfo_GetSecretResponse.Size(m)
}
func (m *GetSecretResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSecretResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSecretResponse proto.InternalMessageInfo

func (m *GetSecretResponse) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type ImportPrivKeyRequest struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Rescan               bool     `protobuf:"varint,2,opt,name=rescan,proto3" json:"rescan,omitempty"`
	Legacy               bool     `protobuf:"varint,3,opt,name=legacy,proto3" json:"legacy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportPrivKeyRequest) Reset()         { *m = ImportPrivKeyRequest{} }
func (m *ImportPrivKeyRequest) String() string { return proto.CompactTextString(m) }
func (*ImportPrivKeyRequest) ProtoMessage()    {}
func (*ImportPrivKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{163}
}

func (m *ImportPrivKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportPrivKeyRequest.Unmarshal(m, b)
}
func (m *ImportPrivKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportPrivKeyRequest.Marshal(b, m, deterministic)
}
func (m *ImportPrivKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportPrivKeyRequest.Merge(m, src)
}
func (m *ImportPrivKeyRequest) XXX_Size() int {
	return xxx_messageInfo_ImportPrivKeyRequest.Size(m)
}
func (m *ImportPrivKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportPrivKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportPrivKeyRequest proto.InternalMessageInfo

func (m *ImportPrivKeyRequest) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *ImportPrivKeyRequest) GetRescan() bool {
	if m != nil {
		return m.Rescan
	}
	return false
}

func (m *ImportPrivKeyRequest) GetLegacy() bool {
	if m != nil {
		return m.Legacy
	}
	return false
}

type ImportPrivKeyResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportPrivKeyResponse) Reset()         { *m = ImportPrivKeyResponse{} }
func (m *ImportPrivKeyResponse) String() string { return proto.CompactTextString(m) }
func (*ImportPrivKeyResponse) ProtoMessage()    {}
func (*ImportPrivKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{164}
}

func (m *ImportPrivKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportPrivKeyResponse.Unmarshal(m, b)
}
func (m *ImportPrivKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportPrivKeyResponse.Marshal(b, m, deterministic)
}
func (m *ImportPrivKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportPrivKeyResponse.Merge(m, src)
}
func (m *ImportPrivKeyResponse) XXX_Size() int {
	return xxx_messageInfo_ImportPrivKeyResponse.Size(m)
}
func (m *ImportPrivKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportPrivKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportPrivKeyResponse proto.InternalMessageInfo

func (m *ImportPrivKeyResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ListLockUnspentRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLockUnspentRequest) Reset()         { *m = ListLockUnspentRequest{} }
func (m *ListLockUnspentRequest) String() string { return proto.CompactTextString(m) }
func (*ListLockUnspentRequest) ProtoMessage()    {}
func (*ListLockUnspentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{165}
}

func (m *ListLockUnspentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLockUnspentRequest.Unmarshal(m, b)
}
func (m *ListLockUnspentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLockUnspentRequest.Marshal(b, m, deterministic)
}
func (m *ListLockUnspentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLockUnspentRequest.Merge(m, src)
}
func (m *ListLockUnspentRequest) XXX_Size() int {
	return xxx_messageInfo_ListLockUnspentRequest.Size(m)
}
func (m *ListLockUnspentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLockUnspentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLockUnspentRequest proto.InternalMessageInfo

type ListLockUnspentResponse struct {
	LockedUnspent        []string `protobuf:"bytes,1,rep,name=locked_unspent,json=lockedUnspent,proto3" json:"locked_unspent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLockUnspentResponse) Reset()         { *m = ListLockUnspentResponse{} }
func (m *ListLockUnspentResponse) String() string { return proto.CompactTextString(m) }
func (*ListLockUnspentResponse) ProtoMessage()    {}
func (*ListLockUnspentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{166}
}

func (m *ListLockUnspentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLockUnspentResponse.Unmarshal(m, b)
}
func (m *ListLockUnspentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLockUnspentResponse.Marshal(b, m, deterministic)
}
func (m *ListLockUnspentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLockUnspentResponse.Merge(m, src)
}
func (m *ListLockUnspentResponse) XXX_Size() int {
	return xxx_messageInfo_ListLockUnspentResponse.Size(m)
}
func (m *ListLockUnspentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLockUnspentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLockUnspentResponse proto.InternalMessageInfo

func (m *ListLockUnspentResponse) GetLockedUnspent() []string {
	if m != nil {
		return m.LockedUnspent
	}
	return nil
}

type LockUnspentTransaction struct {
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout                 int32    `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockUnspentTransaction) Reset()         { *m = LockUnspentTransaction{} }
func (m *LockUnspentTransaction) String() string { return proto.CompactTextString(m) }
func (*LockUnspentTransaction) ProtoMessage()    {}
func (*LockUnspentTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{167}
}

func (m *LockUnspentTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockUnspentTransaction.Unmarshal(m, b)
}
func (m *LockUnspentTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockUnspentTransaction.Marshal(b, m, deterministic)
}
func (m *LockUnspentTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockUnspentTransaction.Merge(m, src)
}
func (m *LockUnspentTransaction) XXX_Size() int {
	return xxx_messageInfo_LockUnspentTransaction.Size(m)
}
func (m *LockUnspentTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_LockUnspentTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_LockUnspentTransaction proto.InternalMessageInfo

func (m *LockUnspentTransaction) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *LockUnspentTransaction) GetVout() int32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

type LockUnspentRequest struct {
	Unlock               bool                      `protobuf:"varint,1,opt,name=unlock,proto3" json:"unlock,omitempty"`
	Transactions         []*LockUnspentTransaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Lockname             string                    `protobuf:"bytes,3,opt,name=lockname,proto3" json:"lockname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LockUnspentRequest) Reset()         { *m = LockUnspentRequest{} }
func (m *LockUnspentRequest) String() string { return proto.CompactTextString(m) }
func (*LockUnspentRequest) ProtoMessage()    {}
func (*LockUnspentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{168}
}

func (m *LockUnspentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockUnspentRequest.Unmarshal(m, b)
}
func (m *LockUnspentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockUnspentRequest.Marshal(b, m, deterministic)
}
func (m *LockUnspentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockUnspentRequest.Merge(m, src)
}
func (m *LockUnspentRequest) XXX_Size() int {
	return xxx_messageInfo_LockUnspentRequest.Size(m)
}
func (m *LockUnspentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockUnspentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockUnspentRequest proto.InternalMessageInfo

func (m *LockUnspentRequest) GetUnlock() bool {
	if m != nil {
		return m.Unlock
	}
	return false
}

func (m *LockUnspentRequest) GetTransactions() []*LockUnspentTransaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *LockUnspentRequest) GetLockname() string {
	if m != nil {
		return m.Lockname
	}
	return ""
}

type LockUnspentResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockUnspentResponse) Reset()         { *m = LockUnspentResponse{} }
func (m *LockUnspentResponse) String() string { return proto.CompactTextString(m) }
func (*LockUnspentResponse) ProtoMessage()    {}
func (*LockUnspentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{169}
}

func (m *LockUnspentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockUnspentResponse.Unmarshal(m, b)
}
func (m *LockUnspentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockUnspentResponse.Marshal(b, m, deterministic)
}
func (m *LockUnspentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockUnspentResponse.Merge(m, src)
}
func (m *LockUnspentResponse) XXX_Size() int {
	return xxx_messageInfo_LockUnspentResponse.Size(m)
}
func (m *LockUnspentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockUnspentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockUnspentResponse proto.InternalMessageInfo

func (m *LockUnspentResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CreateTransactionRequest struct {
	// Address which we will be paying to
	ToAddress string `protobuf:"bytes,1,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Number of PKT to send
	Amount float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Addresses which can be selected for sourcing funds from
	FromAddress []string `protobuf:"bytes,3,rep,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	// Output an electrum format transaction
	ElectrumFormat       bool     `protobuf:"varint,4,opt,name=electrum_format,json=electrumFormat,proto3" json:"electrum_format,omitempty"`
	ChangeAddress        string   `protobuf:"bytes,5,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
	InputMinHeight       int32    `protobuf:"varint,6,opt,name=input_min_height,json=inputMinHeight,proto3" json:"input_min_height,omitempty"`
	MinConf              int32    `protobuf:"varint,7,opt,name=min_conf,json=minConf,proto3" json:"min_conf,omitempty"`
	Vote                 bool     `protobuf:"varint,8,opt,name=vote,proto3" json:"vote,omitempty"`
	MaxInputs            int32    `protobuf:"varint,9,opt,name=max_inputs,json=maxInputs,proto3" json:"max_inputs,omitempty"`
	Autolock             string   `protobuf:"bytes,10,opt,name=autolock,proto3" json:"autolock,omitempty"`
	Sign                 bool     `protobuf:"varint,11,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTransactionRequest) Reset()         { *m = CreateTransactionRequest{} }
func (m *CreateTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionRequest) ProtoMessage()    {}
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{170}
}

func (m *CreateTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionRequest.Unmarshal(m, b)
}
func (m *CreateTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CreateTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionRequest.Merge(m, src)
}
func (m *CreateTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionRequest.Size(m)
}
func (m *CreateTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionRequest proto.InternalMessageInfo

func (m *CreateTransactionRequest) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *CreateTransactionRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateTransactionRequest) GetFromAddress() []string {
	if m != nil {
		return m.FromAddress
	}
	return nil
}

func (m *CreateTransactionRequest) GetElectrumFormat() bool {
	if m != nil {
		return m.ElectrumFormat
	}
	return false
}

func (m *CreateTransactionRequest) GetChangeAddress() string {
	if m != nil {
		return m.ChangeAddress
	}
	return ""
}

func (m *CreateTransactionRequest) GetInputMinHeight() int32 {
	if m != nil {
		return m.InputMinHeight
	}
	return 0
}

func (m *CreateTransactionRequest) GetMinConf() int32 {
	if m != nil {
		return m.MinConf
	}
	return 0
}

func (m *CreateTransactionRequest) GetVote() bool {
	if m != nil {
		return m.Vote
	}
	return false
}

func (m *CreateTransactionRequest) GetMaxInputs() int32 {
	if m != nil {
		return m.MaxInputs
	}
	return 0
}

func (m *CreateTransactionRequest) GetAutolock() string {
	if m != nil {
		return m.Autolock
	}
	return ""
}

func (m *CreateTransactionRequest) GetSign() bool {
	if m != nil {
		return m.Sign
	}
	return false
}

type CreateTransactionResponse struct {
	Transaction          []byte   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTransactionResponse) Reset()         { *m = CreateTransactionResponse{} }
func (m *CreateTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionResponse) ProtoMessage()    {}
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{171}
}

func (m *CreateTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionResponse.Unmarshal(m, b)
}
func (m *CreateTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionResponse.Marshal(b, m, deterministic)
}
func (m *CreateTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionResponse.Merge(m, src)
}
func (m *CreateTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionResponse.Size(m)
}
func (m *CreateTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionResponse proto.InternalMessageInfo

func (m *CreateTransactionResponse) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type DumpPrivKeyRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpPrivKeyRequest) Reset()         { *m = DumpPrivKeyRequest{} }
func (m *DumpPrivKeyRequest) String() string { return proto.CompactTextString(m) }
func (*DumpPrivKeyRequest) ProtoMessage()    {}
func (*DumpPrivKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{172}
}

func (m *DumpPrivKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpPrivKeyRequest.Unmarshal(m, b)
}
func (m *DumpPrivKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpPrivKeyRequest.Marshal(b, m, deterministic)
}
func (m *DumpPrivKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpPrivKeyRequest.Merge(m, src)
}
func (m *DumpPrivKeyRequest) XXX_Size() int {
	return xxx_messageInfo_DumpPrivKeyRequest.Size(m)
}
func (m *DumpPrivKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpPrivKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpPrivKeyRequest proto.InternalMessageInfo

func (m *DumpPrivKeyRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type DumpPrivKeyResponse struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpPrivKeyResponse) Reset()         { *m = DumpPrivKeyResponse{} }
func (m *DumpPrivKeyResponse) String() string { return proto.CompactTextString(m) }
func (*DumpPrivKeyResponse) ProtoMessage()    {}
func (*DumpPrivKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{173}
}

func (m *DumpPrivKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpPrivKeyResponse.Unmarshal(m, b)
}
func (m *DumpPrivKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpPrivKeyResponse.Marshal(b, m, deterministic)
}
func (m *DumpPrivKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpPrivKeyResponse.Merge(m, src)
}
func (m *DumpPrivKeyResponse) XXX_Size() int {
	return xxx_messageInfo_DumpPrivKeyResponse.Size(m)
}
func (m *DumpPrivKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpPrivKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpPrivKeyResponse proto.InternalMessageInfo

func (m *DumpPrivKeyResponse) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

type GetNewAddressRequest struct {
	Legacy               bool     `protobuf:"varint,1,opt,name=legacy,proto3" json:"legacy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewAddressRequest) Reset()         { *m = GetNewAddressRequest{} }
func (m *GetNewAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetNewAddressRequest) ProtoMessage()    {}
func (*GetNewAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{174}
}

func (m *GetNewAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewAddressRequest.Unmarshal(m, b)
}
func (m *GetNewAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewAddressRequest.Marshal(b, m, deterministic)
}
func (m *GetNewAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewAddressRequest.Merge(m, src)
}
func (m *GetNewAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetNewAddressRequest.Size(m)
}
func (m *GetNewAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewAddressRequest proto.InternalMessageInfo

func (m *GetNewAddressRequest) GetLegacy() bool {
	if m != nil {
		return m.Legacy
	}
	return false
}

type GetNewAddressResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNewAddressResponse) Reset()         { *m = GetNewAddressResponse{} }
func (m *GetNewAddressResponse) String() string { return proto.CompactTextString(m) }
func (*GetNewAddressResponse) ProtoMessage()    {}
func (*GetNewAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{175}
}

func (m *GetNewAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNewAddressResponse.Unmarshal(m, b)
}
func (m *GetNewAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNewAddressResponse.Marshal(b, m, deterministic)
}
func (m *GetNewAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNewAddressResponse.Merge(m, src)
}
func (m *GetNewAddressResponse) XXX_Size() int {
	return xxx_messageInfo_GetNewAddressResponse.Size(m)
}
func (m *GetNewAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNewAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNewAddressResponse proto.InternalMessageInfo

func (m *GetNewAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetTransactionRequest struct {
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Includewatchonly     bool     `protobuf:"varint,2,opt,name=includewatchonly,proto3" json:"includewatchonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{176}
}

func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(m, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequest.Size(m)
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *GetTransactionRequest) GetIncludewatchonly() bool {
	if m != nil {
		return m.Includewatchonly
	}
	return false
}

type GetTransactionDetailsResult struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount               float64  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Category             string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Vout                 uint32   `protobuf:"varint,4,opt,name=vout,proto3" json:"vout,omitempty"`
	AmountUnits          uint64   `protobuf:"varint,5,opt,name=amount_units,json=amountUnits,proto3" json:"amount_units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionDetailsResult) Reset()         { *m = GetTransactionDetailsResult{} }
func (m *GetTransactionDetailsResult) String() string { return proto.CompactTextString(m) }
func (*GetTransactionDetailsResult) ProtoMessage()    {}
func (*GetTransactionDetailsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{177}
}

func (m *GetTransactionDetailsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionDetailsResult.Unmarshal(m, b)
}
func (m *GetTransactionDetailsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionDetailsResult.Marshal(b, m, deterministic)
}
func (m *GetTransactionDetailsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionDetailsResult.Merge(m, src)
}
func (m *GetTransactionDetailsResult) XXX_Size() int {
	return xxx_messageInfo_GetTransactionDetailsResult.Size(m)
}
func (m *GetTransactionDetailsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionDetailsResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionDetailsResult proto.InternalMessageInfo

func (m *GetTransactionDetailsResult) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetTransactionDetailsResult) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GetTransactionDetailsResult) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *GetTransactionDetailsResult) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *GetTransactionDetailsResult) GetAmountUnits() uint64 {
	if m != nil {
		return m.AmountUnits
	}
	return 0
}

type TransactionResult struct {
	Amount               float64                        `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	AmountUnits          uint64                         `protobuf:"varint,2,opt,name=amount_units,json=amountUnits,proto3" json:"amount_units,omitempty"`
	Fee                  float64                        `protobuf:"fixed64,3,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeUnits             uint64                         `protobuf:"varint,4,opt,name=fee_units,json=feeUnits,proto3" json:"fee_units,omitempty"`
	Confirmations        int64                          `protobuf:"varint,5,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	BlockHash            string                         `protobuf:"bytes,6,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockIndex           int64                          `protobuf:"varint,7,opt,name=block_index,json=blockIndex,proto3" json:"block_index,omitempty"`
	BlockTime            int64                          `protobuf:"varint,8,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	Txid                 string                         `protobuf:"bytes,9,opt,name=txid,proto3" json:"txid,omitempty"`
	WalletConflicts      []string                       `protobuf:"bytes,10,rep,name=wallet_conflicts,json=walletConflicts,proto3" json:"wallet_conflicts,omitempty"`
	Time                 int64                          `protobuf:"varint,11,opt,name=time,proto3" json:"time,omitempty"`
	TimeReceived         int64                          `protobuf:"varint,12,opt,name=time_received,json=timeReceived,proto3" json:"time_received,omitempty"`
	Details              []*GetTransactionDetailsResult `protobuf:"bytes,13,rep,name=details,proto3" json:"details,omitempty"`
	Raw                  []byte                         `protobuf:"bytes,14,opt,name=raw,proto3" json:"raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TransactionResult) Reset()         { *m = TransactionResult{} }
func (m *TransactionResult) String() string { return proto.CompactTextString(m) }
func (*TransactionResult) ProtoMessage()    {}
func (*TransactionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{178}
}

func (m *TransactionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionResult.Unmarshal(m, b)
}
func (m *TransactionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionResult.Marshal(b, m, deterministic)
}
func (m *TransactionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResult.Merge(m, src)
}
func (m *TransactionResult) XXX_Size() int {
	return xxx_messageInfo_TransactionResult.Size(m)
}
func (m *TransactionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResult.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResult proto.InternalMessageInfo

func (m *TransactionResult) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransactionResult) GetAmountUnits() uint64 {
	if m != nil {
		return m.AmountUnits
	}
	return 0
}

func (m *TransactionResult) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *TransactionResult) GetFeeUnits() uint64 {
	if m != nil {
		return m.FeeUnits
	}
	return 0
}

func (m *TransactionResult) GetConfirmations() int64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *TransactionResult) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *TransactionResult) GetBlockIndex() int64 {
	if m != nil {
		return m.BlockIndex
	}
	return 0
}

func (m *TransactionResult) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *TransactionResult) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *TransactionResult) GetWalletConflicts() []string {
	if m != nil {
		return m.WalletConflicts
	}
	return nil
}

func (m *TransactionResult) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *TransactionResult) GetTimeReceived() int64 {
	if m != nil {
		return m.TimeReceived
	}
	return 0
}

func (m *TransactionResult) GetDetails() []*GetTransactionDetailsResult {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TransactionResult) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

type GetTransactionResponse struct {
	Transaction          *TransactionResult `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{179}
}

func (m *GetTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionResponse.Unmarshal(m, b)
}
func (m *GetTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionResponse.Merge(m, src)
}
func (m *GetTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionResponse.Size(m)
}
func (m *GetTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionResponse proto.InternalMessageInfo

func (m *GetTransactionResponse) GetTransaction() *TransactionResult {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type GetNetworkStewardVoteRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkStewardVoteRequest) Reset()         { *m = GetNetworkStewardVoteRequest{} }
func (m *GetNetworkStewardVoteRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkStewardVoteRequest) ProtoMessage()    {}
func (*GetNetworkStewardVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{180}
}

func (m *GetNetworkStewardVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkStewardVoteRequest.Unmarshal(m, b)
}
func (m *GetNetworkStewardVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkStewardVoteRequest.Marshal(b, m, deterministic)
}
func (m *GetNetworkStewardVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkStewardVoteRequest.Merge(m, src)
}
func (m *GetNetworkStewardVoteRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkStewardVoteRequest.Size(m)
}
func (m *GetNetworkStewardVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkStewardVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkStewardVoteRequest proto.InternalMessageInfo

type GetNetworkStewardVoteResponse struct {
	VoteAgainst          string   `protobuf:"bytes,1,opt,name=vote_against,json=voteAgainst,proto3" json:"vote_against,omitempty"`
	VoteFor              string   `protobuf:"bytes,2,opt,name=vote_for,json=voteFor,proto3" json:"vote_for,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkStewardVoteResponse) Reset()         { *m = GetNetworkStewardVoteResponse{} }
func (m *GetNetworkStewardVoteResponse) String() string { return proto.CompactTextString(m) }
func (*GetNetworkStewardVoteResponse) ProtoMessage()    {}
func (*GetNetworkStewardVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{181}
}

func (m *GetNetworkStewardVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkStewardVoteResponse.Unmarshal(m, b)
}
func (m *GetNetworkStewardVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkStewardVoteResponse.Marshal(b, m, deterministic)
}
func (m *GetNetworkStewardVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkStewardVoteResponse.Merge(m, src)
}
func (m *GetNetworkStewardVoteResponse) XXX_Size() int {
	return xxx_messageInfo_GetNetworkStewardVoteResponse.Size(m)
}
func (m *GetNetworkStewardVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkStewardVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkStewardVoteResponse proto.InternalMessageInfo

func (m *GetNetworkStewardVoteResponse) GetVoteAgainst() string {
	if m != nil {
		return m.VoteAgainst
	}
	return ""
}

func (m *GetNetworkStewardVoteResponse) GetVoteFor() string {
	if m != nil {
		return m.VoteFor
	}
	return ""
}

type SetNetworkStewardVoteRequest struct {
	VoteAgainst          string   `protobuf:"bytes,1,opt,name=vote_against,json=voteAgainst,proto3" json:"vote_against,omitempty"`
	VoteFor              string   `protobuf:"bytes,2,opt,name=vote_for,json=voteFor,proto3" json:"vote_for,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNetworkStewardVoteRequest) Reset()         { *m = SetNetworkStewardVoteRequest{} }
func (m *SetNetworkStewardVoteRequest) String() string { return proto.CompactTextString(m) }
func (*SetNetworkStewardVoteRequest) ProtoMessage()    {}
func (*SetNetworkStewardVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{182}
}

func (m *SetNetworkStewardVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNetworkStewardVoteRequest.Unmarshal(m, b)
}
func (m *SetNetworkStewardVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNetworkStewardVoteRequest.Marshal(b, m, deterministic)
}
func (m *SetNetworkStewardVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNetworkStewardVoteRequest.Merge(m, src)
}
func (m *SetNetworkStewardVoteRequest) XXX_Size() int {
	return xxx_messageInfo_SetNetworkStewardVoteRequest.Size(m)
}
func (m *SetNetworkStewardVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNetworkStewardVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNetworkStewardVoteRequest proto.InternalMessageInfo

func (m *SetNetworkStewardVoteRequest) GetVoteAgainst() string {
	if m != nil {
		return m.VoteAgainst
	}
	return ""
}

func (m *SetNetworkStewardVoteRequest) GetVoteFor() string {
	if m != nil {
		return m.VoteFor
	}
	return ""
}

type SetNetworkStewardVoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNetworkStewardVoteResponse) Reset()         { *m = SetNetworkStewardVoteResponse{} }
func (m *SetNetworkStewardVoteResponse) String() string { return proto.CompactTextString(m) }
func (*SetNetworkStewardVoteResponse) ProtoMessage()    {}
func (*SetNetworkStewardVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{183}
}

func (m *SetNetworkStewardVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNetworkStewardVoteResponse.Unmarshal(m, b)
}
func (m *SetNetworkStewardVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNetworkStewardVoteResponse.Marshal(b, m, deterministic)
}
func (m *SetNetworkStewardVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNetworkStewardVoteResponse.Merge(m, src)
}
func (m *SetNetworkStewardVoteResponse) XXX_Size() int {
	return xxx_messageInfo_SetNetworkStewardVoteResponse.Size(m)
}
func (m *SetNetworkStewardVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNetworkStewardVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetNetworkStewardVoteResponse proto.InternalMessageInfo

type BcastTransactionRequest struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BcastTransactionRequest) Reset()         { *m = BcastTransactionRequest{} }
func (m *BcastTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*BcastTransactionRequest) ProtoMessage()    {}
func (*BcastTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{184}
}

func (m *BcastTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BcastTransactionRequest.Unmarshal(m, b)
}
func (m *BcastTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BcastTransactionRequest.Marshal(b, m, deterministic)
}
func (m *BcastTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BcastTransactionRequest.Merge(m, src)
}
func (m *BcastTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_BcastTransactionRequest.Size(m)
}
func (m *BcastTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BcastTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BcastTransactionRequest proto.InternalMessageInfo

func (m *BcastTransactionRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

type BcastTransactionResponse struct {
	TxnHash              string   `protobuf:"bytes,1,opt,name=txn_hash,json=txnHash,proto3" json:"txn_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BcastTransactionResponse) Reset()         { *m = BcastTransactionResponse{} }
func (m *BcastTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*BcastTransactionResponse) ProtoMessage()    {}
func (*BcastTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{185}
}

func (m *BcastTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BcastTransactionResponse.Unmarshal(m, b)
}
func (m *BcastTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BcastTransactionResponse.Marshal(b, m, deterministic)
}
func (m *BcastTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BcastTransactionResponse.Merge(m, src)
}
func (m *BcastTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_BcastTransactionResponse.Size(m)
}
func (m *BcastTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BcastTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BcastTransactionResponse proto.InternalMessageInfo

func (m *BcastTransactionResponse) GetTxnHash() string {
	if m != nil {
		return m.TxnHash
	}
	return ""
}

type SendFromRequest struct {
	ToAddress            string   `protobuf:"bytes,1,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount               float64  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	FromAddress          []string `protobuf:"bytes,3,rep,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	MinConf              int32    `protobuf:"varint,4,opt,name=min_conf,json=minConf,proto3" json:"min_conf,omitempty"`
	MaxInputs            int32    `protobuf:"varint,5,opt,name=max_inputs,json=maxInputs,proto3" json:"max_inputs,omitempty"`
	MinHeight            int32    `protobuf:"varint,6,opt,name=min_height,json=minHeight,proto3" json:"min_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFromRequest) Reset()         { *m = SendFromRequest{} }
func (m *SendFromRequest) String() string { return proto.CompactTextString(m) }
func (*SendFromRequest) ProtoMessage()    {}
func (*SendFromRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{186}
}

func (m *SendFromRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFromRequest.Unmarshal(m, b)
}
func (m *SendFromRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFromRequest.Marshal(b, m, deterministic)
}
func (m *SendFromRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFromRequest.Merge(m, src)
}
func (m *SendFromRequest) XXX_Size() int {
	return xxx_messageInfo_SendFromRequest.Size(m)
}
func (m *SendFromRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFromRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendFromRequest proto.InternalMessageInfo

func (m *SendFromRequest) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *SendFromRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SendFromRequest) GetFromAddress() []string {
	if m != nil {
		return m.FromAddress
	}
	return nil
}

func (m *SendFromRequest) GetMinConf() int32 {
	if m != nil {
		return m.MinConf
	}
	return 0
}

func (m *SendFromRequest) GetMaxInputs() int32 {
	if m != nil {
		return m.MaxInputs
	}
	return 0
}

func (m *SendFromRequest) GetMinHeight() int32 {
	if m != nil {
		return m.MinHeight
	}
	return 0
}

type SendFromResponse struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFromResponse) Reset()         { *m = SendFromResponse{} }
func (m *SendFromResponse) String() string { return proto.CompactTextString(m) }
func (*SendFromResponse) ProtoMessage()    {}
func (*SendFromResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{187}
}

func (m *SendFromResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFromResponse.Unmarshal(m, b)
}
func (m *SendFromResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFromResponse.Marshal(b, m, deterministic)
}
func (m *SendFromResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFromResponse.Merge(m, src)
}
func (m *SendFromResponse) XXX_Size() int {
	return xxx_messageInfo_SendFromResponse.Size(m)
}
func (m *SendFromResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFromResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendFromResponse proto.InternalMessageInfo

func (m *SendFromResponse) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type DecodeRawTransactionRequest struct {
	HexTx                string   `protobuf:"bytes,1,opt,name=hex_tx,json=hexTx,proto3" json:"hex_tx,omitempty"`
	VinExtra             bool     `protobuf:"varint,2,opt,name=vin_extra,json=vinExtra,proto3" json:"vin_extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecodeRawTransactionRequest) Reset()         { *m = DecodeRawTransactionRequest{} }
func (m *DecodeRawTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*DecodeRawTransactionRequest) ProtoMessage()    {}
func (*DecodeRawTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{188}
}

func (m *DecodeRawTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeRawTransactionRequest.Unmarshal(m, b)
}
func (m *DecodeRawTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeRawTransactionRequest.Marshal(b, m, deterministic)
}
func (m *DecodeRawTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeRawTransactionRequest.Merge(m, src)
}
func (m *DecodeRawTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_DecodeRawTransactionRequest.Size(m)
}
func (m *DecodeRawTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeRawTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeRawTransactionRequest proto.InternalMessageInfo

func (m *DecodeRawTransactionRequest) GetHexTx() string {
	if m != nil {
		return m.HexTx
	}
	return ""
}

func (m *DecodeRawTransactionRequest) GetVinExtra() bool {
	if m != nil {
		return m.VinExtra
	}
	return false
}

type ScriptSig struct {
	Asm                  string   `protobuf:"bytes,1,opt,name=asm,proto3" json:"asm,omitempty"`
	Hex                  string   `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScriptSig) Reset()         { *m = ScriptSig{} }
func (m *ScriptSig) String() string { return proto.CompactTextString(m) }
func (*ScriptSig) ProtoMessage()    {}
func (*ScriptSig) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{189}
}

func (m *ScriptSig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScriptSig.Unmarshal(m, b)
}
func (m *ScriptSig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScriptSig.Marshal(b, m, deterministic)
}
func (m *ScriptSig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScriptSig.Merge(m, src)
}
func (m *ScriptSig) XXX_Size() int {
	return xxx_messageInfo_ScriptSig.Size(m)
}
func (m *ScriptSig) XXX_DiscardUnknown() {
	xxx_messageInfo_ScriptSig.DiscardUnknown(m)
}

var xxx_messageInfo_ScriptSig proto.InternalMessageInfo

func (m *ScriptSig) GetAsm() string {
	if m != nil {
		return m.Asm
	}
	return ""
}

func (m *ScriptSig) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

type PrevOut struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ValueCoins           float64  `protobuf:"fixed64,2,opt,name=value_coins,json=valueCoins,proto3" json:"value_coins,omitempty"`
	Svalue               string   `protobuf:"bytes,3,opt,name=svalue,proto3" json:"svalue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrevOut) Reset()         { *m = PrevOut{} }
func (m *PrevOut) String() string { return proto.CompactTextString(m) }
func (*PrevOut) ProtoMessage()    {}
func (*PrevOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{190}
}

func (m *PrevOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrevOut.Unmarshal(m, b)
}
func (m *PrevOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrevOut.Marshal(b, m, deterministic)
}
func (m *PrevOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrevOut.Merge(m, src)
}
func (m *PrevOut) XXX_Size() int {
	return xxx_messageInfo_PrevOut.Size(m)
}
func (m *PrevOut) XXX_DiscardUnknown() {
	xxx_messageInfo_PrevOut.DiscardUnknown(m)
}

var xxx_messageInfo_PrevOut proto.InternalMessageInfo

func (m *PrevOut) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PrevOut) GetValueCoins() float64 {
	if m != nil {
		return m.ValueCoins
	}
	return 0
}

func (m *PrevOut) GetSvalue() string {
	if m != nil {
		return m.Svalue
	}
	return ""
}

type VinPrevOut struct {
	Coinbase             string     `protobuf:"bytes,1,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Txid                 string     `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout                 uint32     `protobuf:"varint,3,opt,name=vout,proto3" json:"vout,omitempty"`
	ScriptSig            *ScriptSig `protobuf:"bytes,4,opt,name=script_sig,json=scriptSig,proto3" json:"script_sig,omitempty"`
	Sequence             uint32     `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Witness              []string   `protobuf:"bytes,6,rep,name=witness,proto3" json:"witness,omitempty"`
	PrevOut              *PrevOut   `protobuf:"bytes,7,opt,name=prev_out,json=prevOut,proto3" json:"prev_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VinPrevOut) Reset()         { *m = VinPrevOut{} }
func (m *VinPrevOut) String() string { return proto.CompactTextString(m) }
func (*VinPrevOut) ProtoMessage()    {}
func (*VinPrevOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{191}
}

func (m *VinPrevOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VinPrevOut.Unmarshal(m, b)
}
func (m *VinPrevOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VinPrevOut.Marshal(b, m, deterministic)
}
func (m *VinPrevOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VinPrevOut.Merge(m, src)
}
func (m *VinPrevOut) XXX_Size() int {
	return xxx_messageInfo_VinPrevOut.Size(m)
}
func (m *VinPrevOut) XXX_DiscardUnknown() {
	xxx_messageInfo_VinPrevOut.DiscardUnknown(m)
}

var xxx_messageInfo_VinPrevOut proto.InternalMessageInfo

func (m *VinPrevOut) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *VinPrevOut) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *VinPrevOut) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *VinPrevOut) GetScriptSig() *ScriptSig {
	if m != nil {
		return m.ScriptSig
	}
	return nil
}

func (m *VinPrevOut) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *VinPrevOut) GetWitness() []string {
	if m != nil {
		return m.Witness
	}
	return nil
}

func (m *VinPrevOut) GetPrevOut() *PrevOut {
	if m != nil {
		return m.PrevOut
	}
	return nil
}

type Vote struct {
	For                  string   `protobuf:"bytes,1,opt,name=for,proto3" json:"for,omitempty"`
	Against              string   `protobuf:"bytes,2,opt,name=against,proto3" json:"against,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{192}
}

func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (m *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(m, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetFor() string {
	if m != nil {
		return m.For
	}
	return ""
}

func (m *Vote) GetAgainst() string {
	if m != nil {
		return m.Against
	}
	return ""
}

type Vout struct {
	ValueCoins           float64  `protobuf:"fixed64,1,opt,name=value_coins,json=valueCoins,proto3" json:"value_coins,omitempty"`
	Svalue               string   `protobuf:"bytes,2,opt,name=svalue,proto3" json:"svalue,omitempty"`
	N                    uint32   `protobuf:"varint,3,opt,name=n,proto3" json:"n,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Vote                 *Vote    `protobuf:"bytes,5,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vout) Reset()         { *m = Vout{} }
func (m *Vout) String() string { return proto.CompactTextString(m) }
func (*Vout) ProtoMessage()    {}
func (*Vout) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{193}
}

func (m *Vout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vout.Unmarshal(m, b)
}
func (m *Vout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vout.Marshal(b, m, deterministic)
}
func (m *Vout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vout.Merge(m, src)
}
func (m *Vout) XXX_Size() int {
	return xxx_messageInfo_Vout.Size(m)
}
func (m *Vout) XXX_DiscardUnknown() {
	xxx_messageInfo_Vout.DiscardUnknown(m)
}

var xxx_messageInfo_Vout proto.InternalMessageInfo

func (m *Vout) GetValueCoins() float64 {
	if m != nil {
		return m.ValueCoins
	}
	return 0
}

func (m *Vout) GetSvalue() string {
	if m != nil {
		return m.Svalue
	}
	return ""
}

func (m *Vout) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Vout) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Vout) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type DecodeRawTransactionResponse struct {
	Txid                 string        `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Version              int32         `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Locktime             uint32        `protobuf:"varint,3,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Sfee                 string        `protobuf:"bytes,4,opt,name=sfee,proto3" json:"sfee,omitempty"`
	Size                 int32         `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Vsize                int32         `protobuf:"varint,6,opt,name=vsize,proto3" json:"vsize,omitempty"`
	Vin                  []*VinPrevOut `protobuf:"bytes,7,rep,name=vin,proto3" json:"vin,omitempty"`
	Vout                 []*Vout       `protobuf:"bytes,8,rep,name=vout,proto3" json:"vout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DecodeRawTransactionResponse) Reset()         { *m = DecodeRawTransactionResponse{} }
func (m *DecodeRawTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*DecodeRawTransactionResponse) ProtoMessage()    {}
func (*DecodeRawTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{194}
}

func (m *DecodeRawTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeRawTransactionResponse.Unmarshal(m, b)
}
func (m *DecodeRawTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeRawTransactionResponse.Marshal(b, m, deterministic)
}
func (m *DecodeRawTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeRawTransactionResponse.Merge(m, src)
}
func (m *DecodeRawTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_DecodeRawTransactionResponse.Size(m)
}
func (m *DecodeRawTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeRawTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeRawTransactionResponse proto.InternalMessageInfo

func (m *DecodeRawTransactionResponse) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *DecodeRawTransactionResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *DecodeRawTransactionResponse) GetLocktime() uint32 {
	if m != nil {
		return m.Locktime
	}
	return 0
}

func (m *DecodeRawTransactionResponse) GetSfee() string {
	if m != nil {
		return m.Sfee
	}
	return ""
}

func (m *DecodeRawTransactionResponse) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *DecodeRawTransactionResponse) GetVsize() int32 {
	if m != nil {
		return m.Vsize
	}
	return 0
}

func (m *DecodeRawTransactionResponse) GetVin() []*VinPrevOut {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *DecodeRawTransactionResponse) GetVout() []*Vout {
	if m != nil {
		return m.Vout
	}
	return nil
}

func init() {
	proto.RegisterEnum("lnrpc.AddressType", AddressType_name, AddressType_value)
	proto.RegisterEnum("lnrpc.CommitmentType", CommitmentType_name, CommitmentType_value)
	proto.RegisterEnum("lnrpc.Initiator", Initiator_name, Initiator_value)
	proto.RegisterEnum("lnrpc.ResolutionType", ResolutionType_name, ResolutionType_value)
	proto.RegisterEnum("lnrpc.ResolutionOutcome", ResolutionOutcome_name, ResolutionOutcome_value)
	proto.RegisterEnum("lnrpc.NodeMetricType", NodeMetricType_name, NodeMetricType_value)
	proto.RegisterEnum("lnrpc.InvoiceHTLCState", InvoiceHTLCState_name, InvoiceHTLCState_value)
	proto.RegisterEnum("lnrpc.PaymentFailureReason", PaymentFailureReason_name, PaymentFailureReason_value)
	proto.RegisterEnum("lnrpc.FeatureBit", FeatureBit_name, FeatureBit_value)
	proto.RegisterEnum("lnrpc.ChannelCloseSummary_ClosureType", ChannelCloseSummary_ClosureType_name, ChannelCloseSummary_ClosureType_value)
	proto.RegisterEnum("lnrpc.Peer_SyncType", Peer_SyncType_name, Peer_SyncType_value)
	proto.RegisterEnum("lnrpc.PeerEvent_EventType", PeerEvent_EventType_name, PeerEvent_EventType_value)
	proto.RegisterEnum("lnrpc.PendingChannelsResponse_ForceClosedChannel_AnchorState", PendingChannelsResponse_ForceClosedChannel_AnchorState_name, PendingChannelsResponse_ForceClosedChannel_AnchorState_value)
	proto.RegisterEnum("lnrpc.ChannelEventUpdate_UpdateType", ChannelEventUpdate_UpdateType_name, ChannelEventUpdate_UpdateType_value)
	proto.RegisterEnum("lnrpc.Invoice_InvoiceState", Invoice_InvoiceState_name, Invoice_InvoiceState_value)
	proto.RegisterEnum("lnrpc.Payment_PaymentStatus", Payment_PaymentStatus_name, Payment_PaymentStatus_value)
	proto.RegisterEnum("lnrpc.HTLCAttempt_HTLCStatus", HTLCAttempt_HTLCStatus_name, HTLCAttempt_HTLCStatus_value)
	proto.RegisterEnum("lnrpc.Failure_FailureCode", Failure_FailureCode_name, Failure_FailureCode_value)
	proto.RegisterType((*RestError)(nil), "lnrpc.RestError")
	proto.RegisterType((*Utxo)(nil), "lnrpc.Utxo")
	proto.RegisterType((*Transaction)(nil), "lnrpc.Transaction")
	proto.RegisterType((*GetTransactionsRequest)(nil), "lnrpc.GetTransactionsRequest")
	proto.RegisterType((*TransactionDetails)(nil), "lnrpc.TransactionDetails")
	proto.RegisterType((*FeeLimit)(nil), "lnrpc.FeeLimit")
	proto.RegisterType((*SendRequest)(nil), "lnrpc.SendRequest")
	proto.RegisterMapType((map[uint64][]byte)(nil), "lnrpc.SendRequest.DestCustomRecordsEntry")
	proto.RegisterType((*SendResponse)(nil), "lnrpc.SendResponse")
	proto.RegisterType((*SendToRouteRequest)(nil), "lnrpc.SendToRouteRequest")
	proto.RegisterType((*ChannelAcceptRequest)(nil), "lnrpc.ChannelAcceptRequest")
	proto.RegisterType((*ChannelAcceptResponse)(nil), "lnrpc.ChannelAcceptResponse")
	proto.RegisterType((*ChannelPoint)(nil), "lnrpc.ChannelPoint")
	proto.RegisterType((*OutPoint)(nil), "lnrpc.OutPoint")
	proto.RegisterType((*LightningAddress)(nil), "lnrpc.LightningAddress")
	proto.RegisterType((*EstimateFeeRequest)(nil), "lnrpc.EstimateFeeRequest")
	proto.RegisterMapType((map[string]int64)(nil), "lnrpc.EstimateFeeRequest.AddrToAmountEntry")
	proto.RegisterType((*EstimateFeeResponse)(nil), "lnrpc.EstimateFeeResponse")
	proto.RegisterType((*SendManyRequest)(nil), "lnrpc.SendManyRequest")
	proto.RegisterMapType((map[string]int64)(nil), "lnrpc.SendManyRequest.AddrToAmountEntry")
	proto.RegisterType((*SendManyResponse)(nil), "lnrpc.SendManyResponse")
	proto.RegisterType((*SendCoinsRequest)(nil), "lnrpc.SendCoinsRequest")
	proto.RegisterType((*SendCoinsResponse)(nil), "lnrpc.SendCoinsResponse")
	proto.RegisterType((*ListUnspentRequest)(nil), "lnrpc.ListUnspentRequest")
	proto.RegisterType((*ListUnspentResponse)(nil), "lnrpc.ListUnspentResponse")
	proto.RegisterType((*NewAddressRequest)(nil), "lnrpc.NewAddressRequest")
	proto.RegisterType((*NewAddressResponse)(nil), "lnrpc.NewAddressResponse")
	proto.RegisterType((*SignMessageRequest)(nil), "lnrpc.SignMessageRequest")
	proto.RegisterType((*SignMessageResponse)(nil), "lnrpc.SignMessageResponse")
	proto.RegisterType((*ConnectPeerRequest)(nil), "lnrpc.ConnectPeerRequest")
	proto.RegisterType((*ConnectPeerResponse)(nil), "lnrpc.ConnectPeerResponse")
	proto.RegisterType((*DisconnectPeerRequest)(nil), "lnrpc.DisconnectPeerRequest")
	proto.RegisterType((*DisconnectPeerResponse)(nil), "lnrpc.DisconnectPeerResponse")
	proto.RegisterType((*HTLC)(nil), "lnrpc.HTLC")
	proto.RegisterType((*ChannelConstraints)(nil), "lnrpc.ChannelConstraints")
	proto.RegisterType((*Channel)(nil), "lnrpc.Channel")
	proto.RegisterType((*ListChannelsRequest)(nil), "lnrpc.ListChannelsRequest")
	proto.RegisterType((*ListChannelsResponse)(nil), "lnrpc.ListChannelsResponse")
	proto.RegisterType((*ChannelCloseSummary)(nil), "lnrpc.ChannelCloseSummary")
	proto.RegisterType((*Resolution)(nil), "lnrpc.Resolution")
	proto.RegisterType((*ClosedChannelsRequest)(nil), "lnrpc.ClosedChannelsRequest")
	proto.RegisterType((*ClosedChannelsResponse)(nil), "lnrpc.ClosedChannelsResponse")
	proto.RegisterType((*Peer)(nil), "lnrpc.Peer")
	proto.RegisterMapType((map[uint32]*Feature)(nil), "lnrpc.Peer.FeaturesEntry")
	proto.RegisterType((*TimestampedError)(nil), "lnrpc.TimestampedError")
	proto.RegisterType((*ListPeersRequest)(nil), "lnrpc.ListPeersRequest")
	proto.RegisterType((*ListPeersResponse)(nil), "lnrpc.ListPeersResponse")
	proto.RegisterType((*PeerEventSubscription)(nil), "lnrpc.PeerEventSubscription")
	proto.RegisterType((*PeerEvent)(nil), "lnrpc.PeerEvent")
	proto.RegisterType((*GetInfoRequest)(nil), "lnrpc.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "lnrpc.GetInfoResponse")
	proto.RegisterMapType((map[uint32]*Feature)(nil), "lnrpc.GetInfoResponse.FeaturesEntry")
	proto.RegisterType((*GetRecoveryInfoRequest)(nil), "lnrpc.GetRecoveryInfoRequest")
	proto.RegisterType((*GetRecoveryInfoResponse)(nil), "lnrpc.GetRecoveryInfoResponse")
	proto.RegisterType((*Chain)(nil), "lnrpc.Chain")
	proto.RegisterType((*ConfirmationUpdate)(nil), "lnrpc.ConfirmationUpdate")
	proto.RegisterType((*ChannelOpenUpdate)(nil), "lnrpc.ChannelOpenUpdate")
	proto.RegisterType((*ChannelCloseUpdate)(nil), "lnrpc.ChannelCloseUpdate")
	proto.RegisterType((*CloseChannelRequest)(nil), "lnrpc.CloseChannelRequest")
	proto.RegisterType((*CloseStatusUpdate)(nil), "lnrpc.CloseStatusUpdate")
	proto.RegisterType((*PendingUpdate)(nil), "lnrpc.PendingUpdate")
	proto.RegisterType((*ReadyForPsbtFunding)(nil), "lnrpc.ReadyForPsbtFunding")
	proto.RegisterType((*OpenChannelRequest)(nil), "lnrpc.OpenChannelRequest")
	proto.RegisterType((*OpenStatusUpdate)(nil), "lnrpc.OpenStatusUpdate")
	proto.RegisterType((*KeyLocator)(nil), "lnrpc.KeyLocator")
	proto.RegisterType((*KeyDescriptor)(nil), "lnrpc.KeyDescriptor")
	proto.RegisterType((*ChanPointShim)(nil), "lnrpc.ChanPointShim")
	proto.RegisterType((*PsbtShim)(nil), "lnrpc.PsbtShim")
	proto.RegisterType((*FundingShim)(nil), "lnrpc.FundingShim")
	proto.RegisterType((*FundingShimCancel)(nil), "lnrpc.FundingShimCancel")
	proto.RegisterType((*FundingPsbtVerify)(nil), "lnrpc.FundingPsbtVerify")
	proto.RegisterType((*FundingPsbtFinalize)(nil), "lnrpc.FundingPsbtFinalize")
	proto.RegisterType((*FundingTransitionMsg)(nil), "lnrpc.FundingTransitionMsg")
	proto.RegisterType((*FundingStateStepResp)(nil), "lnrpc.FundingStateStepResp")
	proto.RegisterType((*PendingHTLC)(nil), "lnrpc.PendingHTLC")
	proto.RegisterType((*PendingChannelsRequest)(nil), "lnrpc.PendingChannelsRequest")
	proto.RegisterType((*PendingChannelsResponse)(nil), "lnrpc.PendingChannelsResponse")
	proto.RegisterType((*PendingChannelsResponse_PendingChannel)(nil), "lnrpc.PendingChannelsResponse.PendingChannel")
	proto.RegisterType((*PendingChannelsResponse_PendingOpenChannel)(nil), "lnrpc.PendingChannelsResponse.PendingOpenChannel")
	proto.RegisterType((*PendingChannelsResponse_WaitingCloseChannel)(nil), "lnrpc.PendingChannelsResponse.WaitingCloseChannel")
	proto.RegisterType((*PendingChannelsResponse_Commitments)(nil), "lnrpc.PendingChannelsResponse.Commitments")
	proto.RegisterType((*PendingChannelsResponse_ClosedChannel)(nil), "lnrpc.PendingChannelsResponse.ClosedChannel")
	proto.RegisterType((*PendingChannelsResponse_ForceClosedChannel)(nil), "lnrpc.PendingChannelsResponse.ForceClosedChannel")
	proto.RegisterType((*ChannelEventSubscription)(nil), "lnrpc.ChannelEventSubscription")
	proto.RegisterType((*ChannelEventUpdate)(nil), "lnrpc.ChannelEventUpdate")
	proto.RegisterType((*WalletBalanceRequest)(nil), "lnrpc.WalletBalanceRequest")
	proto.RegisterType((*WalletBalanceResponse)(nil), "lnrpc.WalletBalanceResponse")
	proto.RegisterType((*GetAddressBalancesRequest)(nil), "lnrpc.GetAddressBalancesRequest")
	proto.RegisterType((*GetAddressBalancesResponseAddr)(nil), "lnrpc.GetAddressBalancesResponseAddr")
	proto.RegisterType((*GetAddressBalancesResponse)(nil), "lnrpc.GetAddressBalancesResponse")
	proto.RegisterType((*Amount)(nil), "lnrpc.Amount")
	proto.RegisterType((*ChannelBalanceRequest)(nil), "lnrpc.ChannelBalanceRequest")
	proto.RegisterType((*ChannelBalanceResponse)(nil), "lnrpc.ChannelBalanceResponse")
	proto.RegisterType((*QueryRoutesRequest)(nil), "lnrpc.QueryRoutesRequest")
	proto.RegisterMapType((map[uint64][]byte)(nil), "lnrpc.QueryRoutesRequest.DestCustomRecordsEntry")
	proto.RegisterType((*NodePair)(nil), "lnrpc.NodePair")
	proto.RegisterType((*EdgeLocator)(nil), "lnrpc.EdgeLocator")
	proto.RegisterType((*QueryRoutesResponse)(nil), "lnrpc.QueryRoutesResponse")
	proto.RegisterType((*Hop)(nil), "lnrpc.Hop")
	proto.RegisterMapType((map[uint64][]byte)(nil), "lnrpc.Hop.CustomRecordsEntry")
	proto.RegisterType((*MPPRecord)(nil), "lnrpc.MPPRecord")
	proto.RegisterType((*Route)(nil), "lnrpc.Route")
	proto.RegisterType((*NodeInfoRequest)(nil), "lnrpc.NodeInfoRequest")
	proto.RegisterType((*NodeInfo)(nil), "lnrpc.NodeInfo")
	proto.RegisterType((*LightningNode)(nil), "lnrpc.LightningNode")
	proto.RegisterMapType((map[uint32]*Feature)(nil), "lnrpc.LightningNode.FeaturesEntry")
	proto.RegisterType((*NodeAddress)(nil), "lnrpc.NodeAddress")
	proto.RegisterType((*RoutingPolicy)(nil), "lnrpc.RoutingPolicy")
	proto.RegisterType((*ChannelEdge)(nil), "lnrpc.ChannelEdge")
	proto.RegisterType((*ChannelGraphRequest)(nil), "lnrpc.ChannelGraphRequest")
	proto.RegisterType((*ChannelGraph)(nil), "lnrpc.ChannelGraph")
	proto.RegisterType((*NodeMetricsRequest)(nil), "lnrpc.NodeMetricsRequest")
	proto.RegisterType((*NodeMetricsResponse)(nil), "lnrpc.NodeMetricsResponse")
	proto.RegisterMapType((map[string]*FloatMetric)(nil), "lnrpc.NodeMetricsResponse.BetweennessCentralityEntry")
	proto.RegisterType((*FloatMetric)(nil), "lnrpc.FloatMetric")
	proto.RegisterType((*ChanInfoRequest)(nil), "lnrpc.ChanInfoRequest")
	proto.RegisterType((*NetworkInfoRequest)(nil), "lnrpc.NetworkInfoRequest")
	proto.RegisterType((*NetworkInfo)(nil), "lnrpc.NetworkInfo")
	proto.RegisterType((*StopRequest)(nil), "lnrpc.StopRequest")
	proto.RegisterType((*StopResponse)(nil), "lnrpc.StopResponse")
	proto.RegisterType((*GraphTopologySubscription)(nil), "lnrpc.GraphTopologySubscription")
	proto.RegisterType((*GraphTopologyUpdate)(nil), "lnrpc.GraphTopologyUpdate")
	proto.RegisterType((*NodeUpdate)(nil), "lnrpc.NodeUpdate")
	proto.RegisterType((*ChannelEdgeUpdate)(nil), "lnrpc.ChannelEdgeUpdate")
	proto.RegisterType((*ClosedChannelUpdate)(nil), "lnrpc.ClosedChannelUpdate")
	proto.RegisterType((*HopHint)(nil), "lnrpc.HopHint")
	proto.RegisterType((*RouteHint)(nil), "lnrpc.RouteHint")
	proto.RegisterType((*Invoice)(nil), "lnrpc.Invoice")
	proto.RegisterMapType((map[uint32]*Feature)(nil), "lnrpc.Invoice.FeaturesEntry")
	proto.RegisterType((*InvoiceHTLC)(nil), "lnrpc.InvoiceHTLC")
	proto.RegisterMapType((map[uint64][]byte)(nil), "lnrpc.InvoiceHTLC.CustomRecordsEntry")
	proto.RegisterType((*AddInvoiceResponse)(nil), "lnrpc.AddInvoiceResponse")
	proto.RegisterType((*PaymentHash)(nil), "lnrpc.PaymentHash")
	proto.RegisterType((*ListInvoiceRequest)(nil), "lnrpc.ListInvoiceRequest")
	proto.RegisterType((*ListInvoiceResponse)(nil), "lnrpc.ListInvoiceResponse")
	proto.RegisterType((*InvoiceSubscription)(nil), "lnrpc.InvoiceSubscription")
	proto.RegisterType((*Payment)(nil), "lnrpc.Payment")
	proto.RegisterType((*HTLCAttempt)(nil), "lnrpc.HTLCAttempt")
	proto.RegisterType((*ListPaymentsRequest)(nil), "lnrpc.ListPaymentsRequest")
	proto.RegisterType((*ListPaymentsResponse)(nil), "lnrpc.ListPaymentsResponse")
	proto.RegisterType((*DeleteAllPaymentsRequest)(nil), "lnrpc.DeleteAllPaymentsRequest")
	proto.RegisterType((*DeleteAllPaymentsResponse)(nil), "lnrpc.DeleteAllPaymentsResponse")
	proto.RegisterType((*AbandonChannelRequest)(nil), "lnrpc.AbandonChannelRequest")
	proto.RegisterType((*AbandonChannelResponse)(nil), "lnrpc.AbandonChannelResponse")
	proto.RegisterType((*DebugLevelRequest)(nil), "lnrpc.DebugLevelRequest")
	proto.RegisterType((*DebugLevelResponse)(nil), "lnrpc.DebugLevelResponse")
	proto.RegisterType((*PayReqString)(nil), "lnrpc.PayReqString")
	proto.RegisterType((*PayReq)(nil), "lnrpc.PayReq")
	proto.RegisterMapType((map[uint32]*Feature)(nil), "lnrpc.PayReq.FeaturesEntry")
	proto.RegisterType((*Feature)(nil), "lnrpc.Feature")
	proto.RegisterType((*FeeReportRequest)(nil), "lnrpc.FeeReportRequest")
	proto.RegisterType((*ChannelFeeReport)(nil), "lnrpc.ChannelFeeReport")
	proto.RegisterType((*FeeReportResponse)(nil), "lnrpc.FeeReportResponse")
	proto.RegisterType((*PolicyUpdateRequest)(nil), "lnrpc.PolicyUpdateRequest")
	proto.RegisterType((*PolicyUpdateResponse)(nil), "lnrpc.PolicyUpdateResponse")
	proto.RegisterType((*ForwardingHistoryRequest)(nil), "lnrpc.ForwardingHistoryRequest")
	proto.RegisterType((*ForwardingEvent)(nil), "lnrpc.ForwardingEvent")
	proto.RegisterType((*ForwardingHistoryResponse)(nil), "lnrpc.ForwardingHistoryResponse")
	proto.RegisterType((*ExportChannelBackupRequest)(nil), "lnrpc.ExportChannelBackupRequest")
	proto.RegisterType((*ChannelBackup)(nil), "lnrpc.ChannelBackup")
	proto.RegisterType((*MultiChanBackup)(nil), "lnrpc.MultiChanBackup")
	proto.RegisterType((*ChanBackupExportRequest)(nil), "lnrpc.ChanBackupExportRequest")
	proto.RegisterType((*ChanBackupSnapshot)(nil), "lnrpc.ChanBackupSnapshot")
	proto.RegisterType((*ChannelBackups)(nil), "lnrpc.ChannelBackups")
	proto.RegisterType((*RestoreChanBackupRequest)(nil), "lnrpc.RestoreChanBackupRequest")
	proto.RegisterType((*RestoreBackupResponse)(nil), "lnrpc.RestoreBackupResponse")
	proto.RegisterType((*ChannelBackupSubscription)(nil), "lnrpc.ChannelBackupSubscription")
	proto.RegisterType((*VerifyChanBackupResponse)(nil), "lnrpc.VerifyChanBackupResponse")
	proto.RegisterType((*Failure)(nil), "lnrpc.Failure")
	proto.RegisterType((*ChannelUpdate)(nil), "lnrpc.ChannelUpdate")
	proto.RegisterType((*Op)(nil), "lnrpc.Op")
	proto.RegisterType((*ReSyncChainRequest)(nil), "lnrpc.ReSyncChainRequest")
	proto.RegisterType((*ReSyncChainResponse)(nil), "lnrpc.ReSyncChainResponse")
	proto.RegisterType((*StopReSyncRequest)(nil), "lnrpc.StopReSyncRequest")
	proto.RegisterType((*StopReSyncResponse)(nil), "lnrpc.StopReSyncResponse")
	proto.RegisterType((*GetWalletSeedRequest)(nil), "lnrpc.GetWalletSeedRequest")
	proto.RegisterType((*GetWalletSeedResponse)(nil), "lnrpc.GetWalletSeedResponse")
	proto.RegisterType((*ChangeSeedPassphraseRequest)(nil), "lnrpc.ChangeSeedPassphraseRequest")
	proto.RegisterType((*ChangeSeedPassphraseResponse)(nil), "lnrpc.ChangeSeedPassphraseResponse")
	proto.RegisterType((*GetSecretRequest)(nil), "lnrpc.GetSecretRequest")
	proto.RegisterType((*GetSecretResponse)(nil), "lnrpc.GetSecretResponse")
	proto.RegisterType((*ImportPrivKeyRequest)(nil), "lnrpc.ImportPrivKeyRequest")
	proto.RegisterType((*ImportPrivKeyResponse)(nil), "lnrpc.ImportPrivKeyResponse")
	proto.RegisterType((*ListLockUnspentRequest)(nil), "lnrpc.ListLockUnspentRequest")
	proto.RegisterType((*ListLockUnspentResponse)(nil), "lnrpc.ListLockUnspentResponse")
	proto.RegisterType((*LockUnspentTransaction)(nil), "lnrpc.LockUnspentTransaction")
	proto.RegisterType((*LockUnspentRequest)(nil), "lnrpc.LockUnspentRequest")
	proto.RegisterType((*LockUnspentResponse)(nil), "lnrpc.LockUnspentResponse")
	proto.RegisterType((*CreateTransactionRequest)(nil), "lnrpc.CreateTransactionRequest")
	proto.RegisterType((*CreateTransactionResponse)(nil), "lnrpc.CreateTransactionResponse")
	proto.RegisterType((*DumpPrivKeyRequest)(nil), "lnrpc.DumpPrivKeyRequest")
	proto.RegisterType((*DumpPrivKeyResponse)(nil), "lnrpc.DumpPrivKeyResponse")
	proto.RegisterType((*GetNewAddressRequest)(nil), "lnrpc.GetNewAddressRequest")
	proto.RegisterType((*GetNewAddressResponse)(nil), "lnrpc.GetNewAddressResponse")
	proto.RegisterType((*GetTransactionRequest)(nil), "lnrpc.GetTransactionRequest")
	proto.RegisterType((*GetTransactionDetailsResult)(nil), "lnrpc.GetTransactionDetailsResult")
	proto.RegisterType((*TransactionResult)(nil), "lnrpc.TransactionResult")
	proto.RegisterType((*GetTransactionResponse)(nil), "lnrpc.GetTransactionResponse")
	proto.RegisterType((*GetNetworkStewardVoteRequest)(nil), "lnrpc.GetNetworkStewardVoteRequest")
	proto.RegisterType((*GetNetworkStewardVoteResponse)(nil), "lnrpc.GetNetworkStewardVoteResponse")
	proto.RegisterType((*SetNetworkStewardVoteRequest)(nil), "lnrpc.SetNetworkStewardVoteRequest")
	proto.RegisterType((*SetNetworkStewardVoteResponse)(nil), "lnrpc.SetNetworkStewardVoteResponse")
	proto.RegisterType((*BcastTransactionRequest)(nil), "lnrpc.BcastTransactionRequest")
	proto.RegisterType((*BcastTransactionResponse)(nil), "lnrpc.BcastTransactionResponse")
	proto.RegisterType((*SendFromRequest)(nil), "lnrpc.SendFromRequest")
	proto.RegisterType((*SendFromResponse)(nil), "lnrpc.SendFromResponse")
	proto.RegisterType((*DecodeRawTransactionRequest)(nil), "lnrpc.DecodeRawTransactionRequest")
	proto.RegisterType((*ScriptSig)(nil), "lnrpc.ScriptSig")
	proto.RegisterType((*PrevOut)(nil), "lnrpc.PrevOut")
	proto.RegisterType((*VinPrevOut)(nil), "lnrpc.VinPrevOut")
	proto.RegisterType((*Vote)(nil), "lnrpc.Vote")
	proto.RegisterType((*Vout)(nil), "lnrpc.Vout")
	proto.RegisterType((*DecodeRawTransactionResponse)(nil), "lnrpc.DecodeRawTransactionResponse")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 13822 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0xbd, 0x69, 0x8c, 0x1c, 0x49,
	0x76, 0x18, 0xcc, 0xba, 0xba, 0xaa, 0x5e, 0x1d, 0x5d, 0x1d, 0x7d, 0x15, 0x9b, 0xe4, 0x90, 0x93,
	0xc3, 0x9d, 0xe1, 0x70, 0x76, 0x7a, 0x38, 0xdc, 0xe1, 0xcc, 0xce, 0x8e, 0xf6, 0xa8, 0xee, 0xae,
	0x66, 0xd7, 0xb0, 0xaf, 0xcd, 0xaa, 0xe6, 0x2c, 0x85, 0x95, 0x52, 0xd9, 0x55, 0xd1, 0xdd, 0xf9,
	0xb1, 0x2a, 0xb3, 0x36, 0x33, 0xab, 0x8f, 0xfd, 0x60, 0x40, 0x3f, 0x64, 0x59, 0x96, 0x05, 0x03,
	0x06, 0x2c, 0x03, 0x3e, 0xe4, 0x43, 0x86, 0xed, 0x7f, 0x82, 0x01, 0xc9, 0xfe, 0xe5, 0x7f, 0x32,
	0x6c, 0xc0, 0xb0, 0x65, 0x18, 0x96, 0xe1, 0x03, 0x86, 0x7c, 0x00, 0x96, 0x7e, 0x58, 0x10, 0x04,
	0xe8, 0xaf, 0x0d, 0x18, 0xf1, 0xe2, 0xc8, 0xc8, 0xac, 0xac, 0x26, 0x67, 0xb5, 0xda, 0x1f, 0x64,
	0x57, 0xbe, 0x78, 0x71, 0xbd, 0x88, 0x78, 0xf1, 0xde, 0x8b, 0x17, 0x2f, 0xa0, 0xec, 0x8f, 0xfb,
	0xeb, 0x63, 0xdf, 0x0b, 0x3d, 0x52, 0x18, 0xba, 0xfe, 0xb8, 0x6f, 0x7c, 0x06, 0x65, 0x93, 0x06,
	0x61, 0xdb, 0xf7, 0x3d, 0x9f, 0x34, 0xa1, 0x38, 0xa2, 0x41, 0x60, 0x9f, 0xd2, 0x66, 0xf6, 0x5e,
	0xe6, 0x41, 0xd9, 0x94, 0x9f, 0x64, 0x09, 0x0a, 0x41, 0x68, 0xf7, 0x5f, 0x36, 0x73, 0xf7, 0x72,
	0x0f, 0xca, 0x26, 0xff, 0x30, 0x7e, 0x3f, 0x03, 0xf9, 0xa3, 0xf0, 0xd2, 0x23, 0x4f, 0xa0, 0x6a,
	0x0f, 0x06, 0x3e, 0x0d, 0x02, 0x2b, 0xbc, 0x1a, 0xd3, 0x66, 0xe6, 0x5e, 0xe6, 0x41, 0xfd, 0x31,
	0x59, 0xc7, 0x3a, 0xd6, 0x5b, 0x3c, 0xa9, 0x77, 0x35, 0xa6, 0x66, 0xc5, 0x8e, 0x3e, 0x58, 0x7d,
	0xe2, 0x53, 0xd6, 0x27, 0x3e, 0xc9, 0x1d, 0x00, 0x7b, 0xe4, 0x4d, 0xdc, 0xd0, 0x0a, 0xec, 0xb0,
	0x99, 0xbb, 0x97, 0x79, 0x90, 0x33, 0xcb, 0x1c, 0xd2, 0xb5, 0x43, 0x72, 0x0b, 0xca, 0xe3, 0x97,
	0x56, 0xd0, 0xf7, 0x9d, 0x71, 0xd8, 0xcc, 0x63, 0xd6, 0xd2, 0xf8, 0x65, 0x17, 0xbf, 0xc9, 0x7b,
	0x50, 0xf2, 0x26, 0xe1, 0xd8, 0x73, 0xdc, 0xb0, 0x59, 0xb8, 0x97, 0x79, 0x50, 0x79, 0x3c, 0x2f,
	0x1a, 0x72, 0x30, 0x09, 0x0f, 0x19, 0xd8, 0x54, 0x08, 0xe4, 0x3e, 0xd4, 0xfa, 0x9e, 0x7b, 0xe2,
	0xf8, 0x23, 0x3b, 0x74, 0x3c, 0x37, 0x68, 0xce, 0x61, 0x5d, 0x71, 0xa0, 0xf1, 0x2f, 0xb2, 0x50,
	0xe9, 0xf9, 0xb6, 0x1b, 0xd8, 0x7d, 0x06, 0x20, 0xab, 0x50, 0x0c, 0x2f, 0xad, 0x33, 0x3b, 0x38,
	0xc3, 0xae, 0x96, 0xcd, 0xb9, 0xf0, 0x72, 0xc7, 0x0e, 0xce, 0xc8, 0x0a, 0xcc, 0xf1, 0x56, 0x62,
	0x87, 0x72, 0xa6, 0xf8, 0x22, 0xef, 0xc1, 0x82, 0x3b, 0x19, 0x59, 0xf1, 0xaa, 0x58, 0xb7, 0x0a,
	0x66, 0xc3, 0x9d, 0x8c, 0x36, 0x75, 0x38, 0xeb, 0xfc, 0xf1, 0xd0, 0xeb, 0xbf, 0xe4, 0x15, 0xf0,
	0xee, 0x95, 0x11, 0x82, 0x75, 0xbc, 0x09, 0x55, 0x91, 0x4c, 0x9d, 0xd3, 0x33, 0xde, 0xc7, 0x82,
	0x59, 0xe1, 0x08, 0x08, 0x62, 0x25, 0x84, 0xce, 0x88, 0x5a, 0x41, 0x68, 0x8f, 0xc6, 0xa2, 0x4b,
	0x65, 0x06, 0xe9, 0x32, 0x00, 0x26, 0x7b, 0xa1, 0x3d, 0xb4, 0x4e, 0x28, 0x0d, 0x9a, 0x45, 0x91,
	0xcc, 0x20, 0xdb, 0x94, 0x06, 0xe4, 0x2b, 0x50, 0x1f, 0xd0, 0x20, 0xb4, 0xc4, 0x60, 0xd0, 0xa0,
	0x59, 0xc2, 0x51, 0xaf, 0x31, 0x68, 0x4b, 0x02, 0xc9, 0x6d, 0x00, 0xdf, 0xbe, 0xb0, 0x18, 0x21,
	0xe8, 0x65, 0xb3, 0x7c, 0x2f, 0xf3, 0xa0, 0x6a, 0x96, 0x7c, 0xfb, 0xa2, 0x77, 0xb9, 0x43, 0x2f,
	0xd9, 0x8c, 0x19, 0xda, 0xc7, 0x74, 0xd8, 0x04, 0x6c, 0x3f, 0xff, 0x30, 0x7e, 0x27, 0x03, 0x2b,
	0x4f, 0x69, 0xa8, 0xd1, 0x32, 0x30, 0xe9, 0x0f, 0x26, 0x34, 0x08, 0x59, 0xb7, 0x82, 0xd0, 0xf6,
	0x43, 0xd9, 0xad, 0x0c, 0xef, 0x16, 0xc2, 0xa2, 0x6e, 0x51, 0x77, 0x20, 0x11, 0xb2, 0x88, 0x50,
	0xa6, 0xee, 0x40, 0xeb, 0xf5, 0xa5, 0x1b, 0x58, 0x43, 0x67, 0xe4, 0x84, 0x82, 0xba, 0x65, 0x06,
	0xd9, 0x65, 0x00, 0x36, 0x69, 0x30, 0x39, 0x78, 0xe9, 0x8c, 0x91, 0xaa, 0x05, 0xb3, 0xc4, 0x00,
	0xdd, 0x97, 0xce, 0x98, 0xac, 0x41, 0xa9, 0xef, 0x39, 0xee, 0xb1, 0x1d, 0x50, 0x41, 0x50, 0xf5,
	0xcd, 0xd2, 0x7c, 0x7a, 0x4e, 0xfd, 0x80, 0x0e, 0x90, 0x96, 0x25, 0x53, 0x7d, 0x1b, 0xbb, 0x40,
	0xb4, 0xce, 0x6c, 0xd1, 0xd0, 0x76, 0x86, 0x01, 0xf9, 0x18, 0xaa, 0xa1, 0xd6, 0xc5, 0x66, 0xe6,
	0x5e, 0xee, 0x41, 0x45, 0xad, 0x07, 0x2d, 0x83, 0x19, 0xc3, 0x33, 0xce, 0xa0, 0xb4, 0x4d, 0x29,
	0x6f, 0xee, 0x0a, 0x14, 0x4e, 0x9c, 0x4b, 0x3a, 0x40, 0x42, 0xe4, 0x76, 0x6e, 0x98, 0xfc, 0x93,
	0xdc, 0x05, 0xc0, 0x1f, 0xd6, 0x48, 0x2d, 0x8d, 0x9d, 0x1b, 0x66, 0x19, 0x61, 0x7b, 0x81, 0x1d,
	0x92, 0x35, 0x28, 0x8e, 0xa9, 0xdf, 0xa7, 0x72, 0x12, 0xee, 0xdc, 0x30, 0x25, 0x60, 0xa3, 0x08,
	0x05, 0xa4, 0x8e, 0xf1, 0x47, 0x79, 0xa8, 0x74, 0xa9, 0x3b, 0x90, 0xd4, 0x27, 0x90, 0x67, 0xa3,
	0x8b, 0x95, 0x55, 0x4d, 0xfc, 0x4d, 0x1a, 0x90, 0xb3, 0x47, 0x72, 0xf5, 0xb1, 0x9f, 0xe4, 0x26,
	0x94, 0xec, 0x51, 0xc8, 0x6b, 0xae, 0x22, 0xb8, 0x68, 0x8f, 0x42, 0xac, 0xf5, 0x4d, 0xa8, 0x8e,
	0xed, 0xab, 0x11, 0x75, 0xc3, 0x68, 0xda, 0x56, 0xcd, 0x8a, 0x80, 0xe1, 0xc4, 0x7d, 0x07, 0xe6,
	0x25, 0x8a, 0xcf, 0xab, 0x45, 0x72, 0x96, 0xcd, 0xba, 0x00, 0xcb, 0xc6, 0x3c, 0x80, 0xc6, 0x89,
	0xe3, 0xda, 0x43, 0xab, 0x3f, 0x0c, 0xcf, 0xad, 0x01, 0x1d, 0x86, 0x36, 0xce, 0xd2, 0x82, 0x59,
	0x47, 0xf8, 0xe6, 0x30, 0x3c, 0xdf, 0x62, 0x50, 0xf2, 0x55, 0x28, 0x9f, 0x50, 0x2a, 0x46, 0xbc,
	0x14, 0x5b, 0xec, 0x92, 0x90, 0x66, 0xe9, 0x44, 0x92, 0xf4, 0xab, 0xd0, 0xf0, 0x26, 0xe1, 0xa9,
	0xe7, 0xb8, 0xa7, 0x56, 0xff, 0xcc, 0x76, 0x2d, 0x67, 0x80, 0xf3, 0x36, 0xbf, 0x91, 0x7d, 0x94,
	0x31, 0xeb, 0x32, 0x6d, 0xf3, 0xcc, 0x76, 0x3b, 0x03, 0xf2, 0x36, 0xcc, 0x0f, 0xed, 0x20, 0xb4,
	0xce, 0xbc, 0xb1, 0x35, 0x9e, 0x1c, 0xbf, 0xa4, 0x57, 0xcd, 0x1a, 0x76, 0xaa, 0xc6, 0xc0, 0x3b,
	0xde, 0xf8, 0x10, 0x81, 0x6c, 0xda, 0x61, 0x3b, 0x79, 0x23, 0xd8, 0x74, 0xaf, 0x99, 0x65, 0x06,
	0xe1, 0x95, 0xbe, 0x80, 0x45, 0x5c, 0x4d, 0xfd, 0x49, 0x10, 0x7a, 0x23, 0xcb, 0xa7, 0x7d, 0xcf,
	0x1f, 0x04, 0xcd, 0x0a, 0x4e, 0x89, 0x77, 0x45, 0x63, 0xb5, 0xa1, 0x58, 0xdf, 0xa2, 0x41, 0xb8,
	0x89, 0xc8, 0x26, 0xc7, 0x6d, 0xbb, 0xa1, 0x7f, 0x65, 0x2e, 0x0c, 0x92, 0x70, 0xf2, 0x55, 0x20,
	0xf6, 0x70, 0xe8, 0x5d, 0x58, 0x01, 0x1d, 0x9e, 0x58, 0x82, 0x88, 0xcd, 0x3a, 0x4e, 0xd1, 0x06,
	0xa6, 0x74, 0xe9, 0xf0, 0xe4, 0x90, 0xc3, 0xc9, 0xc7, 0x80, 0x0b, 0xd8, 0x3a, 0xa1, 0x76, 0x38,
	0xf1, 0x69, 0xd0, 0x9c, 0xbf, 0x97, 0x7b, 0x50, 0x7f, 0xbc, 0xa0, 0xe8, 0x85, 0xe0, 0x0d, 0x27,
	0x34, 0xab, 0x0c, 0x4f, 0x7c, 0x07, 0x6b, 0x5b, 0xb0, 0x92, 0xde, 0x24, 0x36, 0x41, 0x18, 0x55,
	0xd8, 0x9c, 0xc9, 0x9b, 0xec, 0x27, 0x5b, 0xf5, 0xe7, 0xf6, 0x70, 0xc2, 0xf7, 0x8f, 0xaa, 0xc9,
	0x3f, 0xbe, 0x91, 0xfd, 0x7a, 0xc6, 0xf8, 0xad, 0x0c, 0x54, 0x79, 0x2f, 0x83, 0xb1, 0xe7, 0x06,
	0x94, 0xbc, 0x05, 0x35, 0x39, 0x1b, 0x28, 0xdb, 0x7d, 0x04, 0x27, 0x95, 0xb3, 0x88, 0xef, 0x48,
	0xef, 0x42, 0x43, 0x22, 0x8d, 0x7d, 0xea, 0x8c, 0xe4, 0xd6, 0x54, 0x35, 0xe5, 0x54, 0x3a, 0x14,
	0x60, 0xf2, 0x61, 0x54, 0x9e, 0xef, 0x4d, 0x42, 0x8a, 0xf3, 0xb6, 0xf2, 0xb8, 0x2a, 0xba, 0x67,
	0x32, 0x98, 0x2a, 0x1d, 0xbf, 0x5e, 0x63, 0xce, 0x1a, 0xa7, 0x40, 0x58, 0xab, 0x7b, 0x1e, 0xcf,
	0x1f, 0xf1, 0xaa, 0x58, 0xc6, 0xcc, 0xf4, 0x64, 0x37, 0xa0, 0xc0, 0x9b, 0x91, 0x4f, 0x69, 0x06,
	0x4f, 0xfa, 0x3c, 0x5f, 0xca, 0x36, 0x72, 0x9f, 0xe7, 0x4b, 0xb9, 0x46, 0xde, 0xf8, 0x2f, 0x39,
	0x58, 0x62, 0x13, 0xcf, 0xa5, 0xc3, 0x56, 0xbf, 0x4f, 0xc7, 0x6a, 0x31, 0xdc, 0x85, 0x8a, 0xeb,
	0x0d, 0xa8, 0x9c, 0x82, 0xbc, 0x2a, 0x60, 0x20, 0x6d, 0xfe, 0x9d, 0xd9, 0x8e, 0xcb, 0x9b, 0xc2,
	0xa9, 0x53, 0x46, 0x08, 0x36, 0xe4, 0x6d, 0x98, 0x1f, 0x53, 0x77, 0xa0, 0xcf, 0xf9, 0x1c, 0x9f,
	0xc6, 0x02, 0x2c, 0xa6, 0xfb, 0x5d, 0xa8, 0x9c, 0x4c, 0x38, 0x1e, 0x5b, 0xf5, 0x79, 0x1c, 0x54,
	0x10, 0xa0, 0x16, 0x5f, 0xfc, 0xe3, 0x49, 0x70, 0x86, 0xa9, 0x05, 0x4c, 0x2d, 0xb2, 0x6f, 0x96,
	0x74, 0x07, 0x60, 0x30, 0x09, 0x42, 0xb1, 0x04, 0xe6, 0x30, 0xb1, 0xcc, 0x20, 0x7c, 0x09, 0xbc,
	0x0f, 0x8b, 0x23, 0xfb, 0xd2, 0xc2, 0xc9, 0x60, 0x39, 0xae, 0x75, 0x32, 0x44, 0x06, 0x5e, 0x44,
	0xbc, 0xc6, 0xc8, 0xbe, 0x7c, 0xce, 0x52, 0x3a, 0xee, 0x36, 0xc2, 0x19, 0x9f, 0xe8, 0x73, 0x4a,
	0x58, 0x3e, 0x0d, 0xa8, 0x7f, 0x4e, 0x71, 0x69, 0xe7, 0xcd, 0xba, 0x00, 0x9b, 0x1c, 0xca, 0x5a,
	0x34, 0x62, 0xfd, 0x0e, 0x87, 0x7d, 0xbe, 0x8e, 0xcd, 0xe2, 0xc8, 0x71, 0x77, 0xc2, 0x61, 0x9f,
	0x6d, 0x4e, 0x8c, 0x31, 0x8c, 0xa9, 0x6f, 0xbd, 0xbc, 0xc0, 0x45, 0x99, 0x47, 0x46, 0x70, 0x48,
	0xfd, 0x67, 0x17, 0x6c, 0x2b, 0xe8, 0x07, 0xc8, 0x59, 0xec, 0xab, 0x66, 0x05, 0x57, 0x6c, 0xa9,
	0x1f, 0x30, 0x9e, 0x62, 0x5f, 0xb1, 0x55, 0xc5, 0x5a, 0x6b, 0xe3, 0x28, 0xd0, 0x01, 0x16, 0x1f,
	0x20, 0xbb, 0xab, 0x61, 0x63, 0x5b, 0x22, 0x81, 0xd5, 0x13, 0xb0, 0x69, 0x2c, 0x1b, 0x7b, 0x32,
	0xb4, 0x4f, 0x03, 0xe4, 0x11, 0x35, 0xb3, 0x2a, 0x80, 0xdb, 0x0c, 0x66, 0xfc, 0x49, 0x16, 0x96,
	0x13, 0x83, 0x2b, 0x56, 0x01, 0x13, 0x18, 0x10, 0x82, 0x03, 0x5b, 0x32, 0xc5, 0x57, 0xda, 0xa8,
	0x65, 0xd3, 0x46, 0x6d, 0x09, 0x0a, 0x7c, 0xf5, 0xe4, 0xf8, 0x36, 0x4b, 0xe5, 0xb2, 0x99, 0x8c,
	0x4f, 0x7c, 0x8f, 0xc9, 0x4f, 0x67, 0x93, 0x70, 0xe0, 0x5d, 0xb8, 0x42, 0x8e, 0x98, 0x17, 0xf0,
	0xae, 0x00, 0xc7, 0x49, 0x51, 0x48, 0x90, 0xe2, 0x2e, 0x54, 0xc4, 0x08, 0xa0, 0x1c, 0xc6, 0x07,
	0x16, 0x04, 0x88, 0x09, 0x62, 0xef, 0x01, 0x51, 0xe3, 0x69, 0x31, 0xaa, 0xe1, 0xd6, 0xc0, 0x07,
	0x76, 0xde, 0x11, 0x03, 0xba, 0x67, 0x5f, 0xe2, 0x16, 0x71, 0x1f, 0xea, 0x0c, 0x85, 0xd1, 0xd3,
	0xea, 0xa3, 0x90, 0x54, 0xe2, 0xb4, 0x1a, 0xd9, 0x97, 0x8c, 0x98, 0x9b, 0x28, 0x2a, 0xbd, 0x01,
	0x15, 0x39, 0xa8, 0x96, 0xe3, 0x8a, 0x71, 0x2d, 0x8b, 0x71, 0xed, 0xb8, 0x6c, 0x73, 0x60, 0xe9,
	0x9c, 0x4e, 0xd6, 0x80, 0x8e, 0xc3, 0x33, 0xc1, 0x74, 0xeb, 0x23, 0xc7, 0xe5, 0xe4, 0xdd, 0x62,
	0x50, 0xe3, 0xd7, 0x32, 0x50, 0x15, 0x54, 0x47, 0xb1, 0x8f, 0xac, 0x03, 0x91, 0x53, 0x3c, 0xbc,
	0x74, 0x06, 0xd6, 0xf1, 0x55, 0x48, 0x03, 0xbe, 0xa2, 0x76, 0x6e, 0x98, 0x0d, 0x91, 0xd6, 0xbb,
	0x74, 0x06, 0x1b, 0x2c, 0x85, 0x3c, 0x84, 0x46, 0x0c, 0x3f, 0x08, 0x7d, 0x2e, 0xa8, 0xee, 0xdc,
	0x30, 0xeb, 0x1a, 0x76, 0x37, 0xf4, 0x19, 0x4b, 0x60, 0x42, 0xe5, 0x24, 0xb4, 0x1c, 0x77, 0x40,
	0x2f, 0x71, 0x3c, 0x6a, 0x66, 0x85, 0xc3, 0x3a, 0x0c, 0xb4, 0x51, 0x87, 0xaa, 0x5e, 0x9c, 0x71,
	0x0a, 0x25, 0x29, 0x91, 0x72, 0xd9, 0x25, 0xde, 0x24, 0x26, 0xbb, 0xc8, 0x96, 0xdc, 0x84, 0x52,
	0xbc, 0x05, 0x66, 0x31, 0x7c, 0xed, 0x8a, 0x8d, 0x6f, 0x41, 0x63, 0x97, 0x0d, 0x84, 0xcb, 0x56,
	0xb2, 0x90, 0xb0, 0x57, 0x60, 0x4e, 0xe3, 0x28, 0x65, 0x53, 0x7c, 0x31, 0x41, 0xe0, 0xcc, 0x0b,
	0x42, 0x51, 0x0b, 0xfe, 0x36, 0xfe, 0x65, 0x06, 0x48, 0x3b, 0x08, 0x9d, 0x91, 0x1d, 0xd2, 0x6d,
	0xaa, 0xb8, 0xe0, 0x01, 0x54, 0x59, 0x69, 0x3d, 0xaf, 0xc5, 0x45, 0x5e, 0x2e, 0xe5, 0xbc, 0x27,
	0x38, 0xdd, 0x74, 0x86, 0x75, 0x1d, 0x9b, 0x6f, 0x6a, 0xb1, 0x02, 0xd8, 0x74, 0x0b, 0x6d, 0xff,
	0x94, 0x86, 0x28, 0x28, 0x0b, 0x01, 0x0f, 0x38, 0x88, 0x89, 0xc8, 0x6b, 0xdf, 0x86, 0x85, 0xa9,
	0x32, 0xf4, 0x5d, 0xa8, 0x9c, 0xb2, 0x0b, 0xe5, 0xf4, 0x5d, 0xc8, 0x82, 0xc5, 0x58, 0xbb, 0xc4,
	0x2a, 0x5c, 0x85, 0x22, 0xe3, 0x16, 0x6c, 0xee, 0x66, 0xb8, 0xdc, 0x7e, 0x42, 0x71, 0x7e, 0x7f,
	0x00, 0x4b, 0x27, 0x94, 0xfa, 0x76, 0x88, 0x89, 0xc8, 0x4e, 0xd8, 0x08, 0x89, 0x82, 0x17, 0x44,
	0x5a, 0xd7, 0x0e, 0x0f, 0xa9, 0xcf, 0x46, 0xca, 0xf8, 0xed, 0x2c, 0xcc, 0xb3, 0x0d, 0x63, 0xcf,
	0x76, 0xaf, 0x24, 0x9d, 0x76, 0x53, 0xe9, 0xf4, 0x40, 0xdb, 0xfa, 0x35, 0xec, 0x2f, 0x4b, 0xa4,
	0x5c, 0x92, 0x48, 0xe4, 0x1e, 0x54, 0x63, 0x6d, 0x2d, 0x60, 0x5b, 0x21, 0x50, 0x8d, 0x8c, 0x64,
	0xf3, 0x39, 0x4d, 0x36, 0x67, 0x9c, 0x80, 0x2d, 0x2c, 0x56, 0x6a, 0x20, 0xc4, 0x2d, 0xc6, 0x5e,
	0x59, 0x99, 0x01, 0x53, 0x60, 0x02, 0xc6, 0x79, 0xac, 0x89, 0x2b, 0x94, 0x18, 0x3a, 0xc0, 0xe5,
	0x5b, 0x32, 0x1b, 0x98, 0x70, 0x14, 0xc1, 0xff, 0xf4, 0xc3, 0xf4, 0x36, 0x34, 0x22, 0xb2, 0x88,
	0x31, 0x22, 0x90, 0x67, 0x53, 0x5e, 0x14, 0x80, 0xbf, 0x8d, 0xff, 0x93, 0xe1, 0x88, 0x9b, 0x9e,
	0x13, 0x29, 0x12, 0x04, 0xf2, 0x4c, 0x73, 0x91, 0x88, 0xec, 0xf7, 0x4c, 0xbd, 0xec, 0xc7, 0x40,
	0xcc, 0x9b, 0x50, 0x0a, 0x18, 0x61, 0xec, 0xe1, 0x50, 0x68, 0x07, 0x45, 0xf6, 0xdd, 0x1a, 0x0e,
	0x23, 0x3a, 0x17, 0x67, 0xd2, 0xb9, 0xf4, 0x3a, 0x74, 0x2e, 0xa7, 0xd3, 0xd9, 0x78, 0x07, 0x16,
	0xb4, 0xde, 0x5f, 0x43, 0xa7, 0x7d, 0x20, 0xbb, 0x4e, 0x10, 0x1e, 0xb9, 0xac, 0x08, 0x25, 0x59,
	0xc4, 0x1a, 0x92, 0x49, 0x34, 0x84, 0x25, 0xda, 0x97, 0x22, 0x31, 0x2b, 0x12, 0xed, 0x4b, 0x4c,
	0x34, 0xbe, 0x0e, 0x8b, 0xb1, 0xf2, 0x44, 0xd5, 0x6f, 0x42, 0x61, 0x12, 0x5e, 0x7a, 0x52, 0xdf,
	0xa9, 0x88, 0x19, 0x7e, 0x14, 0x5e, 0x7a, 0x26, 0x4f, 0x31, 0x3e, 0x83, 0x85, 0x7d, 0x7a, 0x21,
	0x98, 0x90, 0x6c, 0xc8, 0xdb, 0x90, 0x7f, 0x85, 0xd9, 0x00, 0xd3, 0x8d, 0x75, 0x20, 0x7a, 0x66,
	0x51, 0xab, 0x66, 0x45, 0xc8, 0xc4, 0xac, 0x08, 0xc6, 0x0b, 0x20, 0x5d, 0xe7, 0xd4, 0xdd, 0xe3,
	0x46, 0x0c, 0x59, 0x5b, 0x03, 0x72, 0xa3, 0xe0, 0x54, 0x4e, 0xc4, 0x51, 0x70, 0xca, 0x96, 0xff,
	0x28, 0x38, 0xb5, 0x8e, 0x1d, 0x57, 0x6c, 0xb2, 0x73, 0xa3, 0xe0, 0x74, 0xc3, 0x71, 0xf5, 0xa2,
	0x73, 0xf1, 0xa2, 0xbf, 0x06, 0x8b, 0xb1, 0xa2, 0x45, 0x5b, 0x6e, 0x43, 0x39, 0x70, 0x4e, 0x5d,
	0x94, 0x9c, 0x45, 0x0d, 0x11, 0xc0, 0xf0, 0x80, 0x6c, 0x7a, 0xae, 0x4b, 0xfb, 0xe1, 0x21, 0xa5,
	0xbe, 0x6c, 0xcf, 0x7b, 0xda, 0x7c, 0xad, 0x3c, 0x5e, 0x15, 0xbd, 0x4f, 0x32, 0x6c, 0x31, 0x91,
	0x09, 0xe4, 0xc7, 0xd4, 0x1f, 0x61, 0x3b, 0x4b, 0x26, 0xfe, 0x66, 0xad, 0x64, 0xba, 0xbd, 0x37,
	0xe1, 0xba, 0x5a, 0xde, 0x94, 0x9f, 0xc6, 0x32, 0x2c, 0xc6, 0x2a, 0xe4, 0xad, 0x34, 0x1e, 0xc1,
	0xf2, 0x96, 0x13, 0xf4, 0xa7, 0x9b, 0xb2, 0x0a, 0xc5, 0xf1, 0xe4, 0xd8, 0x8a, 0xe4, 0x4c, 0xb6,
	0x2b, 0x3c, 0xa3, 0x57, 0x46, 0x13, 0x56, 0x92, 0x39, 0x44, 0x59, 0xbf, 0x98, 0x85, 0xfc, 0x4e,
	0x6f, 0x77, 0x93, 0x69, 0xc9, 0x8e, 0xdb, 0xf7, 0x46, 0x8e, 0x7b, 0x2a, 0x64, 0x19, 0xf5, 0x3d,
	0x73, 0xf9, 0xdd, 0x82, 0x32, 0x13, 0x5a, 0xad, 0xa1, 0x87, 0xa6, 0x25, 0xb4, 0x20, 0x30, 0xc0,
	0xae, 0xd7, 0x7f, 0xc9, 0x96, 0x02, 0xbd, 0x1c, 0x3b, 0x3e, 0x5a, 0x45, 0xa4, 0xd2, 0x9f, 0xe7,
	0x62, 0x58, 0x94, 0x10, 0xe9, 0xfe, 0x42, 0x62, 0x60, 0x7b, 0x20, 0x17, 0x4f, 0xcb, 0x67, 0x28,
	0x31, 0x0c, 0xe8, 0x25, 0x79, 0x1f, 0xc8, 0x89, 0xe7, 0x5f, 0xd8, 0xbe, 0x92, 0xa8, 0x5c, 0xc1,
	0xfe, 0xf2, 0xe6, 0x42, 0x94, 0x22, 0xa4, 0x05, 0xf2, 0x18, 0x96, 0x35, 0x74, 0xad, 0x60, 0x2e,
	0xd9, 0x2c, 0x46, 0x89, 0x3b, 0xb2, 0x0a, 0xe3, 0x17, 0xb2, 0x40, 0x44, 0xfe, 0x4d, 0xcf, 0x0d,
	0x42, 0xdf, 0x76, 0xdc, 0x30, 0x88, 0xcb, 0x57, 0x99, 0x84, 0x7c, 0xf5, 0x00, 0x1a, 0x28, 0xdd,
	0xe9, 0x42, 0x56, 0x36, 0x12, 0x75, 0xcd, 0x48, 0xd0, 0xba, 0x0f, 0xf5, 0x48, 0xc2, 0x56, 0x46,
	0xb1, 0xbc, 0x59, 0x55, 0x52, 0xb6, 0xd8, 0xae, 0xd8, 0xa2, 0x95, 0x92, 0xa3, 0xd2, 0xd5, 0xb9,
	0x30, 0xbf, 0x30, 0xb2, 0x2f, 0x0f, 0xa9, 0x94, 0xe7, 0x51, 0x24, 0x33, 0xa0, 0xa6, 0x84, 0x2d,
	0xc4, 0xe4, 0x94, 0xab, 0x08, 0x71, 0x0b, 0x71, 0xd2, 0xe5, 0xe1, 0xb9, 0x74, 0x79, 0xd8, 0xf8,
	0x8f, 0x65, 0x28, 0x4a, 0x32, 0xa2, 0x70, 0x1b, 0x3a, 0xe7, 0x34, 0x12, 0x6e, 0xd9, 0x17, 0x93,
	0x99, 0x7d, 0x3a, 0xf2, 0x42, 0xa5, 0xd4, 0xf0, 0x55, 0x57, 0xe5, 0x40, 0xa1, 0xd6, 0x68, 0x82,
	0x35, 0xb7, 0xe5, 0xf1, 0x15, 0x28, 0x05, 0x6b, 0x2e, 0x36, 0xdd, 0x82, 0xa2, 0x14, 0x8f, 0xf3,
	0x4a, 0x91, 0x9f, 0xeb, 0x73, 0xd9, 0x78, 0x0d, 0x4a, 0x7d, 0x7b, 0x6c, 0xf7, 0x9d, 0xf0, 0x4a,
	0xf0, 0x6d, 0xf5, 0xcd, 0x4a, 0x1f, 0x7a, 0x7d, 0x7b, 0x68, 0x1d, 0xdb, 0x43, 0xdb, 0xed, 0x53,
	0x61, 0x24, 0xab, 0x22, 0x70, 0x83, 0xc3, 0xc8, 0x57, 0xa0, 0x2e, 0xda, 0x29, 0xb1, 0xb8, 0xad,
	0x4c, 0xb4, 0x5e, 0xa2, 0x31, 0x05, 0xcc, 0x1b, 0xb1, 0x71, 0x39, 0xa1, 0x5c, 0x55, 0xc9, 0x99,
	0x65, 0x0e, 0xd9, 0xa6, 0xd8, 0x5b, 0x91, 0x7c, 0xc1, 0xe7, 0x70, 0x99, 0x57, 0xc5, 0x81, 0x5f,
	0xf0, 0xf9, 0x3b, 0xad, 0xaf, 0xe4, 0x34, 0x7d, 0xe5, 0x3d, 0x58, 0x98, 0xb8, 0x01, 0x0d, 0xc3,
	0x21, 0x1d, 0xa8, 0xb6, 0x54, 0x10, 0xa9, 0xa1, 0x12, 0x64, 0x73, 0xd6, 0x61, 0x91, 0x5b, 0xf7,
	0x02, 0x3b, 0xf4, 0x82, 0x33, 0x27, 0xb0, 0x02, 0xea, 0x4a, 0x7b, 0xcd, 0x02, 0x26, 0x75, 0x45,
	0x4a, 0x97, 0xdb, 0x05, 0x56, 0x13, 0xf8, 0x3e, 0xed, 0x53, 0xe7, 0x9c, 0x0e, 0x50, 0x97, 0xc9,
	0x99, 0xcb, 0xb1, 0x3c, 0xa6, 0x48, 0x44, 0xc5, 0x74, 0x32, 0xb2, 0x26, 0xe3, 0x81, 0xcd, 0x64,
	0xd6, 0x3a, 0x57, 0x0e, 0xdc, 0xc9, 0xe8, 0x88, 0x43, 0xc8, 0x23, 0x90, 0xca, 0x8a, 0x98, 0x33,
	0xf3, 0xb1, 0x6d, 0x81, 0x71, 0x0d, 0xb3, 0x2a, 0x30, 0xb8, 0x32, 0x75, 0x57, 0x5f, 0x2c, 0x0d,
	0x36, 0xc3, 0x36, 0xb2, 0xcd, 0x8c, 0xb6, 0x60, 0x9a, 0x50, 0x1c, 0xfb, 0xce, 0xb9, 0x1d, 0xd2,
	0xe6, 0x02, 0xdf, 0x6b, 0xc5, 0x27, 0xe3, 0xbc, 0x8e, 0xeb, 0x84, 0x8e, 0x1d, 0x7a, 0x7e, 0x93,
	0x60, 0x5a, 0x04, 0x20, 0x0f, 0x61, 0x01, 0xe7, 0x49, 0x10, 0xda, 0xe1, 0x24, 0x10, 0x9a, 0xda,
	0x22, 0xd7, 0x88, 0x58, 0x42, 0x17, 0xe1, 0xa8, 0xac, 0x91, 0x4f, 0x60, 0x85, 0x4f, 0x8d, 0xa9,
	0xa5, 0xb9, 0xc4, 0xc8, 0x81, 0x2d, 0x5a, 0x44, 0x8c, 0xcd, 0xf8, 0x1a, 0xfd, 0x14, 0x56, 0xc5,
	0x74, 0x99, 0xca, 0xb9, 0xac, 0x72, 0x2e, 0x71, 0x94, 0x44, 0xd6, 0x75, 0x58, 0x60, 0x4d, 0x73,
	0xfa, 0x96, 0x28, 0x81, 0xad, 0x8a, 0x15, 0xd6, 0x0b, 0xcc, 0x34, 0xcf, 0x13, 0x4d, 0x4c, 0x7b,
	0x46, 0xaf, 0xc8, 0xb7, 0x60, 0x9e, 0x4f, 0x1f, 0xb4, 0x41, 0xe0, 0xe6, 0xb9, 0x86, 0x9b, 0xe7,
	0xb2, 0x20, 0xee, 0xa6, 0x4a, 0xc5, 0xfd, 0xb3, 0xde, 0x8f, 0x7d, 0xb3, 0xa5, 0x31, 0x74, 0x4e,
	0x28, 0xdb, 0x27, 0x9a, 0xab, 0x7c, 0xb2, 0xc9, 0x6f, 0xb6, 0x6a, 0x27, 0x63, 0x4c, 0x69, 0x72,
	0x66, 0xcd, 0xbf, 0x70, 0x1e, 0x0f, 0xbd, 0x80, 0x4a, 0xbb, 0x70, 0xf3, 0xa6, 0x58, 0x90, 0x0c,
	0x28, 0xd5, 0x0a, 0xa6, 0xb7, 0x72, 0x23, 0x81, 0xb2, 0xde, 0xdf, 0xc2, 0x89, 0x51, 0xe3, 0xb6,
	0x02, 0x69, 0xc1, 0x67, 0x82, 0xd7, 0x99, 0x7d, 0x21, 0xd9, 0xfa, 0x6d, 0xe4, 0x26, 0xc0, 0x40,
	0x82, 0xa1, 0x6f, 0xc3, 0x82, 0x18, 0x85, 0x88, 0x99, 0x36, 0xef, 0xe0, 0x16, 0x79, 0x53, 0xf6,
	0x71, 0x8a, 0xdb, 0x9a, 0x0d, 0x3e, 0x2e, 0x1a, 0xff, 0xdd, 0x01, 0x22, 0x07, 0x45, 0x2b, 0xe8,
	0x8d, 0x57, 0x15, 0xb4, 0x20, 0x86, 0x29, 0x02, 0x19, 0xbf, 0x99, 0xe1, 0x52, 0x8f, 0xc0, 0x0e,
	0x34, 0x03, 0x0d, 0xe7, 0x6b, 0x96, 0xe7, 0x0e, 0xaf, 0x04, 0xab, 0x03, 0x0e, 0x3a, 0x70, 0x87,
	0xc8, 0x6b, 0x1c, 0x57, 0x47, 0xe1, 0x9b, 0x77, 0x55, 0x02, 0x11, 0xe9, 0x2e, 0x54, 0xc6, 0x93,
	0xe3, 0xa1, 0xd3, 0xe7, 0x28, 0x39, 0x5e, 0x0a, 0x07, 0x21, 0xc2, 0x9b, 0x50, 0x15, 0x73, 0x9d,
	0x63, 0xe4, 0x11, 0xa3, 0x22, 0x60, 0x88, 0x82, 0xc2, 0x01, 0xf5, 0x91, 0xd9, 0x55, 0x4d, 0xfc,
	0x6d, 0x6c, 0xc0, 0x52, 0xbc, 0xd1, 0x42, 0x52, 0x79, 0x08, 0x25, 0xc1, 0x49, 0xa5, 0x2d, 0xb2,
	0x1e, 0xa7, 0x86, 0xa9, 0xd2, 0x8d, 0xff, 0x54, 0x80, 0x45, 0x49, 0x23, 0x36, 0xd8, 0xdd, 0xc9,
	0x68, 0x64, 0xfb, 0x29, 0x2c, 0x3a, 0x73, 0x3d, 0x8b, 0xce, 0x4e, 0xb1, 0xe8, 0xb8, 0xed, 0x8a,
	0x73, 0xf8, 0xb8, 0xed, 0x8a, 0xcd, 0x2e, 0xae, 0x31, 0xeb, 0xc7, 0x21, 0x35, 0x01, 0xee, 0xf1,
	0x63, 0x97, 0xa9, 0x0d, 0xa5, 0x90, 0xb2, 0xa1, 0xe8, 0xdb, 0xc1, 0x5c, 0x62, 0x3b, 0x78, 0x13,
	0xf8, 0x34, 0x96, 0xf3, 0xb1, 0xc8, 0x95, 0x68, 0x84, 0x89, 0x09, 0xf9, 0x0e, 0xcc, 0x27, 0x39,
	0x30, 0x67, 0xf5, 0xf5, 0x14, 0xfe, 0xeb, 0x8c, 0x28, 0x0a, 0x35, 0x1a, 0x72, 0x59, 0xf0, 0x5f,
	0x67, 0x44, 0x77, 0x31, 0x45, 0xe2, 0xb7, 0x01, 0x78, 0xdd, 0xb8, 0x8c, 0x01, 0x97, 0xf1, 0xdb,
	0x89, 0x99, 0xa9, 0x51, 0x7d, 0x9d, 0x7d, 0x4c, 0x7c, 0x8a, 0xeb, 0xba, 0x8c, 0x39, 0x71, 0x49,
	0x7f, 0x02, 0x75, 0x6f, 0x4c, 0x5d, 0x2b, 0xe2, 0x82, 0x15, 0x2c, 0xaa, 0x21, 0x8a, 0xea, 0x48,
	0xb8, 0x59, 0x63, 0x78, 0xea, 0x93, 0x7c, 0xca, 0x89, 0x4c, 0xb5, 0x9c, 0xd5, 0x19, 0x39, 0xeb,
	0x88, 0x18, 0x65, 0xfd, 0x1a, 0xda, 0x87, 0xbc, 0xe1, 0x84, 0x1f, 0x73, 0xd4, 0x70, 0x1e, 0x49,
	0x83, 0xb2, 0xa9, 0x52, 0x4c, 0x1d, 0xcb, 0xf8, 0xe5, 0x0c, 0x54, 0xb4, 0x3e, 0x90, 0x65, 0x58,
	0xd8, 0x3c, 0x38, 0x38, 0x6c, 0x9b, 0xad, 0x5e, 0xe7, 0x79, 0xdb, 0xda, 0xdc, 0x3d, 0xe8, 0xb6,
	0x1b, 0x37, 0x18, 0x78, 0xf7, 0x60, 0xb3, 0xb5, 0x6b, 0x6d, 0x1f, 0x98, 0x9b, 0x12, 0x9c, 0x21,
	0x2b, 0x40, 0xcc, 0xf6, 0xde, 0x41, 0xaf, 0x1d, 0x83, 0x67, 0x49, 0x03, 0xaa, 0x1b, 0x66, 0xbb,
	0xb5, 0xb9, 0x23, 0x20, 0x39, 0xb2, 0x04, 0x8d, 0xed, 0xa3, 0xfd, 0xad, 0xce, 0xfe, 0x53, 0x6b,
	0xb3, 0xb5, 0xbf, 0xd9, 0xde, 0x6d, 0x6f, 0x35, 0xf2, 0xa4, 0x06, 0xe5, 0xd6, 0x46, 0x6b, 0x7f,
	0xeb, 0x60, 0xbf, 0xbd, 0xd5, 0x28, 0x18, 0xff, 0x3b, 0x03, 0x10, 0x35, 0x94, 0xf1, 0xd5, 0xa8,
	0xa9, 0xfa, 0x59, 0xe6, 0xf2, 0x54, 0xa7, 0x38, 0x5f, 0xf5, 0x63, 0xdf, 0xe4, 0x31, 0x14, 0xbd,
	0x49, 0xd8, 0xf7, 0x46, 0x5c, 0xa9, 0xad, 0x3f, 0x6e, 0x4e, 0xe5, 0x3b, 0xe0, 0xe9, 0xa6, 0x44,
	0x8c, 0x9d, 0x57, 0xe6, 0x5e, 0x75, 0x5e, 0x19, 0x3f, 0x18, 0xe5, 0x72, 0x9d, 0x76, 0x30, 0x7a,
	0x07, 0x20, 0xb8, 0xa0, 0x74, 0x8c, 0x06, 0x26, 0x5c, 0x05, 0x4c, 0x01, 0x61, 0x90, 0x1e, 0xd3,
	0x03, 0x7f, 0x2f, 0x03, 0xcb, 0x38, 0x97, 0x06, 0x49, 0x26, 0x76, 0x0f, 0x2a, 0x7d, 0xcf, 0x1b,
	0x53, 0x26, 0x54, 0x2b, 0x79, 0x4d, 0x07, 0x31, 0x06, 0xc5, 0x19, 0xf2, 0x89, 0xe7, 0xf7, 0xa9,
	0xe0, 0x61, 0x80, 0xa0, 0x6d, 0x06, 0x61, 0x6b, 0x48, 0x2c, 0x42, 0x8e, 0xc1, 0x59, 0x58, 0x85,
	0xc3, 0x38, 0xca, 0x0a, 0xcc, 0x1d, 0xfb, 0xd4, 0xee, 0x9f, 0x09, 0xee, 0x25, 0xbe, 0xc8, 0xbb,
	0x91, 0xa1, 0xad, 0xcf, 0xd6, 0xc4, 0x90, 0xf2, 0xc6, 0x97, 0xcc, 0x79, 0x01, 0xdf, 0x14, 0x60,
	0xb6, 0xcf, 0xdb, 0xc7, 0xb6, 0x3b, 0xf0, 0x5c, 0x75, 0x1a, 0x17, 0x01, 0x8c, 0x43, 0x58, 0x49,
	0xf6, 0x4f, 0xf0, 0xbb, 0x8f, 0x35, 0x7e, 0xc7, 0xd5, 0xd3, 0xb5, 0xd9, 0x6b, 0x4c, 0xe3, 0x7d,
	0xbf, 0x93, 0x87, 0x3c, 0x53, 0x78, 0x66, 0xea, 0x46, 0xb3, 0x95, 0x44, 0x3c, 0xc8, 0xbd, 0x0a,
	0xa9, 0x10, 0xc0, 0xc4, 0x60, 0x21, 0x04, 0x05, 0x2f, 0x95, 0xec, 0xd3, 0xfe, 0xb9, 0xd4, 0x59,
	0x10, 0x62, 0xd2, 0xfe, 0x39, 0x1a, 0x16, 0xec, 0x90, 0xe7, 0xe5, 0xfc, 0xaa, 0x18, 0xd8, 0x21,
	0xe6, 0x14, 0x49, 0x98, 0xaf, 0xa8, 0x92, 0x30, 0x57, 0x13, 0x8a, 0x8e, 0x7b, 0xec, 0x4d, 0x5c,
	0x69, 0x9e, 0x91, 0x9f, 0x78, 0x68, 0x8e, 0x9c, 0x94, 0x6d, 0xed, 0x9c, 0x1b, 0x95, 0x18, 0xa0,
	0xc7, 0x36, 0xf7, 0x0f, 0xa1, 0x1c, 0x5c, 0xb9, 0x7d, 0x9d, 0x07, 0x2d, 0x09, 0xfa, 0xb0, 0xde,
	0xaf, 0x77, 0xaf, 0xdc, 0x3e, 0xce, 0xf8, 0x52, 0x20, 0x7e, 0x91, 0x27, 0x50, 0x52, 0x47, 0x49,
	0x7c, 0x07, 0xb9, 0xa9, 0xe7, 0x90, 0xe7, 0x47, 0xdc, 0x86, 0xa5, 0x50, 0xc9, 0x07, 0x30, 0x87,
	0x46, 0xea, 0xa0, 0x59, 0xc5, 0x4c, 0x52, 0xe1, 0x65, 0xcd, 0xc0, 0xf3, 0x6a, 0x3a, 0xc0, 0xb3,
	0x1f, 0x53, 0xa0, 0x31, 0x32, 0x9d, 0x0c, 0xed, 0xb1, 0x30, 0x19, 0xd7, 0xf8, 0xb1, 0x2e, 0x83,
	0x70, 0x7b, 0xf1, 0x3d, 0xa8, 0xe2, 0x31, 0x1d, 0xe2, 0xb8, 0x5c, 0x0e, 0xcd, 0x99, 0xc0, 0x60,
	0xdb, 0x43, 0x7b, 0xbc, 0x1f, 0xac, 0x3d, 0x83, 0x5a, 0xac, 0x31, 0xba, 0x29, 0xaa, 0xc6, 0x4d,
	0x51, 0xf7, 0x75, 0x53, 0x54, 0xb4, 0x15, 0x8a, 0x6c, 0xba, 0x69, 0xea, 0xdb, 0x50, 0x92, 0xb4,
	0x60, 0x3c, 0xe7, 0x68, 0xff, 0xd9, 0xfe, 0xc1, 0x17, 0xfb, 0x56, 0xf7, 0xc5, 0xfe, 0x66, 0xe3,
	0x06, 0x99, 0x87, 0x4a, 0x6b, 0x13, 0xd9, 0x18, 0x02, 0x32, 0x0c, 0xe5, 0xb0, 0xd5, 0xed, 0x2a,
	0x48, 0xd6, 0xd8, 0x86, 0x46, 0xb2, 0xab, 0x6c, 0x52, 0x87, 0x12, 0x26, 0x8e, 0xd3, 0x22, 0x40,
	0x64, 0xe3, 0xcf, 0x6a, 0x36, 0x7e, 0xe3, 0x09, 0x34, 0xd8, 0xc6, 0xce, 0x68, 0xad, 0x9f, 0xa1,
	0x0f, 0x99, 0xe8, 0xad, 0x1f, 0xa9, 0x95, 0xcc, 0x0a, 0x87, 0x61, 0x55, 0xc6, 0xc7, 0xb0, 0xa0,
	0x65, 0x8b, 0x0c, 0x37, 0x4c, 0x58, 0x48, 0x1a, 0x6e, 0x50, 0xd1, 0xe7, 0x29, 0xc6, 0x2a, 0x2c,
	0xb3, 0xcf, 0xf6, 0x39, 0x75, 0xc3, 0xee, 0xe4, 0x98, 0xfb, 0x5e, 0x38, 0x9e, 0x6b, 0xfc, 0x42,
	0x06, 0xca, 0x2a, 0x65, 0xf6, 0x2a, 0x59, 0x17, 0x36, 0x1e, 0xce, 0x16, 0xd7, 0xb4, 0x1a, 0x30,
	0xe3, 0x3a, 0xfe, 0x1f, 0xb3, 0xf5, 0x94, 0x15, 0x88, 0x91, 0xf5, 0xb0, 0xdd, 0x36, 0xad, 0x83,
	0xfd, 0xdd, 0xce, 0x3e, 0xdb, 0x1c, 0x18, 0x59, 0x11, 0xb0, 0xbd, 0x8d, 0x90, 0x8c, 0xd1, 0x80,
	0xfa, 0x53, 0x1a, 0x76, 0xdc, 0x13, 0x4f, 0x10, 0xc3, 0xf8, 0x0b, 0x73, 0x30, 0xaf, 0x40, 0x91,
	0xad, 0xe8, 0x9c, 0xfa, 0x81, 0xe3, 0xb9, 0x38, 0x4f, 0xca, 0xa6, 0xfc, 0x64, 0xec, 0x4d, 0x68,
	0x69, 0x28, 0x66, 0x2c, 0x61, 0xaa, 0xd0, 0xeb, 0xe4, 0xe9, 0xb5, 0x33, 0xa0, 0x6e, 0xe8, 0x84,
	0x57, 0xf1, 0xb3, 0xb8, 0xba, 0x04, 0x0b, 0x39, 0x63, 0x09, 0x0a, 0xf6, 0xd0, 0xb1, 0xa5, 0x4f,
	0x0b, 0xff, 0x60, 0xd0, 0xbe, 0x37, 0xf4, 0x7c, 0xd4, 0x5b, 0xca, 0x26, 0xff, 0x20, 0x8f, 0x60,
	0x89, 0xe9, 0x50, 0xfa, 0x51, 0x0f, 0x72, 0x28, 0x6e, 0xc4, 0x27, 0xee, 0x64, 0x74, 0x18, 0x1d,
	0xf7, 0xb0, 0x14, 0x26, 0x5d, 0xb0, 0x1c, 0x42, 0x9c, 0x54, 0x19, 0xb8, 0x5d, 0x64, 0xc1, 0x9d,
	0x8c, 0x5a, 0x98, 0xa2, 0xf0, 0x1f, 0xc3, 0x32, 0xc3, 0x57, 0x02, 0xa8, 0xca, 0x31, 0x8f, 0x39,
	0x58, 0x61, 0x1d, 0x91, 0xa6, 0xf2, 0xdc, 0x82, 0x32, 0x6f, 0x15, 0x9b, 0x12, 0xe2, 0x4c, 0x08,
	0x9b, 0x42, 0xfd, 0x60, 0xca, 0xfd, 0x84, 0x1b, 0x02, 0x92, 0xee, 0x27, 0x9a, 0x03, 0x4b, 0x29,
	0xe9, 0xc0, 0xf2, 0x18, 0x96, 0x8f, 0xd9, 0x1c, 0x3d, 0xa3, 0xf6, 0x80, 0xfa, 0x56, 0x34, 0xf3,
	0xb9, 0xba, 0xb9, 0xc8, 0x12, 0x77, 0x30, 0x4d, 0x2d, 0x14, 0x26, 0x09, 0x32, 0xc6, 0x43, 0x07,
	0x56, 0xe8, 0x59, 0x28, 0x20, 0x0a, 0xab, 0x68, 0x8d, 0x83, 0x7b, 0xde, 0x26, 0x03, 0xc6, 0xf1,
	0x4e, 0x7d, 0x7b, 0x7c, 0x26, 0x94, 0x41, 0x85, 0xf7, 0x94, 0x01, 0xc9, 0x6d, 0x28, 0xb2, 0x35,
	0xe1, 0x52, 0x7e, 0x62, 0xcf, 0xd5, 0x2c, 0x09, 0x22, 0xf7, 0x61, 0x0e, 0xeb, 0x08, 0x9a, 0x0d,
	0x5c, 0x10, 0xd5, 0x68, 0xab, 0x70, 0x5c, 0x53, 0xa4, 0x31, 0x71, 0x7b, 0xe2, 0x3b, 0x9c, 0x8f,
	0x95, 0x4d, 0xfc, 0x4d, 0xbe, 0xa3, 0x31, 0xc5, 0x45, 0xcc, 0x7b, 0x5f, 0xe4, 0x4d, 0x4c, 0xc5,
	0x59, 0xfc, 0xf1, 0xc7, 0xca, 0xad, 0x3e, 0xcf, 0x97, 0x2a, 0x8d, 0xaa, 0xd1, 0x44, 0xa7, 0x1b,
	0x93, 0xf6, 0xbd, 0x73, 0xea, 0x5f, 0xc5, 0xd6, 0x48, 0x06, 0x56, 0xa7, 0x92, 0xa2, 0x03, 0x7a,
	0x5f, 0xc0, 0xad, 0x91, 0x37, 0x90, 0x42, 0x41, 0x55, 0x02, 0xf7, 0xbc, 0x01, 0x13, 0x5e, 0x16,
	0x14, 0xd2, 0x89, 0xe3, 0x3a, 0xc1, 0x19, 0x1d, 0x08, 0xd9, 0xa0, 0x21, 0x13, 0xb6, 0x05, 0x9c,
	0x49, 0xe0, 0x63, 0xdf, 0x3b, 0x55, 0x5b, 0x65, 0xc6, 0x54, 0xdf, 0xc6, 0x27, 0x50, 0xe0, 0x23,
	0xc8, 0x16, 0x0a, 0x8e, 0x6f, 0x46, 0x2c, 0x14, 0x84, 0x36, 0xa1, 0xe8, 0xd2, 0xf0, 0xc2, 0xf3,
	0x5f, 0xca, 0xf3, 0x2f, 0xf1, 0x69, 0xfc, 0x10, 0x8d, 0xaa, 0xca, 0x7d, 0x8a, 0x1b, 0x1f, 0xd8,
	0x14, 0xe6, 0x53, 0x30, 0x38, 0xb3, 0xc5, 0x3a, 0x2d, 0x21, 0xa0, 0x7b, 0x66, 0x4f, 0x4d, 0xe1,
	0xec, 0xb4, 0x07, 0xd5, 0x7d, 0xa8, 0x4b, 0x87, 0xad, 0xc0, 0x1a, 0xd2, 0x93, 0x50, 0x2c, 0xc9,
	0xaa, 0xf0, 0xd6, 0x0a, 0x76, 0xe9, 0x49, 0x68, 0xec, 0xc1, 0x82, 0x58, 0x34, 0x07, 0x63, 0x2a,
	0xab, 0xfe, 0x7a, 0x9a, 0x56, 0x54, 0x79, 0xbc, 0x18, 0x17, 0x37, 0xb8, 0x60, 0x17, 0x53, 0x95,
	0x8c, 0xef, 0x46, 0x16, 0x44, 0x26, 0x8c, 0x88, 0xf2, 0x84, 0x6e, 0x22, 0x8f, 0x0d, 0xa5, 0xb3,
	0x81, 0xd2, 0x80, 0x9c, 0x01, 0xa3, 0x4e, 0x30, 0xe9, 0xf7, 0xa5, 0x23, 0x5d, 0xc9, 0x94, 0x9f,
	0xc6, 0xbf, 0xcf, 0xc0, 0x22, 0x16, 0x26, 0xb5, 0x3a, 0xb1, 0x53, 0xfc, 0xc8, 0x8d, 0x64, 0xe3,
	0xa3, 0x4b, 0x80, 0xfc, 0xe3, 0xcb, 0x1f, 0xa4, 0xe4, 0xa7, 0x0e, 0x52, 0xde, 0x85, 0xc6, 0x80,
	0x0e, 0x1d, 0x9c, 0x4a, 0x52, 0xa0, 0xe2, 0x12, 0xec, 0xbc, 0x84, 0x0b, 0x2b, 0x83, 0xf1, 0xd7,
	0x32, 0xb0, 0xc0, 0xe5, 0x35, 0xb4, 0xdb, 0x08, 0x42, 0x7d, 0x26, 0x0d, 0x14, 0x82, 0x9d, 0x8a,
	0x3e, 0x45, 0x72, 0x0c, 0x42, 0x39, 0xf2, 0xce, 0x0d, 0x61, 0xb8, 0x10, 0x50, 0xf2, 0x0d, 0xd4,
	0x44, 0x5d, 0x0b, 0x81, 0x42, 0x0e, 0xbf, 0x99, 0x22, 0x21, 0xaa, 0xec, 0x4c, 0x4d, 0x75, 0x11,
	0xb4, 0x51, 0x82, 0x39, 0x6e, 0x05, 0x33, 0xb6, 0xa1, 0x16, 0xab, 0x26, 0x76, 0x1a, 0x53, 0xe5,
	0xa7, 0x31, 0x53, 0x27, 0xb6, 0xd9, 0xe9, 0x13, 0xdb, 0x2b, 0x58, 0x34, 0xa9, 0x3d, 0xb8, 0xda,
	0xf6, 0xfc, 0xc3, 0xe0, 0x38, 0xdc, 0xe6, 0x42, 0x30, 0xdb, 0x83, 0x94, 0x8f, 0x46, 0xec, 0xc8,
	0x43, 0x9e, 0x46, 0x4b, 0x33, 0xcc, 0x57, 0xa0, 0x1e, 0x39, 0x73, 0x68, 0x86, 0xf7, 0x9a, 0xf2,
	0xe7, 0x40, 0xd9, 0x89, 0x40, 0x7e, 0x1c, 0x1c, 0x87, 0xc2, 0xf4, 0x8e, 0xbf, 0x8d, 0xdf, 0xcf,
	0x03, 0x61, 0xb3, 0x39, 0x31, 0x61, 0x12, 0x6e, 0x28, 0xd9, 0x29, 0x37, 0x94, 0x47, 0xb0, 0x24,
	0xf4, 0x83, 0x78, 0xc5, 0x7c, 0xa0, 0x09, 0x57, 0x14, 0x62, 0xb5, 0x4b, 0x87, 0x12, 0x69, 0x77,
	0xce, 0x71, 0x87, 0x12, 0x69, 0x1e, 0xd2, 0xa6, 0xd3, 0xdc, 0x2b, 0xa7, 0x53, 0x71, 0x6a, 0x3a,
	0x69, 0xa6, 0xc2, 0x52, 0xdc, 0x54, 0x38, 0x65, 0xf4, 0xe6, 0xc2, 0x70, 0xcc, 0xe8, 0xfd, 0x00,
	0x1a, 0xd2, 0x6c, 0xa4, 0x0c, 0x92, 0xc2, 0xcb, 0x40, 0x58, 0x86, 0xa4, 0x49, 0x32, 0x76, 0x8a,
	0x56, 0x79, 0x9d, 0xe3, 0xbc, 0x6a, 0xfa, 0x71, 0xde, 0xb4, 0x81, 0xad, 0x96, 0x62, 0x60, 0x7b,
	0x12, 0x39, 0x11, 0x04, 0x67, 0xce, 0x08, 0xc5, 0x98, 0xc8, 0xb5, 0x50, 0x10, 0xb8, 0x7b, 0xe6,
	0x8c, 0x4c, 0xe9, 0xce, 0xc3, 0x3e, 0xc8, 0x26, 0xdc, 0x15, 0xfd, 0x49, 0xf1, 0xc4, 0xe1, 0x54,
	0x98, 0x47, 0xb9, 0x73, 0x8d, 0xa3, 0xed, 0x25, 0x9c, 0x72, 0x12, 0x44, 0x91, 0x7e, 0x1c, 0x01,
	0xb7, 0xd2, 0x4a, 0xa2, 0xec, 0x71, 0x47, 0x8e, 0x00, 0x49, 0x6c, 0x5f, 0x5a, 0xc2, 0x82, 0x17,
	0x9c, 0xa3, 0xd4, 0x53, 0x33, 0x2b, 0x23, 0xfb, 0x72, 0x17, 0x2d, 0x74, 0xc1, 0xb9, 0xf1, 0x27,
	0x19, 0x68, 0xb0, 0x89, 0x16, 0x5b, 0xc3, 0x9f, 0x02, 0x72, 0x9b, 0xd7, 0x5c, 0xc2, 0x15, 0x86,
	0x2b, 0x57, 0xf0, 0x27, 0x80, 0x4b, 0xd2, 0xf2, 0xc6, 0xd4, 0x15, 0x0b, 0xb8, 0x19, 0x5f, 0xc0,
	0x11, 0x93, 0xde, 0xb9, 0xc1, 0x55, 0x3c, 0x06, 0x21, 0x9f, 0x42, 0x99, 0xcd, 0x7c, 0x9c, 0xb8,
	0xc2, 0x63, 0x78, 0x4d, 0xa9, 0xed, 0x53, 0x8b, 0x90, 0x65, 0x1d, 0x8b, 0xcf, 0x34, 0x37, 0x9d,
	0x7c, 0x8a, 0x9b, 0x8e, 0xc6, 0x21, 0x76, 0x00, 0x9e, 0xd1, 0x2b, 0x46, 0x84, 0xd0, 0xf3, 0x99,
	0xa4, 0xf4, 0x92, 0x5e, 0x59, 0x27, 0xf6, 0xc8, 0x11, 0xa6, 0xc3, 0x82, 0x59, 0x7e, 0x49, 0xaf,
	0xb6, 0x11, 0xc0, 0xe6, 0x16, 0x4b, 0x8e, 0xd8, 0x44, 0xc1, 0x2c, 0xbd, 0xa4, 0x57, 0x9c, 0x47,
	0x58, 0x50, 0x7b, 0x46, 0xaf, 0xb6, 0x28, 0x17, 0xc5, 0x3d, 0x9f, 0x11, 0xdd, 0xb7, 0x2f, 0x98,
	0xec, 0x1d, 0x73, 0x23, 0xa9, 0xf8, 0xf6, 0xc5, 0x33, 0x7a, 0x25, 0x5d, 0x5a, 0x8a, 0x2c, 0x7d,
	0xe8, 0xf5, 0x85, 0xf0, 0x20, 0xad, 0x35, 0x51, 0xa3, 0xcc, 0xb9, 0x97, 0xf8, 0xdb, 0xf8, 0xe3,
	0x0c, 0xd4, 0x58, 0xfb, 0x91, 0xef, 0xe3, 0x2c, 0x12, 0x1e, 0xa1, 0x99, 0xc8, 0x23, 0xf4, 0xb1,
	0x60, 0x9b, 0x7c, 0x13, 0xc9, 0xce, 0xde, 0x44, 0x70, 0x6c, 0xf8, 0x0e, 0xf2, 0x21, 0x94, 0xf9,
	0xc4, 0x60, 0x8c, 0x24, 0x17, 0x1b, 0xe0, 0x58, 0x87, 0xcc, 0x12, 0xa2, 0x3d, 0xe3, 0x3e, 0x6e,
	0x9a, 0x61, 0x9c, 0x93, 0xb8, 0xec, 0x2b, 0x73, 0x78, 0xca, 0x30, 0x14, 0x66, 0xf8, 0xb8, 0xe9,
	0x56, 0xe7, 0xb9, 0xa4, 0xd5, 0xd9, 0x70, 0xa1, 0xc4, 0x86, 0x1a, 0x3b, 0x9b, 0x52, 0x68, 0x26,
	0xad, 0x50, 0x26, 0x6a, 0xd8, 0x6c, 0xd7, 0x61, 0x9c, 0x34, 0x2b, 0x44, 0x0d, 0x3b, 0xa0, 0xac,
	0x20, 0xd6, 0x70, 0xd7, 0xb3, 0xd0, 0x8c, 0x2b, 0x0c, 0x9c, 0x25, 0xb3, 0xec, 0x7a, 0x87, 0x1c,
	0x60, 0xfc, 0xf9, 0x0c, 0x54, 0xb4, 0x35, 0x8b, 0x76, 0x7d, 0x45, 0x4e, 0xbe, 0xc0, 0xe3, 0x2b,
	0x20, 0x36, 0x1e, 0x3b, 0x37, 0xcc, 0x5a, 0x3f, 0x36, 0x40, 0xeb, 0x62, 0x2a, 0x63, 0xce, 0x6c,
	0xcc, 0x98, 0x24, 0xfb, 0x25, 0xe7, 0x2f, 0xfb, 0xbd, 0x31, 0x07, 0x79, 0x86, 0x6a, 0x7c, 0x06,
	0x0b, 0x5a, 0x33, 0xb8, 0xb1, 0xe5, 0x75, 0x09, 0x60, 0x7c, 0x5f, 0x65, 0x66, 0x75, 0x3c, 0xa7,
	0xbe, 0x73, 0x72, 0x25, 0xdd, 0x09, 0xe9, 0x80, 0xd3, 0x45, 0xb8, 0x2d, 0x72, 0x10, 0x52, 0xe6,
	0x35, 0x3d, 0xdc, 0x8c, 0x9f, 0xcf, 0xc0, 0xa2, 0x56, 0xfc, 0xb6, 0xe3, 0xda, 0x43, 0xe7, 0x87,
	0x28, 0x71, 0x04, 0xce, 0xa9, 0x9b, 0xa8, 0x80, 0x83, 0xbe, 0x4c, 0x05, 0x6c, 0x2b, 0xe1, 0xde,
	0xc6, 0xdc, 0x9b, 0x5d, 0x6c, 0x86, 0x80, 0x30, 0xd3, 0xbe, 0xe8, 0x5d, 0x1a, 0x7f, 0x3d, 0x0b,
	0x4b, 0xa2, 0x09, 0xe8, 0xbb, 0xed, 0x30, 0x41, 0x73, 0x2f, 0x38, 0x25, 0x9f, 0x42, 0x8d, 0x91,
	0xcf, 0xf2, 0xe9, 0xa9, 0x13, 0x84, 0x54, 0x9e, 0xe1, 0xa7, 0x70, 0x63, 0x26, 0x6f, 0x30, 0x54,
	0x53, 0x60, 0x92, 0xcf, 0xa0, 0x82, 0x59, 0xb9, 0xbd, 0x4b, 0x8c, 0x55, 0x73, 0x3a, 0x23, 0x1f,
	0x8b, 0x9d, 0x1b, 0x26, 0x04, 0xd1, 0xc8, 0x7c, 0x06, 0x15, 0x1c, 0xe6, 0x73, 0xa4, 0x75, 0x82,
	0xd9, 0x4d, 0x8d, 0x05, 0xcb, 0x3c, 0x8e, 0x46, 0xa6, 0x05, 0x35, 0xce, 0xee, 0x04, 0x25, 0x85,
	0x87, 0xea, 0xda, 0x74, 0x76, 0x49, 0x6b, 0xd6, 0xf8, 0xb1, 0xf6, 0xbd, 0x51, 0x86, 0x62, 0xe8,
	0x3b, 0xa7, 0xa7, 0xd4, 0x37, 0x56, 0x14, 0x69, 0x18, 0x1f, 0xa7, 0xdd, 0x90, 0x8e, 0x99, 0x06,
	0x61, 0xfc, 0xeb, 0x0c, 0x54, 0x04, 0x67, 0xfe, 0x91, 0xdd, 0x03, 0xd6, 0x12, 0x96, 0xd1, 0xb2,
	0x66, 0x08, 0x7d, 0x07, 0xe6, 0x47, 0x4c, 0xdd, 0x61, 0xea, 0x78, 0xcc, 0x37, 0xa0, 0x2e, 0xc1,
	0x42, 0x92, 0x5f, 0x87, 0x45, 0x14, 0xec, 0x03, 0x2b, 0x74, 0x86, 0x96, 0x4c, 0x14, 0x4e, 0xfe,
	0x0b, 0x3c, 0xa9, 0xe7, 0x0c, 0xf7, 0x44, 0x82, 0xb8, 0xea, 0x72, 0x4a, 0x05, 0x77, 0xe0, 0x1f,
	0x4c, 0x85, 0x4a, 0x68, 0xe2, 0x52, 0x85, 0xfa, 0xbf, 0x0b, 0xb0, 0x3a, 0x95, 0x24, 0x54, 0x28,
	0x75, 0x14, 0x3b, 0x74, 0x46, 0xc7, 0x9e, 0x3a, 0x0a, 0xc8, 0x68, 0x47, 0xb1, 0xbb, 0x2c, 0x45,
	0x1e, 0x05, 0x50, 0x58, 0x96, 0x53, 0x16, 0x6d, 0xf9, 0x4a, 0x59, 0xcf, 0xa2, 0x2a, 0xf9, 0x61,
	0x7c, 0x1b, 0x4c, 0x56, 0x27, 0xe1, 0xba, 0xf4, 0xb6, 0x38, 0x9e, 0x82, 0x05, 0xe4, 0xff, 0x83,
	0xa6, 0x5a, 0x19, 0x42, 0xb3, 0xd0, 0x2c, 0x0f, 0xac, 0xa6, 0xaf, 0xbe, 0xa2, 0xa6, 0x98, 0x91,
	0x15, 0x75, 0xe7, 0x15, 0xb9, 0xa8, 0x78, 0x81, 0xaa, 0xae, 0x73, 0x78, 0x43, 0xd6, 0x85, 0x9a,
	0xc2, 0x74, 0x8d, 0xf9, 0xd7, 0xea, 0x1b, 0x1a, 0x90, 0x63, 0xd5, 0x9a, 0xb7, 0x44, 0xc1, 0x2a,
	0x49, 0xaf, 0xf7, 0x0c, 0x56, 0x2e, 0x6c, 0x27, 0x94, 0x7d, 0xd4, 0x0c, 0x1f, 0x05, 0xac, 0xef,
	0xf1, 0x2b, 0xea, 0xfb, 0x82, 0x67, 0x8e, 0xe9, 0x4e, 0x4b, 0x17, 0xd3, 0xc0, 0x60, 0xed, 0xef,
	0xe5, 0xa0, 0x1e, 0x2f, 0x85, 0xb1, 0x1e, 0xb1, 0x5d, 0x49, 0x99, 0x59, 0x72, 0x4e, 0x0e, 0xde,
	0xe7, 0x62, 0xf3, 0xf4, 0x01, 0x5a, 0x36, 0xe5, 0x00, 0x4d, 0x3f, 0xb7, 0xca, 0xbd, 0xca, 0x8d,
	0x21, 0xff, 0x5a, 0x6e, 0x0c, 0x85, 0x34, 0x37, 0x86, 0xaf, 0xcd, 0x3c, 0xf7, 0xe6, 0xd6, 0xe7,
	0xd4, 0x33, 0xef, 0x27, 0xb3, 0xcf, 0xbc, 0xb9, 0x48, 0x3e, 0xeb, 0xbc, 0x5b, 0x3b, 0xad, 0x2f,
	0xcd, 0x38, 0x6d, 0xd2, 0xce, 0xef, 0x53, 0xce, 0xbb, 0xcb, 0x5f, 0xe2, 0xbc, 0x7b, 0xed, 0x8f,
	0x33, 0x40, 0xa6, 0x57, 0x07, 0x79, 0xca, 0xcf, 0x26, 0x5d, 0x3a, 0x14, 0x9c, 0xfb, 0xfd, 0xd7,
	0x5b, 0x61, 0x72, 0x42, 0xc8, 0xdc, 0xe4, 0x03, 0x58, 0xd4, 0xef, 0x76, 0xe9, 0x86, 0x85, 0x9a,
	0x49, 0xf4, 0xa4, 0xc8, 0x44, 0xa6, 0xf9, 0x8c, 0xe4, 0x5f, 0xe9, 0x33, 0x52, 0x78, 0xa5, 0xcf,
	0xc8, 0x5c, 0xdc, 0x67, 0x64, 0xed, 0xdf, 0x65, 0x60, 0x31, 0x65, 0x12, 0xff, 0xf8, 0xfa, 0xcc,
	0xe6, 0x5e, 0x8c, 0xad, 0x65, 0xc5, 0xdc, 0xd3, 0x39, 0xda, 0xae, 0x34, 0xab, 0xb2, 0xa1, 0x08,
	0xc4, 0x4e, 0xf5, 0xf0, 0x55, 0xdc, 0x25, 0xca, 0x61, 0xea, 0xd9, 0xd7, 0xfe, 0x7e, 0x16, 0x2a,
	0x5a, 0x22, 0xa3, 0x22, 0x9f, 0xb2, 0x9a, 0xc7, 0x23, 0x97, 0x2d, 0xd1, 0x2c, 0x82, 0xee, 0xeb,
	0x38, 0x39, 0x31, 0x9d, 0x2f, 0x2e, 0x21, 0x48, 0x22, 0xc2, 0x3a, 0x2c, 0xca, 0x73, 0x63, 0x1a,
	0x39, 0x66, 0x8b, 0xbd, 0x46, 0xb8, 0x00, 0x88, 0x46, 0x22, 0xfe, 0x07, 0x52, 0xc7, 0x8d, 0xc6,
	0x4e, 0x3b, 0x87, 0x5b, 0x10, 0xce, 0x07, 0x62, 0x10, 0xd9, 0x3c, 0xff, 0x10, 0x96, 0x95, 0xf7,
	0x41, 0x2c, 0x07, 0x3f, 0xed, 0x21, 0xd2, 0xcb, 0x40, 0xcb, 0xf2, 0x1d, 0xb8, 0x93, 0x68, 0x53,
	0x22, 0x2b, 0xf7, 0x5a, 0xbb, 0x19, 0x6b, 0x9d, 0x5e, 0xc2, 0xda, 0xff, 0x0f, 0xb5, 0x18, 0xa3,
	0xfc, 0xf1, 0x0d, 0x79, 0xd2, 0x14, 0xc5, 0x29, 0xaa, 0x9b, 0xa2, 0xd6, 0xfe, 0x28, 0x07, 0x64,
	0x9a, 0x57, 0xff, 0x24, 0x9b, 0x30, 0x3d, 0x31, 0x73, 0x29, 0x13, 0xf3, 0xcf, 0x4c, 0x7e, 0x88,
	0x2c, 0xa2, 0xda, 0xe1, 0x3f, 0x5f, 0x9c, 0x0d, 0x95, 0x20, 0x5b, 0xf1, 0x49, 0xd2, 0x45, 0xaa,
	0x14, 0xbb, 0x29, 0xa8, 0x09, 0x50, 0x09, 0x4f, 0xa9, 0x23, 0x98, 0xb3, 0xdd, 0xfe, 0x99, 0xe7,
	0x0b, 0x3e, 0xf8, 0xcd, 0x2f, 0xbd, 0x7d, 0xae, 0xb7, 0x30, 0x3f, 0x4a, 0x6d, 0xa6, 0x28, 0xcc,
	0xf8, 0x10, 0x2a, 0x1a, 0x98, 0x94, 0xa1, 0xb0, 0xdb, 0xd9, 0xdb, 0x38, 0x68, 0xdc, 0x20, 0x35,
	0x28, 0x9b, 0xed, 0xcd, 0x83, 0xe7, 0x6d, 0xb3, 0xbd, 0xd5, 0xc8, 0x90, 0x12, 0xe4, 0x77, 0x0f,
	0xba, 0xbd, 0x46, 0xd6, 0x58, 0x83, 0xa6, 0x28, 0x71, 0xfa, 0x6c, 0xe8, 0x57, 0xf3, 0xca, 0xa2,
	0x89, 0x89, 0x42, 0xc9, 0xff, 0x1a, 0x54, 0x75, 0xf1, 0x46, 0xcc, 0x88, 0x84, 0xff, 0x09, 0x53,
	0xef, 0x3d, 0x8d, 0x57, 0x6f, 0x02, 0xf7, 0x3e, 0x18, 0xa8, 0x6c, 0xd9, 0x98, 0xdc, 0x9a, 0x72,
	0x8c, 0x8b, 0xfa, 0x51, 0x6c, 0x1a, 0xfe, 0x14, 0xd4, 0xe3, 0xe7, 0x20, 0x82, 0x23, 0xa5, 0xa9,
	0xac, 0x2c, 0x77, 0xec, 0x60, 0x84, 0x7c, 0x07, 0x1a, 0xc9, 0x73, 0x14, 0x21, 0x3c, 0xcf, 0xc8,
	0x3f, 0xef, 0xc4, 0x8f, 0x56, 0xc8, 0x0e, 0x2c, 0xa5, 0x09, 0x78, 0x38, 0x3f, 0x66, 0x9b, 0x39,
	0xc8, 0xb4, 0x10, 0x47, 0xbe, 0x2e, 0xce, 0xd3, 0x0a, 0x38, 0xfc, 0xf7, 0xe3, 0xf5, 0x6b, 0xc4,
	0x5e, 0xe7, 0x7f, 0xb4, 0x93, 0xb5, 0x73, 0x80, 0x08, 0x46, 0x1a, 0x50, 0x3d, 0x38, 0x6c, 0xef,
	0x5b, 0x9b, 0x3b, 0xad, 0xfd, 0xfd, 0xf6, 0x6e, 0xe3, 0x06, 0x21, 0x50, 0x47, 0x17, 0x8a, 0x2d,
	0x05, 0xcb, 0x30, 0x98, 0x38, 0xd7, 0x94, 0xb0, 0x2c, 0x59, 0x82, 0x46, 0x67, 0x3f, 0x01, 0xcd,
	0x91, 0x26, 0x2c, 0x1d, 0xb6, 0xb9, 0xd7, 0x45, 0xac, 0xdc, 0x3c, 0x53, 0x1a, 0x44, 0x77, 0x99,
	0xd2, 0xf0, 0x85, 0x3d, 0x1c, 0xd2, 0x50, 0xac, 0x03, 0x29, 0x4b, 0xff, 0x8d, 0x0c, 0x2c, 0x27,
	0x12, 0xa2, 0xc3, 0x08, 0x2e, 0x49, 0xc7, 0x65, 0xe8, 0x2a, 0x02, 0xe5, 0x6a, 0x7a, 0x0f, 0x16,
	0x94, 0x35, 0x2d, 0xb1, 0x2b, 0x35, 0x54, 0x82, 0x44, 0xfe, 0x00, 0x16, 0x35, 0xa3, 0x5c, 0x82,
	0x57, 0x10, 0x2d, 0x49, 0x64, 0x30, 0x2c, 0xb8, 0xf9, 0x94, 0xca, 0xfb, 0xcf, 0x02, 0xa8, 0x4e,
	0x5e, 0x9b, 0x50, 0x1c, 0x39, 0x98, 0x47, 0x58, 0x71, 0xe4, 0x27, 0x79, 0x00, 0xf3, 0xc1, 0x99,
	0x77, 0xf1, 0x43, 0xea, 0x7b, 0x7a, 0x93, 0x4a, 0x66, 0x12, 0x6c, 0xfc, 0xf7, 0x2c, 0xbc, 0x91,
	0x56, 0x03, 0x27, 0x01, 0x03, 0xcf, 0xf6, 0x75, 0x67, 0x6a, 0x0b, 0xd2, 0x02, 0x0b, 0xcf, 0x98,
	0xfc, 0x83, 0x69, 0x56, 0x01, 0x07, 0xf3, 0x7e, 0x89, 0x2f, 0xf4, 0x53, 0x67, 0x93, 0xca, 0x3e,
	0x1e, 0x72, 0xe9, 0x23, 0x63, 0x46, 0x00, 0xf2, 0x06, 0x40, 0x10, 0x25, 0xcb, 0x2b, 0x0f, 0x51,
	0xfa, 0xdb, 0x50, 0x77, 0x46, 0xc8, 0x09, 0xa9, 0x4f, 0x2f, 0x6c, 0x9f, 0x3b, 0x62, 0x64, 0xcc,
	0x04, 0x14, 0xbb, 0x9e, 0x40, 0xe4, 0x42, 0x61, 0x12, 0x4c, 0xee, 0x41, 0x25, 0x79, 0xb1, 0x24,
	0x63, 0xea, 0x20, 0x62, 0x40, 0x35, 0x48, 0xde, 0x89, 0xc8, 0x99, 0x31, 0x18, 0x2b, 0x85, 0x1b,
	0xd1, 0xb9, 0xab, 0x00, 0xf0, 0x63, 0x1d, 0x0d, 0x64, 0xbc, 0x80, 0xb5, 0xd9, 0x14, 0x26, 0x9f,
	0x41, 0x81, 0x91, 0x53, 0x1e, 0x83, 0x7f, 0x25, 0x3a, 0xb9, 0xbb, 0x66, 0x4c, 0x4c, 0x9e, 0xc7,
	0x58, 0x87, 0x39, 0x61, 0xd7, 0x6e, 0x40, 0x4e, 0xde, 0x24, 0xca, 0x9b, 0xec, 0x27, 0x21, 0x90,
	0x1f, 0x45, 0xbe, 0xdd, 0xf8, 0xdb, 0x58, 0x55, 0x57, 0x02, 0x13, 0x8b, 0xe0, 0xe7, 0xf3, 0xb0,
	0x92, 0x4c, 0x51, 0xd7, 0x0b, 0x8a, 0xb1, 0xf9, 0xcf, 0x4f, 0x2d, 0x05, 0x88, 0x7c, 0x94, 0x60,
	0x2e, 0xb1, 0x15, 0x80, 0xa8, 0x3a, 0x23, 0x91, 0xeb, 0xe0, 0x71, 0x52, 0x85, 0xe0, 0x1c, 0xb1,
	0x26, 0x6f, 0x61, 0x60, 0x9f, 0x12, 0x1a, 0xc5, 0x47, 0x53, 0x1a, 0x45, 0x3e, 0x2d, 0x53, 0x42,
	0xc1, 0x68, 0xc3, 0x6a, 0xe4, 0xc5, 0x1c, 0xaf, 0xb3, 0x90, 0x96, 0x7d, 0x59, 0x61, 0xef, 0xea,
	0x95, 0x3f, 0x85, 0x66, 0x54, 0x4c, 0xa2, 0x19, 0x73, 0x69, 0xe5, 0xac, 0x28, 0x74, 0x33, 0xd6,
	0x9e, 0xcf, 0x61, 0x2d, 0x46, 0xaf, 0x78, 0x93, 0x8a, 0x69, 0x45, 0xad, 0x6a, 0x04, 0x8c, 0x35,
	0x6a, 0x17, 0x6e, 0xc5, 0xca, 0x4a, 0xb4, 0xab, 0x94, 0x56, 0x58, 0x53, 0x2b, 0x2c, 0xd6, 0x32,
	0xe3, 0x37, 0xe6, 0x80, 0x7c, 0x77, 0x42, 0xfd, 0x2b, 0xbc, 0x2e, 0x1c, 0xbc, 0xea, 0x7a, 0x86,
	0xb4, 0xcb, 0x66, 0x5f, 0xeb, 0xa6, 0x7e, 0xda, 0xed, 0xfa, 0xfc, 0xab, 0x6f, 0xd7, 0x17, 0x5e,
	0x75, 0xbb, 0xfe, 0x2d, 0xa8, 0x39, 0xa7, 0xae, 0xc7, 0xc4, 0x1e, 0xa6, 0xf5, 0x06, 0xcd, 0xb9,
	0x7b, 0xb9, 0x07, 0x55, 0xb3, 0x2a, 0x80, 0x4c, 0xe7, 0x0d, 0xc8, 0x67, 0x11, 0x12, 0x1d, 0x9c,
	0x62, 0xf4, 0x09, 0x5d, 0xe0, 0x69, 0x0f, 0x4e, 0xa9, 0x30, 0x43, 0xe3, 0x84, 0x95, 0x99, 0x19,
	0x3c, 0x20, 0xf7, 0xa1, 0x1e, 0x78, 0x13, 0xbf, 0x8f, 0x1a, 0x35, 0x92, 0xa1, 0xc4, 0xfd, 0x3c,
	0x39, 0xf4, 0x50, 0x7a, 0x9a, 0x2c, 0x4e, 0x02, 0x6a, 0x8d, 0x9c, 0x20, 0x60, 0xaa, 0x58, 0xdf,
	0x73, 0x43, 0xdf, 0x1b, 0x0a, 0x77, 0x81, 0x85, 0x49, 0x40, 0xf7, 0x78, 0xca, 0x26, 0x4f, 0x20,
	0x1f, 0x45, 0x4d, 0x1a, 0xdb, 0x8e, 0x1f, 0x34, 0x01, 0x9b, 0x24, 0x7b, 0x8a, 0xba, 0xba, 0xed,
	0xf8, 0xaa, 0x2d, 0xec, 0x23, 0x48, 0xdc, 0xfa, 0xaf, 0x24, 0x6f, 0xfd, 0xff, 0x5c, 0xfa, 0xad,
	0x7f, 0xee, 0x21, 0xf9, 0x48, 0x14, 0x3d, 0x3d, 0xc4, 0x5f, 0xea, 0xf2, 0xff, 0x74, 0x30, 0x83,
	0xfa, 0x97, 0x09, 0x66, 0x30, 0x9f, 0x16, 0xcc, 0xe0, 0x43, 0xa8, 0xe0, 0xdd, 0x74, 0xeb, 0x0c,
	0xfd, 0xa4, 0xb9, 0xfb, 0x43, 0x43, 0xbf, 0xbc, 0xbe, 0xe3, 0xb8, 0xa1, 0x09, 0xbe, 0xfc, 0x19,
	0x4c, 0xc7, 0x15, 0x58, 0xf8, 0x09, 0xc6, 0x15, 0x10, 0xb7, 0xe7, 0xd7, 0xa1, 0x24, 0xc7, 0x89,
	0x31, 0xdb, 0x13, 0xdf, 0x1b, 0xc9, 0x23, 0x57, 0xf6, 0x9b, 0xd4, 0x21, 0x1b, 0x7a, 0x22, 0x73,
	0x36, 0xf4, 0x8c, 0x9f, 0x81, 0x8a, 0x36, 0xd5, 0xc8, 0x9b, 0xfc, 0x14, 0xc3, 0xa5, 0x43, 0x69,
	0xe4, 0xe6, 0x54, 0x2c, 0x0b, 0x68, 0x67, 0xc0, 0x64, 0x8b, 0x81, 0xe3, 0x53, 0x0c, 0xd4, 0x61,
	0x89, 0xf0, 0x1f, 0xd2, 0xd1, 0x41, 0x25, 0x98, 0x1c, 0x6e, 0xfc, 0x2c, 0x2c, 0xc6, 0xc6, 0x56,
	0xb0, 0xef, 0xfb, 0x30, 0x87, 0x74, 0x93, 0x1b, 0x4c, 0x3c, 0x28, 0x80, 0x48, 0xc3, 0x40, 0x28,
	0xfc, 0xf4, 0xde, 0x1a, 0xfb, 0xde, 0xb1, 0xd8, 0xd0, 0x2b, 0x02, 0x76, 0xe8, 0x7b, 0xc7, 0xc6,
	0x7f, 0xcd, 0x41, 0x6e, 0xc7, 0x1b, 0xeb, 0xbe, 0xd5, 0x99, 0x29, 0xdf, 0x6a, 0x61, 0x5c, 0xb2,
	0x94, 0xf1, 0x48, 0xe8, 0xe7, 0x78, 0x6e, 0x2d, 0x0d, 0x48, 0x0f, 0xa0, 0xce, 0xf8, 0x44, 0xe8,
	0x59, 0xe2, 0x4e, 0x13, 0x17, 0x14, 0xf8, 0xe2, 0xb3, 0x47, 0x61, 0xcf, 0xdb, 0xe6, 0x70, 0xb2,
	0x04, 0x39, 0x65, 0xaa, 0xc0, 0x64, 0xf6, 0xc9, 0x04, 0x0c, 0xbc, 0x8b, 0x25, 0xef, 0x8e, 0x8b,
	0x2f, 0xf2, 0x3e, 0x2c, 0xc6, 0xcb, 0xe5, 0xac, 0x48, 0xe8, 0x41, 0x7a, 0xc1, 0xc8, 0x93, 0x6e,
	0x02, 0xe3, 0x23, 0xd1, 0xed, 0xf1, 0x9c, 0x59, 0x3c, 0xa1, 0x14, 0x93, 0x34, 0xa6, 0x57, 0x52,
	0x37, 0x95, 0xd9, 0x3a, 0xbf, 0x0b, 0x95, 0x70, 0x78, 0x6e, 0x8d, 0xed, 0xab, 0xa1, 0x67, 0xcb,
	0x4b, 0x92, 0x10, 0x0e, 0xcf, 0x0f, 0x39, 0x84, 0x7c, 0x00, 0x30, 0x1a, 0x8f, 0xc5, 0xda, 0x43,
	0x69, 0x20, 0x9a, 0xca, 0x7b, 0x87, 0x87, 0x7c, 0xca, 0x99, 0xe5, 0xd1, 0x78, 0xcc, 0x7f, 0x92,
	0x2d, 0xa8, 0xa7, 0x46, 0xe9, 0xb8, 0x23, 0x6f, 0xac, 0x78, 0xe3, 0xf5, 0x94, 0xc5, 0x59, 0xeb,
	0xeb, 0xb0, 0xb5, 0xef, 0x00, 0xf9, 0x53, 0xc6, 0xca, 0xe8, 0x41, 0x59, 0xb5, 0x4f, 0x8f, 0x35,
	0x81, 0xd7, 0x04, 0x2b, 0xb1, 0x58, 0x13, 0x28, 0x15, 0xde, 0x87, 0x3a, 0x17, 0x8e, 0x15, 0xcb,
	0x07, 0x4d, 0x3a, 0x16, 0x77, 0xbd, 0x8c, 0xff, 0x91, 0x81, 0x02, 0x8f, 0x7b, 0xf1, 0x36, 0xcc,
	0x73, 0x7c, 0xe5, 0xa7, 0x2e, 0xbc, 0x8b, 0xb8, 0x8c, 0xdd, 0x13, 0x2e, 0xea, 0x6c, 0x59, 0x68,
	0x71, 0x82, 0x22, 0x31, 0x42, 0x8b, 0x15, 0x74, 0x17, 0xca, 0xaa, 0x6a, 0x6d, 0xea, 0x94, 0x64,
	0xcd, 0xe4, 0x0d, 0xc8, 0x9f, 0x79, 0x63, 0x69, 0xe5, 0x85, 0x88, 0x92, 0x26, 0xc2, 0xa3, 0xb6,
	0xb0, 0x3a, 0xa2, 0x3b, 0x68, 0x39, 0xd1, 0x16, 0x56, 0x89, 0x0c, 0x1e, 0x90, 0xe8, 0xe3, 0x5c,
	0x4a, 0x1f, 0x8f, 0x60, 0x9e, 0xf1, 0x01, 0xcd, 0xc5, 0x69, 0xf6, 0xa6, 0xf9, 0x2e, 0xd3, 0xe6,
	0xfa, 0xc3, 0xc9, 0x80, 0xea, 0x76, 0x76, 0x94, 0xcc, 0x05, 0x5c, 0x6a, 0xd1, 0xc6, 0x6f, 0x64,
	0x38, 0x7f, 0x61, 0xe5, 0x92, 0x07, 0x90, 0x77, 0xa5, 0x3b, 0x54, 0xa4, 0xb3, 0xa9, 0xfb, 0x9a,
	0x0c, 0xcf, 0x44, 0x0c, 0x36, 0x74, 0xe8, 0x44, 0xa4, 0x97, 0x5e, 0x33, 0x2b, 0xee, 0x64, 0xa4,
	0xcc, 0xd4, 0x5f, 0x91, 0xdd, 0x4a, 0x98, 0x78, 0x79, 0xef, 0xd5, 0x32, 0x5d, 0xd7, 0xbc, 0x97,
	0xf3, 0xb1, 0x1d, 0x53, 0x6a, 0x7c, 0x83, 0x53, 0xaa, 0x79, 0x2d, 0xff, 0x56, 0x16, 0x6a, 0xb1,
	0x16, 0xa1, 0xfb, 0x36, 0xdb, 0x00, 0xf8, 0x31, 0xb4, 0x18, 0x6f, 0xf4, 0x92, 0x15, 0x4a, 0xb9,
	0x46, 0xa7, 0x6c, 0x8c, 0x4e, 0xca, 0x9f, 0x31, 0xa7, 0xfb, 0x33, 0x3e, 0x82, 0x72, 0x14, 0x1f,
	0x2a, 0xde, 0x24, 0x56, 0x9f, 0xbc, 0xb5, 0x1a, 0x21, 0x45, 0x1e, 0x90, 0x05, 0xdd, 0x03, 0xf2,
	0x5b, 0x9a, 0xc3, 0xdc, 0x1c, 0x16, 0x63, 0xa4, 0x51, 0xf4, 0x27, 0xe2, 0x2e, 0x67, 0x7c, 0x06,
	0x15, 0xad, 0xf1, 0xba, 0xd3, 0x59, 0x26, 0xe6, 0x74, 0xa6, 0xee, 0x98, 0x67, 0xa3, 0x3b, 0xe6,
	0xc6, 0x2f, 0x66, 0xa1, 0xc6, 0xd6, 0x97, 0xe3, 0x9e, 0x1e, 0x7a, 0x43, 0xa7, 0x8f, 0xc7, 0xd2,
	0x6a, 0x85, 0x09, 0x41, 0x4b, 0xae, 0x33, 0xb1, 0xc4, 0xb8, 0x9c, 0xa5, 0xc7, 0x31, 0xe1, 0x4c,
	0x5a, 0xc5, 0x31, 0x31, 0xa0, 0xc6, 0x18, 0x23, 0x1e, 0x30, 0x47, 0x01, 0x9f, 0xcc, 0xca, 0x09,
	0xa5, 0x1b, 0x76, 0xc0, 0x39, 0xe4, 0xfb, 0xb0, 0xc8, 0x70, 0x30, 0x4a, 0xc1, 0xc8, 0x19, 0x0e,
	0x9d, 0xe8, 0xd2, 0x67, 0xce, 0x6c, 0x9c, 0x50, 0x6a, 0xda, 0x21, 0xdd, 0x63, 0x09, 0x22, 0x3e,
	0x54, 0x69, 0xe0, 0x04, 0x4c, 0x91, 0x93, 0x4e, 0xf6, 0xea, 0x5b, 0xfa, 0x6d, 0x44, 0xae, 0x31,
	0x73, 0xe2, 0x3e, 0x28, 0x77, 0xec, 0xc0, 0xfc, 0x89, 0x99, 0x54, 0x4c, 0xce, 0x24, 0xe3, 0x9f,
	0x65, 0xa1, 0xa2, 0x4d, 0xcb, 0xd7, 0xd9, 0x5d, 0xef, 0x4c, 0xb9, 0x11, 0x94, 0x75, 0x8f, 0x81,
	0xb7, 0xe2, 0x55, 0xe6, 0xd4, 0xcd, 0x40, 0x7d, 0x02, 0xdf, 0x82, 0x32, 0x5b, 0x75, 0x1f, 0xe2,
	0x71, 0x0b, 0x77, 0x11, 0x28, 0x21, 0xe0, 0x70, 0x72, 0x2c, 0x13, 0x1f, 0x63, 0x62, 0x21, 0x4a,
	0x7c, 0xcc, 0x12, 0xaf, 0xbb, 0x19, 0xf4, 0x09, 0x54, 0x45, 0xa9, 0x38, 0xa6, 0x42, 0x2d, 0x58,
	0xd2, 0x76, 0x6e, 0x35, 0xde, 0x66, 0x85, 0x57, 0xc7, 0x07, 0x5f, 0x64, 0x7c, 0x2c, 0x33, 0x96,
	0x5e, 0x95, 0xf1, 0x31, 0xff, 0x30, 0xb6, 0xd5, 0x65, 0x2b, 0x74, 0x55, 0x95, 0x7c, 0xec, 0x03,
	0x58, 0x94, 0xec, 0x6a, 0xe2, 0xda, 0xae, 0xeb, 0x4d, 0xdc, 0xbe, 0x88, 0x0e, 0x56, 0x32, 0x89,
	0x48, 0x3a, 0x8a, 0x52, 0x8c, 0x81, 0x8a, 0x7e, 0xc2, 0x5d, 0x5e, 0x1f, 0x42, 0x81, 0xcb, 0xe5,
	0x5c, 0xf8, 0x48, 0x67, 0x5c, 0x1c, 0x85, 0x3c, 0x80, 0x02, 0x17, 0xcf, 0xb3, 0x33, 0x99, 0x0d,
	0x47, 0x30, 0x5a, 0x40, 0x58, 0xc6, 0x3d, 0x1a, 0xfa, 0x4e, 0x3f, 0x88, 0xee, 0xb4, 0x17, 0xc2,
	0xab, 0xb1, 0xa8, 0x2b, 0x3a, 0xa5, 0x89, 0x30, 0xd1, 0x1e, 0xc5, 0x71, 0xd8, 0xc6, 0xb4, 0x18,
	0x2b, 0x43, 0x88, 0x4b, 0x43, 0x58, 0x39, 0xa6, 0xe1, 0x05, 0xa5, 0xae, 0xcb, 0x84, 0xa1, 0x3e,
	0x75, 0x43, 0xdf, 0x1e, 0xb2, 0x41, 0xe2, 0x3d, 0x78, 0x32, 0x55, 0x6a, 0x64, 0xef, 0xdc, 0x88,
	0x32, 0x6e, 0xaa, 0x7c, 0x9c, 0x77, 0x2c, 0x1f, 0xa7, 0xa5, 0xad, 0x7d, 0x1f, 0xd6, 0x66, 0x67,
	0x4a, 0x89, 0x5e, 0xf1, 0x20, 0xce, 0x55, 0xd4, 0x99, 0xff, 0xd0, 0xb3, 0x43, 0xde, 0x1a, 0x9d,
	0xb3, 0xec, 0x43, 0x45, 0x4b, 0x89, 0xf6, 0xfe, 0x0c, 0xb7, 0xd6, 0xe0, 0x07, 0xdb, 0x91, 0x5c,
	0xcf, 0x1f, 0xe1, 0x19, 0xfb, 0xc0, 0x8a, 0x4a, 0xcf, 0x98, 0xf3, 0x11, 0x1c, 0xdd, 0xb2, 0x8c,
	0x75, 0x98, 0x47, 0xc9, 0x5e, 0xdb, 0xe8, 0xae, 0x13, 0x06, 0x8d, 0x25, 0x20, 0xfb, 0x9c, 0x77,
	0xe9, 0xee, 0xbf, 0xff, 0x21, 0x07, 0x15, 0x0d, 0xcc, 0x76, 0x23, 0xf4, 0x99, 0xb6, 0x06, 0x8e,
	0x3d, 0xa2, 0xd2, 0xa1, 0xa1, 0x66, 0xd6, 0x10, 0xba, 0x25, 0x80, 0x6c, 0x2f, 0xb6, 0xcf, 0x4f,
	0x2d, 0x6f, 0x12, 0x5a, 0x03, 0x7a, 0xea, 0x53, 0xd9, 0xca, 0xaa, 0x7d, 0x7e, 0x7a, 0x30, 0x09,
	0xb7, 0x10, 0x26, 0xc3, 0xfd, 0x68, 0x58, 0x39, 0x15, 0xee, 0x27, 0xc2, 0x12, 0xbe, 0xe6, 0x7c,
	0x66, 0xe6, 0x95, 0xaf, 0x39, 0xd7, 0x16, 0x93, 0x1b, 0x68, 0x61, 0x7a, 0x03, 0xfd, 0x08, 0x56,
	0xf8, 0x06, 0x2a, 0x58, 0xb3, 0x95, 0x58, 0xc9, 0x4b, 0x98, 0x2a, 0x3a, 0xa9, 0x89, 0xbd, 0x0d,
	0xd6, 0x03, 0xc9, 0x96, 0x02, 0xe7, 0x87, 0x9c, 0x91, 0x65, 0x4c, 0xd6, 0x33, 0x51, 0x78, 0xd7,
	0xf9, 0x21, 0x95, 0xe1, 0x86, 0x62, 0x98, 0xe2, 0xde, 0xdf, 0xc8, 0x71, 0x93, 0x98, 0xf6, 0x65,
	0x1c, 0xb3, 0x2c, 0x30, 0xed, 0x4b, 0x1d, 0xf3, 0x09, 0xac, 0x8e, 0xe8, 0xc0, 0xb1, 0xe3, 0xc5,
	0x5a, 0x91, 0xe0, 0xb6, 0xc4, 0x93, 0xb5, 0x3c, 0x5d, 0xae, 0xb8, 0x33, 0x6a, 0xfc, 0xd0, 0x1b,
	0x1d, 0x3b, 0x5c, 0x66, 0xe1, 0x0e, 0x87, 0x79, 0xb3, 0xee, 0x4e, 0x46, 0x3f, 0x8d, 0x60, 0x96,
	0x25, 0x30, 0x6a, 0x50, 0xe9, 0x86, 0xde, 0x58, 0x0e, 0x73, 0x1d, 0xaa, 0xfc, 0x53, 0xc4, 0x6c,
	0xb8, 0x05, 0x37, 0x91, 0x25, 0xf4, 0xbc, 0xb1, 0x37, 0xf4, 0x4e, 0xaf, 0x62, 0x36, 0xfb, 0x7f,
	0x93, 0x81, 0xc5, 0x58, 0xaa, 0x60, 0xaf, 0x1f, 0x71, 0x7e, 0xa6, 0xee, 0x7b, 0x67, 0x62, 0x97,
	0xfd, 0xd8, 0x78, 0x71, 0x44, 0xce, 0xcc, 0xe4, 0x1d, 0xf0, 0x56, 0x14, 0xcb, 0x4b, 0x66, 0xe4,
	0x2c, 0xa5, 0x39, 0xcd, 0x52, 0x44, 0x7e, 0x19, 0xe5, 0x4b, 0x16, 0xf1, 0x4d, 0x71, 0x37, 0x73,
	0x20, 0xba, 0x9c, 0x8b, 0xdf, 0xde, 0xd2, 0xed, 0xfb, 0xb2, 0x05, 0x91, 0xd1, 0x3f, 0x30, 0x7e,
	0x3d, 0x03, 0x10, 0xb5, 0x0e, 0xef, 0x8f, 0x29, 0xb9, 0x25, 0x83, 0x9e, 0xfb, 0x9a, 0x8c, 0xf2,
	0x26, 0x54, 0xd5, 0x25, 0x0f, 0x29, 0x09, 0x95, 0xcd, 0x8a, 0x84, 0x31, 0x71, 0xe8, 0x1d, 0x98,
	0x3f, 0x1d, 0x7a, 0xc7, 0x28, 0xb1, 0x0a, 0xb9, 0x85, 0x7b, 0x0c, 0xd5, 0x39, 0x58, 0x4a, 0x23,
	0x91, 0xdc, 0x94, 0x4f, 0xbd, 0x07, 0xa2, 0x4b, 0x41, 0xc6, 0x5f, 0xc9, 0x2a, 0x4f, 0xf2, 0x88,
	0x12, 0xd7, 0xab, 0x77, 0x3f, 0x8a, 0xe7, 0xdd, 0x75, 0xae, 0x04, 0x9f, 0x41, 0xdd, 0xe7, 0x9b,
	0x92, 0xdc, 0xb1, 0xf2, 0xd7, 0xec, 0x58, 0x35, 0x3f, 0x26, 0xe9, 0xbc, 0x0b, 0x0d, 0x7b, 0x70,
	0x4e, 0xfd, 0xd0, 0xc1, 0x93, 0x39, 0x94, 0x8f, 0x85, 0xef, 0xb6, 0x06, 0x47, 0x41, 0xf4, 0x1d,
	0x98, 0x17, 0x71, 0x44, 0x14, 0xa6, 0x88, 0x02, 0x19, 0x81, 0x19, 0xa2, 0xf1, 0x8f, 0xa4, 0xeb,
	0x7a, 0x7c, 0x74, 0xaf, 0xa7, 0x8a, 0xde, 0xc3, 0xec, 0xb4, 0xb3, 0x84, 0x98, 0x48, 0xe2, 0xc0,
	0x4f, 0xf0, 0x23, 0x0e, 0x14, 0xc7, 0x7d, 0x71, 0xb2, 0xe6, 0x5f, 0x87, 0xac, 0xc6, 0xbf, 0xcd,
	0x40, 0x71, 0xc7, 0x1b, 0xef, 0x38, 0xfc, 0x02, 0x14, 0x2e, 0x13, 0xe5, 0x2c, 0x37, 0xc7, 0x3e,
	0xd1, 0x4d, 0xf0, 0x9a, 0x7b, 0xd0, 0xa9, 0x62, 0x5e, 0x2d, 0x2e, 0xe6, 0x7d, 0x0b, 0x6e, 0xe1,
	0x71, 0xbf, 0xef, 0x8d, 0x3d, 0x9f, 0x2d, 0x55, 0x7b, 0xc8, 0xc5, 0x3d, 0xcf, 0x0d, 0xcf, 0x24,
	0xef, 0xbc, 0x79, 0x42, 0xe9, 0xa1, 0x86, 0xb1, 0xa7, 0x10, 0x30, 0x06, 0xc2, 0x30, 0x3c, 0xb7,
	0xb8, 0x86, 0x2e, 0xe4, 0x51, 0xce, 0x51, 0xe7, 0x59, 0x42, 0x1b, 0xe1, 0x28, 0x91, 0x1a, 0x5f,
	0x87, 0xb2, 0x32, 0xf6, 0x90, 0xf7, 0xa0, 0x7c, 0xe6, 0x8d, 0x85, 0x45, 0x28, 0x13, 0xbb, 0x2b,
	0x2e, 0x7a, 0x6d, 0x96, 0xce, 0xf8, 0x8f, 0xc0, 0xf8, 0xed, 0x22, 0x14, 0x3b, 0xee, 0xb9, 0xe7,
	0xf4, 0xd1, 0xf9, 0x7d, 0x44, 0x47, 0x9e, 0x0c, 0x45, 0xc4, 0x7e, 0xa3, 0x27, 0x67, 0x14, 0xcb,
	0x31, 0x27, 0x3c, 0x39, 0x55, 0x14, 0xc7, 0x65, 0x98, 0xf3, 0xf5, 0x60, 0x8c, 0x05, 0x1f, 0xaf,
	0x0c, 0xa9, 0xfd, 0xb2, 0xa0, 0x85, 0x8a, 0x62, 0x65, 0x71, 0x4f, 0x66, 0x24, 0x19, 0x8f, 0x63,
	0x50, 0x46, 0x08, 0x12, 0xec, 0x36, 0x14, 0x85, 0xdd, 0x97, 0x5f, 0x14, 0xe5, 0xd6, 0x72, 0x01,
	0xc2, 0xd9, 0xe0, 0x53, 0xee, 0xae, 0xa1, 0x04, 0xd9, 0x9c, 0x59, 0x95, 0xc0, 0x2d, 0x36, 0xd7,
	0xee, 0x42, 0x85, 0xe3, 0x73, 0x94, 0x92, 0x38, 0x0a, 0x41, 0x10, 0x22, 0xa4, 0xc4, 0x34, 0x2d,
	0xa7, 0xc6, 0x34, 0xc5, 0xdb, 0x0d, 0x8a, 0xcb, 0xf2, 0x2e, 0x02, 0x8f, 0x64, 0xa9, 0xc1, 0x65,
	0x10, 0x61, 0x61, 0x53, 0xe1, 0x21, 0x3e, 0xa4, 0x4d, 0xe5, 0x2d, 0xa8, 0x9d, 0xd8, 0xc3, 0xe1,
	0xb1, 0xdd, 0x7f, 0xc9, 0x4d, 0x01, 0x55, 0xee, 0x2d, 0x24, 0x81, 0x68, 0x0b, 0xb8, 0x0b, 0x15,
	0x6d, 0x94, 0xd1, 0x85, 0x3c, 0x6f, 0x42, 0x34, 0xbe, 0x49, 0x0b, 0x5f, 0xfd, 0x35, 0x2c, 0x7c,
	0x9a, 0x2b, 0xfd, 0x7c, 0xdc, 0x95, 0xfe, 0x16, 0x72, 0x53, 0xe1, 0xa0, 0xdc, 0xe0, 0x51, 0x16,
	0xed, 0xc1, 0x80, 0x07, 0xdd, 0x79, 0x13, 0xaa, 0x82, 0x78, 0x3c, 0x7d, 0x81, 0xeb, 0x12, 0x1c,
	0xc6, 0x51, 0xee, 0x41, 0x95, 0xe9, 0xf3, 0x63, 0xdb, 0x19, 0xe0, 0xf6, 0xb7, 0xc8, 0x09, 0x6c,
	0x8f, 0xc2, 0x43, 0xdb, 0x19, 0x74, 0x79, 0x84, 0x1a, 0x85, 0x31, 0x52, 0x41, 0x38, 0xcc, 0x8a,
	0x40, 0xc1, 0x81, 0xfe, 0x10, 0x5d, 0xf6, 0x42, 0x8a, 0x61, 0x36, 0xea, 0x8f, 0x6f, 0x29, 0x4f,
	0x22, 0x9c, 0x86, 0xf2, 0x2f, 0x3f, 0xe9, 0xe6, 0x98, 0x4c, 0x7a, 0xe3, 0x07, 0xee, 0x2b, 0x31,
	0x01, 0x57, 0xa0, 0xe2, 0x81, 0x3b, 0x47, 0x20, 0x5f, 0xd7, 0x14, 0xd4, 0x26, 0x22, 0xdf, 0x4e,
	0x94, 0x3f, 0xeb, 0xa6, 0xeb, 0x1d, 0x00, 0x27, 0x60, 0xdb, 0x48, 0x40, 0xdd, 0x01, 0x46, 0xcb,
	0x28, 0x99, 0x65, 0x27, 0x78, 0xc6, 0x01, 0x3f, 0x5e, 0xcd, 0xb5, 0x05, 0x55, 0xbd, 0x9b, 0xa4,
	0x04, 0xf9, 0x83, 0xc3, 0xf6, 0x7e, 0xe3, 0x06, 0xa9, 0x40, 0xb1, 0xdb, 0xee, 0xf5, 0x76, 0xf1,
	0xd8, 0xbe, 0x0a, 0x25, 0x75, 0x17, 0x3e, 0xcb, 0xbe, 0x5a, 0x9b, 0x9b, 0xed, 0xc3, 0x5e, 0x7b,
	0x0b, 0xe3, 0x90, 0xf2, 0x68, 0xa4, 0xa4, 0xb1, 0x68, 0xfc, 0x5e, 0x0e, 0x2a, 0x1a, 0x2d, 0xae,
	0xe7, 0xb9, 0xf1, 0xd8, 0x4b, 0xd9, 0x64, 0xec, 0x25, 0xfd, 0x28, 0x42, 0xc4, 0xa7, 0x92, 0x47,
	0x11, 0x6f, 0x41, 0x4d, 0xc4, 0x71, 0xd4, 0x5c, 0x30, 0x0a, 0x66, 0x95, 0x03, 0x05, 0x47, 0xc6,
	0xf8, 0x1a, 0x88, 0x84, 0x37, 0x97, 0xc5, 0x71, 0x24, 0x07, 0xe1, 0xdd, 0x65, 0xbc, 0x78, 0x1e,
	0x78, 0xc3, 0x73, 0xca, 0x31, 0xb8, 0xe0, 0x57, 0x11, 0xb0, 0x9e, 0x88, 0x5d, 0x22, 0xd8, 0x9e,
	0x16, 0xe0, 0xa1, 0x60, 0x56, 0x39, 0x50, 0x54, 0xf4, 0xbe, 0x9c, 0x46, 0xdc, 0x21, 0x6d, 0x75,
	0x7a, 0x4e, 0xc4, 0xa6, 0xd0, 0xee, 0x94, 0xb5, 0xb0, 0x1c, 0x3b, 0x36, 0xd4, 0xf2, 0xbd, 0xda,
	0x6a, 0x48, 0xde, 0x03, 0x32, 0x1a, 0x8f, 0xad, 0x14, 0x3b, 0x5e, 0xde, 0x9c, 0x1f, 0x8d, 0xc7,
	0x3d, 0xcd, 0xcc, 0xf5, 0x63, 0x30, 0x31, 0xfe, 0x00, 0x48, 0x8b, 0xad, 0x53, 0x6c, 0xa2, 0xd2,
	0xb8, 0x22, 0xee, 0x9b, 0xd1, 0xb9, 0x6f, 0x0a, 0x93, 0xcb, 0xa6, 0x32, 0xb9, 0xeb, 0xd8, 0x81,
	0xf1, 0x10, 0x2a, 0x87, 0x5a, 0x80, 0xdc, 0xa8, 0xae, 0xac, 0x56, 0xd7, 0xe7, 0xf9, 0x52, 0xa6,
	0x91, 0x35, 0xfe, 0x6e, 0x86, 0x47, 0xac, 0x53, 0x0d, 0x8c, 0xe2, 0xee, 0xca, 0x53, 0xb6, 0x28,
	0xd6, 0x4a, 0x45, 0x9e, 0xa3, 0x89, 0x30, 0x29, 0x58, 0xbd, 0xe5, 0x9d, 0x9c, 0x04, 0x54, 0xba,
	0x66, 0x55, 0x10, 0x76, 0x80, 0x20, 0x29, 0x47, 0x33, 0x61, 0xdd, 0xe1, 0xe5, 0x07, 0xc2, 0x1f,
	0x8b, 0xc9, 0xd1, 0x7b, 0xf6, 0xa5, 0xa8, 0x35, 0xb8, 0x36, 0xf2, 0xf7, 0xdf, 0x14, 0xe1, 0x60,
	0x92, 0x34, 0x7c, 0x08, 0x25, 0x55, 0x6a, 0x7c, 0xb3, 0x94, 0x98, 0x2a, 0x9d, 0x6d, 0xc9, 0x68,
	0xd7, 0x88, 0xb5, 0x98, 0x2f, 0x20, 0x3c, 0xae, 0xe9, 0x68, 0xad, 0xfe, 0x2a, 0x90, 0x13, 0xc7,
	0x4f, 0x22, 0xf3, 0x05, 0xd5, 0xc0, 0x14, 0x0d, 0xdb, 0x38, 0x82, 0x45, 0xc9, 0x0f, 0x34, 0xe1,
	0x3e, 0x3e, 0x40, 0x99, 0x57, 0xf0, 0xeb, 0xec, 0x14, 0xbf, 0x36, 0x7e, 0xb9, 0x00, 0x45, 0x19,
	0x4f, 0x3a, 0x2d, 0x08, 0x72, 0x39, 0x1e, 0x04, 0xb9, 0x19, 0x8b, 0xf0, 0x88, 0xfb, 0xaf, 0xd8,
	0xba, 0xdf, 0x49, 0xee, 0xbe, 0xda, 0xb1, 0x43, 0x6c, 0x07, 0x16, 0xc7, 0x0e, 0x85, 0xf8, 0xb1,
	0x43, 0x5a, 0x5c, 0xe8, 0xb9, 0xf4, 0xb8, 0xd0, 0xb7, 0x80, 0x8b, 0x04, 0x9a, 0x4f, 0x6a, 0x09,
	0x01, 0x22, 0x5e, 0x86, 0x26, 0x41, 0x94, 0x92, 0x12, 0xc4, 0x6b, 0xef, 0xee, 0x1f, 0xc1, 0x1c,
	0x0f, 0x2d, 0x25, 0x62, 0x27, 0xc8, 0x2d, 0x42, 0xd0, 0x4a, 0xfe, 0xe5, 0x57, 0x9d, 0x4c, 0x81,
	0xab, 0x87, 0x1d, 0xad, 0xc4, 0xc2, 0x8e, 0xea, 0xc7, 0x21, 0xd5, 0xf8, 0x71, 0xc8, 0x03, 0x68,
	0x28, 0xc2, 0xa1, 0x71, 0xd1, 0x0d, 0xc4, 0xbd, 0xe9, 0xba, 0x84, 0x33, 0x8e, 0xb7, 0x1f, 0x44,
	0x5b, 0x5c, 0x3d, 0xb6, 0xc5, 0x31, 0x7e, 0xd4, 0x0a, 0x43, 0x3a, 0x1a, 0x87, 0x72, 0x8b, 0xd3,
	0x42, 0x71, 0xf3, 0x91, 0xe7, 0x57, 0xc1, 0xe4, 0xf0, 0xf2, 0xd9, 0xb1, 0x01, 0xf5, 0x13, 0xdb,
	0x19, 0x4e, 0x7c, 0x6a, 0xf9, 0xd4, 0x0e, 0x3c, 0x17, 0x17, 0x78, 0xb4, 0xdb, 0x8a, 0x2e, 0x6e,
	0x73, 0x1c, 0x13, 0x51, 0xcc, 0xda, 0x89, 0xfe, 0x89, 0xd7, 0x23, 0x75, 0x4a, 0xb0, 0xcd, 0x49,
	0x44, 0x50, 0xe0, 0x2e, 0x66, 0x9d, 0x7d, 0x6b, 0x7b, 0xb7, 0xf3, 0x74, 0xa7, 0xd7, 0xc8, 0xb0,
	0xcf, 0xee, 0xd1, 0xe6, 0x66, 0xbb, 0xbd, 0x85, 0x9b, 0x15, 0xc0, 0xdc, 0x76, 0xab, 0xb3, 0x2b,
	0xb6, 0xaa, 0x7c, 0xa3, 0x60, 0xfc, 0xd3, 0x2c, 0x54, 0xb4, 0xde, 0x90, 0x27, 0x6a, 0x10, 0x78,
	0xcc, 0x96, 0x3b, 0xd3, 0x3d, 0x5e, 0x97, 0x5c, 0x5c, 0x1b, 0x05, 0x15, 0xa9, 0x3b, 0x3b, 0x33,
	0x52, 0x37, 0x79, 0x1b, 0xe6, 0x6d, 0x5e, 0x82, 0x22, 0xba, 0xb0, 0xd3, 0x0b, 0xb0, 0xa0, 0xf9,
	0xdb, 0x22, 0x7e, 0x8c, 0xd8, 0x8a, 0x18, 0x5e, 0x5e, 0xfa, 0x5a, 0xab, 0xdd, 0x08, 0xc7, 0xa6,
	0x28, 0x28, 0x23, 0xce, 0xd5, 0xd5, 0xd6, 0x2e, 0xe8, 0x25, 0x93, 0xf9, 0x9d, 0xe9, 0xd8, 0x0c,
	0x57, 0xdf, 0xc6, 0xc7, 0x00, 0x51, 0x7f, 0xe2, 0xe4, 0xbb, 0x11, 0x27, 0x5f, 0x46, 0x23, 0x5f,
	0xd6, 0xf8, 0x87, 0x82, 0x75, 0x89, 0xb1, 0x50, 0x56, 0xbb, 0xf7, 0x41, 0xda, 0x11, 0x2d, 0xbc,
	0x9b, 0x31, 0x1e, 0xd2, 0x50, 0x5e, 0xfb, 0x5e, 0x10, 0x29, 0x1d, 0x95, 0x30, 0xc5, 0x6a, 0xb3,
	0xd3, 0xac, 0xf6, 0x4d, 0xa8, 0x62, 0x40, 0x42, 0x51, 0x91, 0x60, 0x57, 0x95, 0x91, 0x7d, 0x29,
	0xeb, 0x8e, 0xf1, 0xd8, 0x7c, 0x82, 0xc7, 0xfe, 0xad, 0x0c, 0x8f, 0x5e, 0x15, 0x35, 0x34, 0x62,
	0xb2, 0xaa, 0xcc, 0x38, 0x93, 0x15, 0xa8, 0xa6, 0x4a, 0x9f, 0xc1, 0x38, 0xb3, 0xe9, 0x8c, 0x33,
	0x9d, 0x25, 0xe7, 0x52, 0x59, 0xb2, 0xb1, 0x06, 0xcd, 0x2d, 0xca, 0x48, 0xd1, 0x1a, 0x0e, 0x13,
	0xb4, 0x34, 0x6e, 0xc1, 0xcd, 0x94, 0x34, 0x61, 0x80, 0xf9, 0x95, 0x0c, 0x2c, 0xb7, 0x78, 0xd0,
	0x9a, 0x1f, 0xdb, 0xbd, 0xec, 0x4f, 0xe1, 0xa6, 0xba, 0x68, 0xa1, 0x5d, 0x10, 0xd5, 0x23, 0x8e,
	0xc9, 0x3b, 0x1a, 0xda, 0xf5, 0x22, 0xb6, 0x67, 0x1a, 0x4d, 0x58, 0x49, 0xb6, 0x46, 0x34, 0x74,
	0x1b, 0x16, 0xb6, 0xe8, 0xf1, 0xe4, 0x74, 0x97, 0x9e, 0x47, 0x6d, 0x24, 0x90, 0x0f, 0xce, 0xbc,
	0x0b, 0x31, 0x31, 0xf0, 0x37, 0x7a, 0x62, 0x33, 0x1c, 0x2b, 0x18, 0xd3, 0xbe, 0x34, 0xe0, 0x23,
	0xa4, 0x3b, 0xa6, 0x7d, 0xe3, 0x09, 0x10, 0xbd, 0x1c, 0x31, 0x8a, 0x4c, 0xbb, 0x9a, 0x1c, 0x5b,
	0xc1, 0x55, 0x10, 0xd2, 0x91, 0xf4, 0x68, 0x83, 0x60, 0x72, 0xdc, 0xe5, 0x10, 0xe3, 0x1d, 0xa8,
	0x1e, 0xda, 0x57, 0x26, 0xfd, 0x41, 0x37, 0xf4, 0x1d, 0x17, 0x03, 0xb5, 0x8e, 0xed, 0x2b, 0xc6,
	0x8b, 0x55, 0xd4, 0x6a, 0x4c, 0x36, 0xfe, 0x71, 0x1e, 0xe6, 0x38, 0x26, 0xb9, 0x07, 0x95, 0x01,
	0x0d, 0x42, 0xc7, 0x45, 0x5e, 0x28, 0xef, 0x40, 0x6a, 0xa0, 0xa9, 0x8d, 0x2b, 0x3b, 0x1d, 0xbd,
	0x5f, 0x18, 0x1e, 0x65, 0x44, 0x44, 0x79, 0xea, 0xe2, 0x4e, 0x46, 0x32, 0x0c, 0x62, 0x3c, 0x66,
	0x4b, 0x3e, 0x7a, 0x62, 0x85, 0xc7, 0xab, 0x88, 0x9f, 0x8b, 0x47, 0x3a, 0x1c, 0x6f, 0x9d, 0xdc,
	0x8f, 0x85, 0xe5, 0x43, 0x07, 0xa5, 0x2a, 0x8a, 0xc5, 0x74, 0x45, 0x71, 0x4a, 0x21, 0x2c, 0xbd,
	0x5a, 0x21, 0xe4, 0x16, 0xc9, 0x6b, 0x14, 0x42, 0x78, 0x0d, 0x85, 0xf0, 0x35, 0xce, 0xa4, 0x6f,
	0x42, 0x09, 0x85, 0x2c, 0x6d, 0x0b, 0x63, 0xc2, 0x15, 0xdb, 0xc2, 0x3e, 0xd1, 0x34, 0x2a, 0xee,
	0x10, 0xa3, 0xed, 0x21, 0x26, 0xfd, 0xc1, 0x4f, 0xe6, 0xac, 0xef, 0x05, 0x14, 0x05, 0x94, 0x4d,
	0x68, 0xd7, 0x1e, 0xc9, 0x47, 0x8f, 0xf0, 0x37, 0x23, 0x1b, 0x46, 0xc2, 0xfc, 0xc1, 0xc4, 0xf1,
	0xe9, 0x40, 0xc6, 0xe3, 0x73, 0x70, 0x7d, 0x33, 0x08, 0xeb, 0x20, 0xd3, 0xee, 0x5c, 0x19, 0x5b,
	0xbf, 0x64, 0x16, 0x9d, 0xe0, 0x19, 0xfb, 0x34, 0x08, 0x34, 0x30, 0xba, 0xf8, 0xd8, 0xf3, 0xa5,
	0x84, 0x60, 0xfc, 0x66, 0x06, 0x1a, 0x62, 0x75, 0xa9, 0x34, 0x5d, 0xad, 0x2a, 0xcc, 0xf2, 0xdf,
	0xb8, 0x3e, 0xba, 0x9e, 0x01, 0x35, 0x34, 0x1a, 0x29, 0x71, 0x81, 0x1b, 0xbd, 0x2a, 0x0c, 0xb8,
	0x2d, 0x44, 0x86, 0x37, 0xa0, 0x22, 0xef, 0x89, 0x8c, 0x1c, 0xe9, 0x09, 0x5a, 0xe6, 0x17, 0x45,
	0xf6, 0x9c, 0xa1, 0x94, 0x36, 0x7c, 0x3b, 0x94, 0xbe, 0xa0, 0x45, 0x71, 0x68, 0x68, 0xfc, 0x93,
	0x0c, 0x2c, 0x68, 0x5d, 0x11, 0xeb, 0xf6, 0x1b, 0x50, 0x55, 0x6f, 0x1e, 0x50, 0x25, 0xe6, 0xae,
	0xc6, 0x79, 0x54, 0x94, 0xad, 0xd2, 0x57, 0x90, 0x80, 0x35, 0x66, 0x60, 0x5f, 0xf1, 0xcb, 0x0c,
	0x93, 0x91, 0xd4, 0x16, 0x07, 0xf6, 0xd5, 0x36, 0xa5, 0xdd, 0xc9, 0x88, 0xdc, 0x83, 0xea, 0x05,
	0xa5, 0x2f, 0x15, 0x02, 0x67, 0xbd, 0xc0, 0x60, 0x02, 0xc3, 0x80, 0xda, 0xc8, 0x73, 0xc3, 0x33,
	0x85, 0x22, 0x44, 0x7c, 0x04, 0x72, 0x1c, 0xe3, 0x77, 0xb3, 0xb0, 0xc8, 0x4d, 0x93, 0xc2, 0x24,
	0xac, 0xdc, 0x74, 0xe7, 0xb8, 0x95, 0x96, 0x33, 0xaf, 0x9d, 0x1b, 0xa6, 0xf8, 0x26, 0x1f, 0xbd,
	0xa6, 0x39, 0x55, 0x46, 0x7e, 0x98, 0x41, 0xfe, 0xdc, 0x34, 0xf9, 0x67, 0x93, 0x37, 0xed, 0x80,
	0xb8, 0x90, 0x76, 0x40, 0xfc, 0x3a, 0xc7, 0xb2, 0x53, 0x51, 0x0d, 0x8a, 0xd3, 0xa1, 0x7c, 0x9f,
	0xc0, 0x6a, 0x0c, 0x07, 0xb9, 0xb5, 0x73, 0xe2, 0xa8, 0x58, 0xee, 0x4b, 0x1a, 0x76, 0x57, 0xa6,
	0x6d, 0x14, 0xa1, 0x10, 0xf4, 0xbd, 0x31, 0x35, 0x56, 0x60, 0x29, 0x4e, 0x55, 0xb1, 0x4d, 0xfc,
	0x5a, 0x06, 0x9a, 0xdb, 0x51, 0x4c, 0x64, 0x27, 0x08, 0x3d, 0x5f, 0x85, 0xbf, 0xbf, 0x03, 0xc0,
	0x1f, 0x76, 0x42, 0xe5, 0x5c, 0x44, 0xb7, 0x42, 0x08, 0xaa, 0xe6, 0x37, 0xa1, 0x44, 0xdd, 0x01,
	0x4f, 0xe4, 0xb3, 0xa1, 0x48, 0xdd, 0x81, 0x54, 0xec, 0xa7, 0xb6, 0xe1, 0x5a, 0x5c, 0xc0, 0x10,
	0x71, 0x5a, 0x18, 0x75, 0xe8, 0x39, 0x8a, 0x03, 0x79, 0x15, 0xa7, 0x65, 0xcf, 0xbe, 0x44, 0x47,
	0xf8, 0xc0, 0xf8, 0xab, 0x59, 0x98, 0x8f, 0xda, 0xc7, 0x23, 0x55, 0x5d, 0x1f, 0x73, 0xeb, 0x9e,
	0x98, 0x0e, 0x0e, 0x53, 0x96, 0x34, 0x83, 0x6d, 0x89, 0x2f, 0xce, 0x8e, 0x4b, 0x0c, 0xa8, 0x48,
	0x0c, 0x6f, 0x12, 0x6a, 0xe1, 0x87, 0xcb, 0x1c, 0xe5, 0x60, 0x12, 0x32, 0x1d, 0x97, 0xa9, 0xf2,
	0x8e, 0x2b, 0xf4, 0xcb, 0x82, 0x3d, 0x0a, 0x3b, 0xf8, 0x7c, 0x18, 0x03, 0xb3, 0x6c, 0x7c, 0x20,
	0x19, 0x16, 0xc3, 0x6f, 0x70, 0x65, 0x87, 0x8f, 0x1c, 0x2a, 0x3a, 0xba, 0x26, 0xc0, 0x1f, 0x41,
	0x51, 0x9a, 0xc0, 0x1b, 0x50, 0xe1, 0x85, 0x47, 0x41, 0x2c, 0x30, 0x16, 0x60, 0xd8, 0x71, 0x31,
	0x5d, 0xd8, 0xd6, 0xbc, 0x49, 0xcc, 0x96, 0x00, 0xbc, 0x2a, 0xf4, 0x96, 0xf9, 0x95, 0x0c, 0xdc,
	0x4c, 0x19, 0x36, 0xb1, 0xca, 0x37, 0x41, 0x8b, 0x8c, 0x2d, 0xa9, 0xcb, 0x97, 0xfa, 0x8a, 0x64,
	0xab, 0x71, 0x9a, 0x9a, 0x8d, 0x93, 0x38, 0x20, 0xd2, 0x70, 0xf9, 0x08, 0xc6, 0x02, 0x9e, 0xa0,
	0x38, 0xc5, 0x87, 0x91, 0x2b, 0x97, 0x87, 0xb0, 0xd6, 0xbe, 0x64, 0x1c, 0x43, 0x79, 0x3f, 0xf7,
	0x5f, 0x4e, 0xe4, 0x21, 0x56, 0xc2, 0x30, 0x9f, 0x79, 0x2d, 0xc3, 0xfc, 0x80, 0x07, 0x30, 0x50,
	0x65, 0xfd, 0x28, 0x85, 0xe0, 0x06, 0xca, 0xf2, 0x1c, 0x63, 0x11, 0x32, 0xf2, 0x09, 0x03, 0xf1,
	0x42, 0x8d, 0x00, 0xe6, 0xf7, 0x26, 0xc3, 0xd0, 0xd9, 0x54, 0x20, 0xf2, 0x91, 0xc8, 0x83, 0xf5,
	0x48, 0xaa, 0xa5, 0x56, 0x04, 0xaa, 0x22, 0x24, 0xd6, 0x88, 0x15, 0x64, 0x4d, 0xd7, 0x37, 0x3f,
	0x8a, 0xd7, 0x60, 0xdc, 0x84, 0xd5, 0xe8, 0x8b, 0x93, 0x4d, 0x6e, 0x35, 0x7f, 0x27, 0xc3, 0x6f,
	0xdd, 0xf0, 0xb4, 0xae, 0x6b, 0x8f, 0x83, 0x33, 0x2f, 0x24, 0x6d, 0x58, 0x0c, 0x1c, 0xf7, 0x74,
	0x48, 0xf5, 0xe2, 0x03, 0x41, 0x84, 0xe5, 0x78, 0xdb, 0x78, 0xd6, 0xc0, 0x5c, 0xe0, 0x39, 0xa2,
	0xd2, 0x02, 0xb2, 0x31, 0xab, 0x91, 0xd1, 0xb4, 0x48, 0x50, 0x63, 0xba, 0xf1, 0x1d, 0xa8, 0xc7,
	0x2b, 0x22, 0x9f, 0x88, 0xb8, 0x1f, 0x51, 0xab, 0x72, 0x89, 0xa8, 0x07, 0xd1, 0x84, 0xa8, 0x44,
	0xb4, 0x0f, 0x8c, 0xbf, 0x9c, 0x81, 0xa6, 0x49, 0xd9, 0xcc, 0xd5, 0x5a, 0x29, 0xe7, 0xcc, 0x37,
	0xa6, 0x4a, 0x9d, 0xdd, 0x57, 0x19, 0x4e, 0x44, 0xb6, 0xe8, 0xab, 0x33, 0x07, 0x63, 0xe7, 0xc6,
	0x54, 0x8f, 0x36, 0x4a, 0x30, 0xc7, 0x51, 0x8c, 0x55, 0x58, 0x16, 0xed, 0x91, 0x6d, 0x89, 0x4e,
	0x5d, 0x63, 0x35, 0xc6, 0x4e, 0x5d, 0xd7, 0xa0, 0xc9, 0xaf, 0xe7, 0xeb, 0x9d, 0x10, 0x19, 0x7f,
	0xb5, 0x04, 0x45, 0xa1, 0x17, 0x92, 0x75, 0xc8, 0xf7, 0xa5, 0xf3, 0x59, 0x14, 0x46, 0x4f, 0xa4,
	0xca, 0xbf, 0x9b, 0xe8, 0x82, 0xc6, 0xf0, 0xc8, 0x67, 0x50, 0x8f, 0x9f, 0xbf, 0x26, 0x02, 0x6e,
	0xc4, 0x0f, 0x4e, 0x6b, 0xfd, 0xc4, 0x49, 0x5b, 0x39, 0xda, 0x4e, 0xf8, 0x2e, 0x5b, 0x3a, 0xd3,
	0xf6, 0x1b, 0xcf, 0x65, 0x12, 0x6a, 0x70, 0x66, 0x5b, 0x8f, 0x9f, 0x7c, 0x2c, 0xbc, 0x6a, 0x2a,
	0x08, 0xec, 0x9e, 0xd9, 0x8f, 0x9f, 0x7c, 0x9c, 0x94, 0x3d, 0x45, 0xbc, 0x0d, 0x4d, 0xf6, 0x5c,
	0x82, 0x02, 0x8f, 0xc5, 0xcd, 0xbd, 0x88, 0xf8, 0x07, 0x79, 0x04, 0x4b, 0xd2, 0xd4, 0x20, 0xfc,
	0xbd, 0x39, 0xdf, 0xe0, 0xcf, 0x05, 0x11, 0x91, 0xd6, 0xc5, 0x24, 0x6e, 0x9c, 0x58, 0x81, 0xb9,
	0xb3, 0x28, 0xb8, 0x7a, 0xcd, 0x14, 0x5f, 0xc6, 0xef, 0x16, 0xa0, 0xa2, 0x11, 0x85, 0x54, 0xa1,
	0x64, 0xb6, 0xbb, 0x6d, 0xf3, 0x79, 0x7b, 0xab, 0x71, 0x83, 0x3c, 0x80, 0xfb, 0x9d, 0xfd, 0xcd,
	0x03, 0xd3, 0x6c, 0x6f, 0xf6, 0xac, 0x03, 0xd3, 0x92, 0xc1, 0x1c, 0x0f, 0x5b, 0x2f, 0xf6, 0xda,
	0xfb, 0x3d, 0x6b, 0xab, 0xdd, 0x6b, 0x75, 0x76, 0xbb, 0x8d, 0x0c, 0xb9, 0x0d, 0xcd, 0x08, 0x53,
	0x26, 0xb7, 0xf6, 0x0e, 0x8e, 0xf6, 0x7b, 0x8d, 0x2c, 0xb9, 0x0b, 0xb7, 0xb6, 0x3b, 0xfb, 0xad,
	0x5d, 0x2b, 0xc2, 0xd9, 0xdc, 0xed, 0x3d, 0xb7, 0xda, 0xdf, 0x3b, 0xec, 0x98, 0x2f, 0x1a, 0xb9,
	0x34, 0x04, 0xa6, 0xb8, 0xcb, 0x12, 0xf2, 0xe4, 0x26, 0x2c, 0x73, 0x04, 0x9e, 0xc5, 0xea, 0x1d,
	0x1c, 0x58, 0xdd, 0x83, 0x83, 0xfd, 0x46, 0x81, 0x2c, 0x40, 0xad, 0xb3, 0xff, 0xbc, 0xb5, 0xdb,
	0xd9, 0xb2, 0xcc, 0x76, 0x6b, 0x77, 0xaf, 0x31, 0x47, 0x16, 0x61, 0x3e, 0x89, 0x57, 0x64, 0x45,
	0x48, 0xbc, 0x83, 0xfd, 0xce, 0xc1, 0xbe, 0xf5, 0xbc, 0x6d, 0x76, 0x3b, 0x07, 0xfb, 0x8d, 0x12,
	0x59, 0x01, 0x12, 0x4f, 0xda, 0xd9, 0x6b, 0x6d, 0x36, 0xca, 0x64, 0x19, 0x16, 0xe2, 0xf0, 0x67,
	0xed, 0x17, 0x0d, 0x20, 0x4d, 0x58, 0xe2, 0x0d, 0xb3, 0x36, 0xda, 0xbb, 0x07, 0x5f, 0x58, 0x7b,
	0x9d, 0xfd, 0xce, 0xde, 0xd1, 0x5e, 0xa3, 0x82, 0x21, 0x75, 0xdb, 0x6d, 0xab, 0xb3, 0xdf, 0x3d,
	0xda, 0xde, 0xee, 0x6c, 0x76, 0xda, 0xfb, 0xbd, 0x46, 0x95, 0xd7, 0x9c, 0xd6, 0xf1, 0x1a, 0xcb,
	0x20, 0x2e, 0x80, 0x59, 0x5b, 0x9d, 0x6e, 0x6b, 0x63, 0xb7, 0xbd, 0xd5, 0xa8, 0x93, 0x3b, 0x70,
	0xb3, 0xd7, 0xde, 0x3b, 0x3c, 0x30, 0x5b, 0xe6, 0x0b, 0x79, 0x41, 0xcc, 0xda, 0x6e, 0x75, 0x76,
	0x8f, 0xcc, 0x76, 0x63, 0x9e, 0xbc, 0x09, 0x77, 0xcc, 0xf6, 0x77, 0x8f, 0x3a, 0x66, 0x7b, 0xcb,
	0xda, 0x3f, 0xd8, 0x6a, 0x5b, 0xdb, 0xed, 0x56, 0xef, 0xc8, 0x6c, 0x5b, 0x7b, 0x9d, 0x6e, 0xb7,
	0xb3, 0xff, 0xb4, 0xd1, 0x20, 0xf7, 0xe1, 0x9e, 0x42, 0x51, 0x05, 0x24, 0xb0, 0x16, 0x58, 0xff,
	0xe4, 0x90, 0xee, 0xb7, 0xbf, 0xd7, 0xb3, 0x0e, 0xdb, 0x6d, 0xb3, 0x41, 0xc8, 0x1a, 0xac, 0x44,
	0xd5, 0xf3, 0x0a, 0x44, 0xdd, 0x8b, 0x2c, 0xed, 0xb0, 0x6d, 0xee, 0xb5, 0xf6, 0xd9, 0x00, 0xc7,
	0xd2, 0x96, 0x58, 0xb3, 0xa3, 0xb4, 0x64, 0xb3, 0x97, 0x09, 0x81, 0xba, 0x36, 0x2a, 0xdb, 0x2d,
	0xb3, 0xb1, 0x42, 0xe6, 0xa1, 0xb2, 0x77, 0x78, 0x68, 0xf5, 0x3a, 0x7b, 0xed, 0x83, 0xa3, 0x5e,
	0x63, 0x95, 0x2c, 0x43, 0xa3, 0xb3, 0xdf, 0x6b, 0x9b, 0x6c, 0xac, 0x65, 0xd6, 0xff, 0x55, 0x24,
	0x4b, 0x30, 0x2f, 0x5b, 0x2a, 0xa1, 0xbf, 0x5f, 0x24, 0xab, 0x40, 0x8e, 0xf6, 0xcd, 0x76, 0x6b,
	0x8b, 0x11, 0x4e, 0x25, 0xfc, 0x41, 0x91, 0x1f, 0xd5, 0x18, 0xbf, 0x99, 0x53, 0xdb, 0x5b, 0xe4,
	0xdc, 0x10, 0x7f, 0x7e, 0xa4, 0xaa, 0x3d, 0x3f, 0xf2, 0xaa, 0x87, 0xe2, 0x34, 0x65, 0x24, 0x37,
	0xa5, 0x8c, 0x4c, 0x69, 0xbb, 0x35, 0x5d, 0x5a, 0x7a, 0x0b, 0x6a, 0xe2, 0xa5, 0x58, 0x11, 0x5a,
	0x1f, 0x84, 0xa7, 0x0f, 0x07, 0xf2, 0xb8, 0xfa, 0x53, 0x2f, 0xa5, 0x15, 0xa6, 0x5f, 0x4a, 0x4b,
	0x93, 0x88, 0xe7, 0xd2, 0x24, 0xe2, 0x87, 0xb0, 0xc0, 0x59, 0x93, 0xe3, 0x3a, 0x23, 0xa9, 0x67,
	0x8a, 0x77, 0xc7, 0x90, 0x45, 0x71, 0xb8, 0x14, 0xc0, 0xa5, 0x90, 0x2e, 0x58, 0x48, 0x51, 0xc8,
	0xe7, 0x31, 0xd9, 0x9c, 0x73, 0x0e, 0x25, 0x9b, 0xab, 0x1a, 0xec, 0xcb, 0xa8, 0x86, 0x8a, 0x56,
	0x03, 0x87, 0x63, 0x0d, 0x0f, 0x61, 0x81, 0x5e, 0x86, 0xbe, 0x6d, 0x79, 0x63, 0xfb, 0x07, 0x13,
	0x3c, 0x2c, 0xb6, 0x51, 0xeb, 0xad, 0x9a, 0xf3, 0x98, 0x70, 0x80, 0xf0, 0x2d, 0x3b, 0xb4, 0x8d,
	0x8f, 0x21, 0x7b, 0xc0, 0xed, 0x03, 0xe8, 0x52, 0x22, 0x0d, 0x19, 0xfc, 0x0b, 0x2f, 0xf8, 0x89,
	0x47, 0x43, 0xb3, 0xe8, 0x9c, 0x22, 0x3f, 0x8d, 0xbf, 0x98, 0x01, 0x62, 0xd2, 0xee, 0x95, 0xdb,
	0xe7, 0x51, 0x28, 0xa3, 0xb8, 0x6c, 0x27, 0xbe, 0x37, 0x8a, 0xbf, 0x9a, 0x0a, 0x0c, 0x24, 0x4e,
	0xb5, 0x6e, 0x41, 0x39, 0xf4, 0xe2, 0x91, 0x0e, 0x4b, 0xa1, 0xb7, 0x23, 0x43, 0x08, 0x68, 0xde,
	0x30, 0xb9, 0xa4, 0x37, 0xcc, 0x2a, 0x14, 0x07, 0xbe, 0x37, 0xb6, 0x06, 0xc7, 0x32, 0x5e, 0x33,
	0xfb, 0xdc, 0x3a, 0x36, 0x96, 0x61, 0x31, 0xd6, 0x14, 0xb1, 0x51, 0x2d, 0xc2, 0x02, 0xf7, 0x33,
	0x62, 0x49, 0x52, 0x1a, 0x79, 0x08, 0x44, 0x07, 0x0a, 0xe1, 0x32, 0xe6, 0x00, 0x57, 0x16, 0x7a,
	0x39, 0xd3, 0x2f, 0x9e, 0xd2, 0x90, 0xdf, 0x00, 0xed, 0x52, 0x2a, 0x9f, 0xc4, 0x34, 0xde, 0x83,
	0xe5, 0x04, 0x3c, 0x7a, 0xec, 0x28, 0xa0, 0xe8, 0x05, 0x89, 0x21, 0x38, 0xd9, 0x6f, 0xe3, 0x6f,
	0x67, 0xe1, 0x16, 0x5b, 0x16, 0xa7, 0x94, 0xa1, 0x1e, 0xda, 0x41, 0x30, 0x3e, 0xf3, 0xed, 0x40,
	0xe9, 0x80, 0x1f, 0xc3, 0x6a, 0x7f, 0xe2, 0xfb, 0xd4, 0x0d, 0x2d, 0x86, 0x6f, 0x8d, 0x15, 0x86,
	0x68, 0xcc, 0xb2, 0x48, 0x8e, 0x67, 0x27, 0xdf, 0x84, 0x5b, 0x33, 0xf2, 0x69, 0x2f, 0x07, 0x35,
	0x53, 0xf3, 0x6e, 0x38, 0x68, 0x75, 0xd2, 0xb3, 0x0b, 0x6a, 0x57, 0x34, 0x7c, 0x8c, 0xed, 0x4a,
	0x2f, 0xa6, 0x5a, 0xc5, 0xfd, 0x87, 0x16, 0x5c, 0x7a, 0x91, 0x68, 0xd1, 0x13, 0x58, 0x4d, 0xc1,
	0xc7, 0xd6, 0xf0, 0xcd, 0x78, 0x69, 0x2a, 0xcf, 0x86, 0xe3, 0x1a, 0x8f, 0xe1, 0x76, 0x3a, 0x7d,
	0xae, 0x21, 0xea, 0xdb, 0xd0, 0x78, 0xca, 0x68, 0xdf, 0xf7, 0x69, 0xa8, 0xd9, 0x01, 0xd1, 0x6c,
	0x92, 0x89, 0xcc, 0x26, 0xc6, 0x7b, 0xb0, 0xa0, 0xe1, 0x45, 0x8f, 0x1c, 0x06, 0x08, 0x91, 0x93,
	0x9d, 0x7f, 0x19, 0xa7, 0xb0, 0xd4, 0x19, 0x31, 0xc9, 0xf5, 0xd0, 0x77, 0xce, 0x9f, 0xd1, 0x2b,
	0x6d, 0x4e, 0xcb, 0xa7, 0x0e, 0x22, 0xa7, 0x4b, 0x10, 0xa0, 0x67, 0xf4, 0x8a, 0x15, 0xe8, 0xd3,
	0xa0, 0x6f, 0xbb, 0xc2, 0xb0, 0x29, 0xbe, 0x18, 0x7c, 0x48, 0x4f, 0xed, 0xbe, 0x7c, 0x3f, 0x41,
	0x7c, 0x19, 0x1f, 0xc2, 0x72, 0xa2, 0xa2, 0x57, 0xbe, 0x1d, 0xd5, 0x84, 0x95, 0x5d, 0x27, 0x08,
	0x19, 0xc7, 0x89, 0x3f, 0x9b, 0x65, 0x7c, 0x07, 0x56, 0xa7, 0x52, 0x44, 0x71, 0x5f, 0x81, 0xba,
	0x88, 0xfa, 0x3f, 0xe1, 0x29, 0x82, 0x86, 0x35, 0x0e, 0x15, 0xe8, 0xc6, 0x77, 0x60, 0x45, 0xcb,
	0xad, 0x3f, 0x2c, 0x9d, 0xf2, 0x78, 0x17, 0x83, 0x9d, 0x33, 0x55, 0x91, 0xaf, 0x5d, 0xfc, 0x6d,
	0xfc, 0xa5, 0x0c, 0x90, 0xe9, 0xa6, 0xe1, 0xd3, 0x1d, 0xae, 0xba, 0xcf, 0x51, 0x32, 0xc5, 0x17,
	0x69, 0x25, 0xde, 0x23, 0xce, 0xc6, 0xae, 0xb5, 0xa4, 0xb7, 0x25, 0xfe, 0x34, 0x31, 0xbe, 0x18,
	0xe2, 0xf5, 0x5f, 0xe2, 0x80, 0x8b, 0x58, 0x4c, 0xf2, 0xdb, 0x78, 0x1f, 0x16, 0xd3, 0xa8, 0xc1,
	0x47, 0x69, 0x32, 0x54, 0x6f, 0x5b, 0xf2, 0x2f, 0xe3, 0x0f, 0xb3, 0xd0, 0xdc, 0xf4, 0xa9, 0x1d,
	0x52, 0xbd, 0xba, 0xc8, 0x5a, 0x10, 0x7a, 0x89, 0xe8, 0x96, 0xe5, 0xd0, 0xd3, 0x9e, 0x2d, 0xd4,
	0x42, 0x45, 0x65, 0x54, 0xa8, 0xa8, 0x37, 0xa1, 0x8a, 0x6c, 0x30, 0x8a, 0xc4, 0x8e, 0xab, 0x8b,
	0xc1, 0x64, 0xd6, 0x77, 0x60, 0x9e, 0x0e, 0x69, 0x3f, 0xf4, 0x27, 0x23, 0xeb, 0xc4, 0xf3, 0x47,
	0x42, 0xa6, 0x2d, 0x99, 0x75, 0x09, 0xde, 0x46, 0x28, 0x1b, 0xc5, 0x3e, 0xae, 0x8f, 0x44, 0x18,
	0xd2, 0x1a, 0x87, 0xca, 0xf2, 0x1e, 0x40, 0xc3, 0x71, 0xc7, 0x4c, 0xbb, 0x76, 0x5c, 0x3d, 0xa2,
	0x5c, 0xc1, 0xac, 0x23, 0x7c, 0xcf, 0x91, 0xc1, 0x5e, 0x84, 0x7f, 0x3f, 0xde, 0x0e, 0x2f, 0xaa,
	0xdb, 0xe1, 0x18, 0xc7, 0x12, 0x07, 0x57, 0x85, 0xa8, 0xc4, 0xdf, 0x8c, 0x04, 0xfc, 0x6c, 0x7a,
	0x3c, 0x09, 0x03, 0xdc, 0x96, 0x0a, 0x66, 0x79, 0x64, 0x5f, 0x76, 0x10, 0xc0, 0x46, 0xc2, 0x9e,
	0x84, 0x1e, 0x0e, 0x33, 0x7f, 0x5c, 0x5b, 0x7d, 0xe3, 0xd2, 0x75, 0x4e, 0x5d, 0xdc, 0xa7, 0x4a,
	0x26, 0xfe, 0x36, 0xbe, 0x09, 0x37, 0x53, 0xa8, 0x2d, 0xc6, 0xe8, 0x1e, 0x54, 0xb4, 0x61, 0x96,
	0xd6, 0x72, 0x0d, 0x64, 0xac, 0x03, 0xd9, 0x9a, 0x8c, 0xc6, 0x89, 0x25, 0x3a, 0x7b, 0xe1, 0x7c,
	0x0c, 0x8b, 0x31, 0xfc, 0xc8, 0xd6, 0x7f, 0xed, 0x9a, 0x36, 0xd6, 0x91, 0xf7, 0x4f, 0x3f, 0x0e,
	0x17, 0xad, 0xe9, 0x4c, 0x72, 0x4d, 0x27, 0xf0, 0x5f, 0xb9, 0xa6, 0xbf, 0xc0, 0x2c, 0x29, 0x93,
	0x2e, 0x6d, 0xd9, 0x3d, 0x54, 0xd7, 0x83, 0x2e, 0xec, 0xb0, 0x7f, 0xa6, 0x1d, 0xa3, 0x4c, 0xc1,
	0x8d, 0x5f, 0xcf, 0xc0, 0xad, 0x78, 0xc9, 0xe2, 0x25, 0x70, 0x13, 0x67, 0xfc, 0x35, 0xd7, 0xf6,
	0x67, 0xcd, 0x67, 0xf4, 0x63, 0x0c, 0xe9, 0xa9, 0xe7, 0x5f, 0xc9, 0xe5, 0x26, 0xbf, 0x15, 0x43,
	0xe0, 0x62, 0x18, 0xfe, 0x66, 0xf3, 0x5f, 0xbc, 0x0b, 0x31, 0x71, 0x9d, 0x50, 0xfa, 0x33, 0x54,
	0x38, 0xec, 0x88, 0x81, 0x8c, 0x7f, 0x95, 0x83, 0x85, 0xf8, 0x14, 0x60, 0x4d, 0x8b, 0x1a, 0x90,
	0x49, 0x2e, 0xa8, 0x58, 0x81, 0xd9, 0xa9, 0x02, 0xa5, 0xb5, 0x8a, 0x47, 0x72, 0x46, 0x6b, 0xd5,
	0x2d, 0x7e, 0x61, 0x98, 0xe7, 0xc8, 0xab, 0x47, 0x77, 0x39, 0xfa, 0xd4, 0x53, 0xfb, 0x85, 0x94,
	0xa7, 0xf6, 0x13, 0xb1, 0xc3, 0xe7, 0x92, 0xb1, 0xc3, 0xef, 0x02, 0x0f, 0xd3, 0xac, 0xbd, 0xc7,
	0x96, 0x33, 0x79, 0x0e, 0xae, 0x09, 0xaa, 0xfc, 0x68, 0x50, 0x14, 0x27, 0xfa, 0x08, 0x41, 0x93,
	0xa2, 0x1c, 0xe9, 0xb2, 0x36, 0xd2, 0xef, 0x42, 0xe3, 0x02, 0x45, 0x0b, 0x5c, 0xa1, 0x43, 0xa7,
	0x2f, 0x4e, 0x41, 0xca, 0xe6, 0x3c, 0x87, 0x6f, 0x4a, 0x30, 0x66, 0x67, 0xe5, 0xf2, 0xe3, 0xfa,
	0xbc, 0x7c, 0x17, 0x09, 0x45, 0x56, 0xf5, 0x6a, 0x56, 0x55, 0x5c, 0x4c, 0x73, 0x46, 0x54, 0x3d,
	0x96, 0xf5, 0x53, 0x50, 0x1c, 0xf0, 0x29, 0x21, 0x8e, 0x3c, 0x8c, 0x28, 0xb8, 0xc0, 0xac, 0x69,
	0x63, 0xca, 0x2c, 0x8c, 0xd2, 0xbe, 0x7d, 0x81, 0xd7, 0x7b, 0xab, 0x26, 0xfb, 0x69, 0xf4, 0x92,
	0xef, 0xe8, 0x6b, 0xc6, 0xf9, 0xa9, 0x15, 0x1d, 0x79, 0x5b, 0x4f, 0x8d, 0x7f, 0x7c, 0xad, 0xbf,
	0x01, 0xb7, 0x71, 0x4d, 0xa1, 0xb3, 0x7c, 0x37, 0xc4, 0xd8, 0x0c, 0xcf, 0x3d, 0x65, 0x3e, 0x37,
	0x7e, 0x06, 0xee, 0xcc, 0x48, 0x57, 0x0f, 0x09, 0x54, 0x19, 0x0b, 0xb3, 0xec, 0x53, 0xdb, 0x71,
	0x03, 0xb9, 0xdf, 0x57, 0x18, 0xac, 0xc5, 0x41, 0x8c, 0x19, 0x9e, 0x8b, 0x47, 0x42, 0x64, 0x28,
	0xef, 0x73, 0xfe, 0x40, 0x88, 0xf1, 0x7d, 0xb8, 0xdd, 0xbd, 0xa6, 0xfa, 0x3f, 0x65, 0xe9, 0x77,
	0xe1, 0x4e, 0xf7, 0xba, 0xc6, 0x1b, 0xef, 0xc2, 0xea, 0x46, 0xdf, 0x0e, 0xd2, 0x18, 0x44, 0x1d,
	0xb2, 0xe1, 0xa5, 0xe0, 0x8e, 0xd9, 0xf0, 0xd2, 0x78, 0x02, 0xcd, 0x69, 0x54, 0x41, 0x03, 0x7c,
	0xab, 0xd7, 0xd5, 0x7d, 0x62, 0x8a, 0xe1, 0x25, 0xaa, 0x58, 0xc6, 0x3f, 0xcf, 0xf0, 0xd7, 0x61,
	0xb7, 0x7d, 0x6f, 0xf4, 0x67, 0xbf, 0xe1, 0xe9, 0xdb, 0x4e, 0x3e, 0xbe, 0xed, 0xc4, 0xb7, 0x98,
	0x42, 0x72, 0x8b, 0x61, 0xc9, 0xc9, 0x4d, 0x0d, 0x9f, 0x60, 0xe6, 0x56, 0x95, 0xf7, 0xf8, 0xab,
	0xab, 0xbc, 0x17, 0xd1, 0x13, 0xba, 0xf2, 0x89, 0x26, 0x21, 0xe4, 0x85, 0xf8, 0x36, 0x93, 0xf1,
	0x5d, 0xb8, 0xb5, 0x45, 0xfb, 0xde, 0x80, 0x9a, 0xf6, 0x45, 0x0a, 0x65, 0x97, 0x61, 0xee, 0x8c,
	0x5e, 0x5a, 0x82, 0xba, 0x65, 0xb3, 0x70, 0x46, 0x2f, 0x7b, 0x97, 0xe8, 0xb5, 0xe3, 0xb8, 0x16,
	0x2a, 0x4f, 0x82, 0xed, 0x96, 0xce, 0x1d, 0xb7, 0xcd, 0xbe, 0x8d, 0x0f, 0xa0, 0xdc, 0x45, 0xcb,
	0x59, 0xd7, 0x39, 0xc5, 0xd8, 0x07, 0xc1, 0x48, 0xde, 0xcc, 0xb1, 0x03, 0x8c, 0x52, 0x7b, 0x26,
	0xac, 0xcc, 0x65, 0x93, 0xfd, 0x34, 0xbe, 0x0f, 0xc5, 0x43, 0x9f, 0x9e, 0x1f, 0x4c, 0xae, 0x63,
	0xc5, 0x77, 0xa1, 0xc2, 0x7d, 0x81, 0xfa, 0x9e, 0xe3, 0x06, 0x82, 0xdc, 0xdc, 0x3d, 0x08, 0x5f,
	0x58, 0x45, 0x31, 0x96, 0x2b, 0x2d, 0x39, 0x21, 0xc6, 0x72, 0xad, 0xe5, 0x7f, 0x66, 0x00, 0x9e,
	0x3b, 0xae, 0xac, 0x81, 0xb1, 0x6e, 0xcf, 0x71, 0x8f, 0x23, 0x85, 0x42, 0x7d, 0x2b, 0xf6, 0x93,
	0x4d, 0x91, 0xef, 0x72, 0x1a, 0x3b, 0xff, 0x00, 0x80, 0xdb, 0x06, 0xad, 0xc0, 0x39, 0x15, 0x5e,
	0xe8, 0xf2, 0x48, 0x56, 0x75, 0xdd, 0x2c, 0x07, 0x8a, 0x0a, 0x6b, 0x50, 0x0a, 0x18, 0x45, 0x65,
	0x30, 0x8d, 0x9a, 0xa9, 0xbe, 0x59, 0x97, 0x2f, 0x9c, 0xd0, 0x65, 0x5d, 0x9e, 0xe3, 0x3a, 0xa5,
	0xf8, 0x24, 0xef, 0xa2, 0x73, 0xc9, 0x39, 0x9e, 0x44, 0x14, 0x63, 0x07, 0xa6, 0xa2, 0x33, 0x66,
	0x71, 0xcc, 0x7f, 0x18, 0x8f, 0x21, 0xcf, 0x16, 0x0b, 0x32, 0x7d, 0xf5, 0x58, 0x3f, 0xfb, 0x89,
	0x14, 0x15, 0x0b, 0x52, 0xac, 0x38, 0xf1, 0x69, 0xfc, 0x52, 0x86, 0x65, 0x9a, 0x84, 0x49, 0xd2,
	0x66, 0xae, 0x21, 0x6d, 0x56, 0x27, 0x2d, 0xa9, 0x42, 0xc6, 0x15, 0x84, 0xc9, 0xc4, 0x9e, 0x63,
	0xcd, 0x27, 0xc7, 0x8e, 0x8b, 0x51, 0xdc, 0x99, 0x46, 0xbe, 0x5f, 0x82, 0xab, 0x1b, 0x13, 0x8c,
	0x3f, 0xcc, 0xc0, 0xed, 0xf4, 0x69, 0x38, 0xfb, 0xd9, 0x5c, 0xfd, 0xb5, 0x10, 0x2e, 0x7c, 0xab,
	0xd7, 0x42, 0x84, 0x34, 0x8c, 0x7b, 0x01, 0x6f, 0x9e, 0xfa, 0x46, 0x19, 0x4c, 0xde, 0x94, 0x67,
	0xea, 0x13, 0xdb, 0x18, 0x51, 0x2e, 0xfb, 0x21, 0x15, 0x2b, 0x0d, 0x7f, 0xa3, 0x0a, 0x8c, 0x40,
	0xbe, 0xbe, 0xf8, 0x07, 0x79, 0x0b, 0x72, 0xe7, 0x8e, 0x2b, 0xc2, 0x62, 0xc8, 0xdb, 0x35, 0xd1,
	0xec, 0x32, 0x59, 0x2a, 0xef, 0xee, 0x24, 0x14, 0xd1, 0xc2, 0xa2, 0xee, 0x4e, 0x42, 0x3e, 0x7f,
	0x1e, 0xfe, 0x39, 0xa8, 0x68, 0xcf, 0xe7, 0x92, 0x55, 0x58, 0xfc, 0xa2, 0xd3, 0xdb, 0x6f, 0x77,
	0xbb, 0xd6, 0xe1, 0xd1, 0xc6, 0xb3, 0xf6, 0x0b, 0x6b, 0xa7, 0xd5, 0xdd, 0x69, 0xdc, 0x20, 0x2b,
	0x40, 0xf6, 0xdb, 0xdd, 0x5e, 0x7b, 0x2b, 0x06, 0xcf, 0x90, 0x37, 0x60, 0xed, 0x68, 0xff, 0xa8,
	0xdb, 0xde, 0xb2, 0xd2, 0xf2, 0x65, 0xc9, 0x1d, 0xb8, 0x29, 0xd2, 0x53, 0xb2, 0xe7, 0x1e, 0xfe,
	0x2c, 0xd4, 0xe3, 0x01, 0x19, 0x09, 0xc0, 0xdc, 0x6e, 0xfb, 0x69, 0x6b, 0xf3, 0x05, 0x7f, 0xd9,
	0xab, 0xdb, 0x6b, 0xf5, 0x3a, 0x9b, 0x96, 0x78, 0xc9, 0xeb, 0x59, 0xfb, 0x45, 0x23, 0x43, 0x2a,
	0x50, 0x6c, 0xed, 0x6f, 0xee, 0x1c, 0x98, 0xdd, 0x46, 0x96, 0xdc, 0x86, 0x55, 0x69, 0x10, 0xdb,
	0x3c, 0xd8, 0xdb, 0xeb, 0xf4, 0xd0, 0xe2, 0xda, 0x7b, 0x71, 0xd8, 0x6e, 0xfc, 0x41, 0xf1, 0xa1,
	0x0d, 0xe5, 0xe8, 0x11, 0x32, 0xb4, 0x62, 0x76, 0x7a, 0x9d, 0x56, 0x2f, 0x32, 0xe1, 0x36, 0x6e,
	0x90, 0x45, 0x98, 0x8f, 0xc0, 0xf8, 0x92, 0x58, 0x23, 0xc3, 0x63, 0x56, 0x49, 0x20, 0xaf, 0xbd,
	0x91, 0x25, 0x04, 0xea, 0x11, 0x74, 0xe3, 0xa0, 0xc7, 0xba, 0xf0, 0x73, 0x50, 0x8f, 0xbf, 0xf5,
	0x45, 0x1a, 0x50, 0x65, 0xf5, 0x6b, 0x55, 0x00, 0xcc, 0xf1, 0x16, 0x37, 0x32, 0xdc, 0x4c, 0xbb,
	0x79, 0xb0, 0xd7, 0xd9, 0x7f, 0x8a, 0xb6, 0xdd, 0x46, 0x96, 0x81, 0x0e, 0x8e, 0x7a, 0x4f, 0x0f,
	0x14, 0x28, 0xc7, 0x72, 0xf0, 0xee, 0x34, 0xf2, 0x0f, 0x7f, 0x00, 0x0b, 0x53, 0xaf, 0x82, 0xb1,
	0x56, 0x1f, 0x1c, 0xf5, 0x36, 0x0f, 0xf6, 0xf4, 0x7a, 0x2a, 0x50, 0xdc, 0xdc, 0x6d, 0x75, 0xf6,
	0xd0, 0x91, 0xab, 0x06, 0xe5, 0xa3, 0x7d, 0xf9, 0x99, 0x8d, 0xbf, 0x67, 0x96, 0x23, 0xf3, 0x50,
	0xd9, 0xee, 0x98, 0xdd, 0x9e, 0xd5, 0xed, 0xb5, 0x9e, 0xb6, 0x1b, 0x79, 0x96, 0x57, 0x5a, 0x1f,
	0x0b, 0x0f, 0x3f, 0x85, 0x7a, 0xfc, 0x0a, 0x66, 0xdc, 0x01, 0x6f, 0x0d, 0x56, 0x36, 0xda, 0xbd,
	0x2f, 0xda, 0xed, 0x7d, 0x1c, 0xf2, 0xcd, 0xf6, 0x7e, 0xcf, 0x6c, 0xed, 0x76, 0x7a, 0x2f, 0x1a,
	0x99, 0x87, 0x9f, 0x41, 0x23, 0xe9, 0x08, 0x1d, 0xf3, 0x1f, 0xbf, 0xce, 0xd1, 0xfc, 0xe1, 0x7f,
	0xce, 0xc0, 0x52, 0x9a, 0x7f, 0x20, 0x9b, 0x98, 0xc2, 0xac, 0x69, 0x99, 0xed, 0x56, 0xf7, 0x60,
	0xdf, 0xda, 0x3f, 0xc0, 0x07, 0x7e, 0xd6, 0x60, 0x25, 0x91, 0x20, 0x7b, 0x91, 0x21, 0xb7, 0x60,
	0x75, 0x2a, 0x93, 0x65, 0x1e, 0x1c, 0xe1, 0x58, 0x36, 0x61, 0x29, 0x91, 0xd8, 0x36, 0xcd, 0x03,
	0xb3, 0x91, 0x23, 0x5f, 0x85, 0x07, 0x89, 0x94, 0x69, 0x93, 0xbe, 0xb4, 0xf8, 0xe7, 0xc9, 0x3b,
	0xf0, 0xd6, 0x14, 0x76, 0x64, 0xf5, 0xb6, 0x36, 0x5a, 0xbb, 0xac, 0x7b, 0x8d, 0xc2, 0xc3, 0x7f,
	0x90, 0x03, 0x88, 0x62, 0x9c, 0xb0, 0xfa, 0xb7, 0x5a, 0xbd, 0xd6, 0xee, 0x01, 0x5b, 0x33, 0xe6,
	0x41, 0x8f, 0x95, 0x6e, 0xb6, 0xbf, 0xdb, 0xb8, 0x91, 0x9a, 0x72, 0x70, 0xc8, 0x3a, 0xb4, 0x0a,
	0x8b, 0x7c, 0xfe, 0xed, 0xb2, 0x6e, 0xb0, 0xe9, 0x82, 0x6f, 0x45, 0xe1, 0xb9, 0xc1, 0xd1, 0xe1,
	0xb6, 0x79, 0xb0, 0xdf, 0xb3, 0xba, 0x3b, 0x47, 0xbd, 0x2d, 0x7c, 0x69, 0x6a, 0xd3, 0xec, 0x1c,
	0xf2, 0x32, 0xf3, 0xd7, 0x21, 0xb0, 0xa2, 0x0b, 0x6c, 0x81, 0x3f, 0x3d, 0xe8, 0x76, 0x3b, 0x87,
	0xd6, 0x77, 0x8f, 0xda, 0x66, 0xa7, 0xdd, 0xc5, 0x8c, 0x73, 0x29, 0x70, 0x86, 0x5f, 0x64, 0x73,
	0xb6, 0xb7, 0xfb, 0x5c, 0x1c, 0x07, 0x30, 0xd4, 0x52, 0x1c, 0xc4, 0xb0, 0xca, 0x6c, 0x74, 0xda,
	0xdf, 0xeb, 0x59, 0x29, 0x25, 0xc3, 0x8c, 0x34, 0x96, 0xaf, 0x42, 0x6e, 0xc2, 0xf2, 0xd4, 0xca,
	0xc7, 0x6c, 0xd5, 0xf4, 0x24, 0x96, 0x0b, 0x0f, 0x11, 0xd4, 0x91, 0xcb, 0xd6, 0x96, 0x89, 0x19,
	0xea, 0x53, 0x50, 0x86, 0x3b, 0xcf, 0x26, 0xe1, 0xde, 0xe1, 0x21, 0xa2, 0x34, 0xe4, 0x07, 0x4b,
	0x59, 0x78, 0xfc, 0xdf, 0xde, 0x85, 0xb2, 0xba, 0xeb, 0x4c, 0x3e, 0x87, 0x5a, 0x2c, 0xd0, 0x1c,
	0x91, 0x2e, 0x48, 0x69, 0x71, 0xe9, 0xd6, 0x6e, 0xa7, 0x27, 0x8a, 0xad, 0xe3, 0x05, 0x90, 0xe9,
	0x10, 0x61, 0xe4, 0xde, 0x35, 0xd1, 0xc3, 0x78, 0xa9, 0x6f, 0xbe, 0x32, 0xbe, 0x18, 0xd9, 0xd3,
	0x0e, 0x4a, 0x79, 0x3b, 0x6f, 0x27, 0x0f, 0x2f, 0x63, 0x0d, 0xbd, 0x33, 0x23, 0x55, 0x14, 0xf7,
	0x0c, 0x5f, 0xc4, 0xea, 0xe9, 0x76, 0x9d, 0x3b, 0xa9, 0x7a, 0x88, 0x6a, 0xe3, 0xcd, 0x69, 0xc5,
	0x41, 0xe8, 0x28, 0x64, 0x0b, 0x2a, 0xed, 0x20, 0x74, 0x46, 0x76, 0xc8, 0x4d, 0xe9, 0x32, 0x84,
	0x53, 0x04, 0x93, 0x85, 0xac, 0xa5, 0x25, 0x89, 0x26, 0x7d, 0x0b, 0xca, 0xea, 0x0d, 0x7b, 0x22,
	0x5d, 0x88, 0x92, 0x6f, 0xfa, 0xaf, 0x35, 0xa7, 0x13, 0x44, 0xfe, 0x2d, 0xa8, 0x68, 0x4f, 0xd1,
	0xab, 0x56, 0x4c, 0x3f, 0x77, 0xaf, 0x5a, 0x91, 0xf6, 0x72, 0xfd, 0x2e, 0x2c, 0x8b, 0xe3, 0xd8,
	0x63, 0xfa, 0x65, 0xc8, 0x43, 0xa6, 0xc9, 0xf3, 0x28, 0x43, 0x3e, 0x83, 0x12, 0x6b, 0xe8, 0x9e,
	0xed, 0x5e, 0x91, 0x15, 0xad, 0xe5, 0x0c, 0x20, 0x73, 0xae, 0x4e, 0xc1, 0x45, 0x53, 0x5a, 0x00,
	0x91, 0x51, 0x83, 0xc8, 0x8e, 0x4f, 0xd9, 0x45, 0xd4, 0xc8, 0xa4, 0x58, 0x40, 0xb6, 0xa0, 0xa2,
	0x3d, 0x4e, 0xaf, 0x68, 0x32, 0xfd, 0x16, 0xbe, 0xa2, 0x49, 0xda, 0x5b, 0xf6, 0x5b, 0x50, 0xd1,
	0x1e, 0x8f, 0x57, 0xa5, 0x4c, 0xbf, 0x60, 0xaf, 0x4a, 0x49, 0x79, 0x6b, 0x9e, 0xcd, 0xe0, 0xf8,
	0xcb, 0xf1, 0x6a, 0x06, 0xa7, 0x3e, 0x41, 0xaf, 0x66, 0x70, 0xfa, 0x73, 0xf3, 0x6c, 0xba, 0xa8,
	0xe7, 0xeb, 0xc8, 0xaa, 0x36, 0xa2, 0xfa, 0x3b, 0x78, 0x6a, 0xba, 0x4c, 0xbf, 0x74, 0xf7, 0x14,
	0x16, 0xd5, 0x40, 0xab, 0xc7, 0xe7, 0x02, 0xd5, 0xa6, 0xd4, 0x27, 0xee, 0xd6, 0x1a, 0xc9, 0xd4,
	0x47, 0x19, 0xf2, 0x75, 0x28, 0x8a, 0x17, 0xbd, 0xc8, 0x72, 0xf2, 0x85, 0x2f, 0xde, 0x88, 0x95,
	0xf4, 0x87, 0xbf, 0xc8, 0x21, 0x2e, 0x42, 0xfd, 0xc9, 0x2d, 0x7d, 0x96, 0xa5, 0xbc, 0xd2, 0xb5,
	0xf6, 0xc6, 0xac, 0xe4, 0xa8, 0xc4, 0xe4, 0x33, 0x71, 0x77, 0x66, 0xc5, 0x83, 0x8d, 0x97, 0x38,
	0x2b, 0x70, 0xfd, 0x53, 0xa8, 0xea, 0xaf, 0x06, 0x13, 0x7d, 0xed, 0x24, 0xcb, 0xba, 0x95, 0x9a,
	0x26, 0x0a, 0x7a, 0x0e, 0x2b, 0x8a, 0xde, 0x7a, 0x70, 0xd2, 0x80, 0xdc, 0x4d, 0x09, 0x59, 0x1a,
	0xa3, 0xfa, 0xcd, 0x99, 0x31, 0x4d, 0x1f, 0x65, 0x90, 0x31, 0xc6, 0x1e, 0xfa, 0x8c, 0x18, 0x63,
	0xda, 0xfb, 0xa6, 0x11, 0x63, 0x4c, 0x7f, 0x1d, 0xb4, 0x05, 0xf3, 0x5a, 0x70, 0xd5, 0xee, 0x95,
	0xdb, 0x57, 0xf3, 0x7d, 0xfa, 0x2d, 0xa4, 0xb5, 0x34, 0x47, 0x1e, 0xb2, 0x09, 0x15, 0x3d, 0x3e,
	0xeb, 0x35, 0xd9, 0x57, 0xb5, 0x24, 0xfd, 0xf1, 0x9b, 0x47, 0x19, 0xb2, 0x0b, 0x8d, 0xe4, 0x6b,
	0x0a, 0x6a, 0x67, 0x4a, 0x7b, 0x81, 0x62, 0x2d, 0x91, 0x18, 0x7b, 0x83, 0x81, 0xcd, 0x0b, 0x51,
	0x35, 0x7f, 0xa3, 0xdf, 0xf3, 0x93, 0xdb, 0x07, 0x87, 0x4b, 0x32, 0xa8, 0xd2, 0x12, 0xa9, 0xd8,
	0xec, 0x07, 0x99, 0x47, 0x19, 0xb2, 0x0d, 0xd5, 0x58, 0x30, 0xf1, 0xd8, 0x2d, 0xfc, 0x44, 0x37,
	0x9b, 0x7a, 0x5a, 0xa2, 0x9f, 0x7b, 0x50, 0x8f, 0x7b, 0x9c, 0xab, 0x86, 0xa5, 0xba, 0xc5, 0xab,
	0xe1, 0x4b, 0x77, 0x53, 0x27, 0xdf, 0x86, 0x0a, 0xe3, 0xa3, 0xf2, 0x66, 0x12, 0xd1, 0x78, 0x6b,
	0x72, 0xcc, 0x38, 0x4c, 0x58, 0x7c, 0x72, 0xbf, 0x94, 0xcd, 0x60, 0xbf, 0xbe, 0xc1, 0xed, 0x32,
	0xf2, 0x72, 0x0a, 0x1b, 0xff, 0xd7, 0x2d, 0x84, 0x6c, 0xf3, 0xca, 0x7b, 0x1e, 0x0f, 0xae, 0x75,
	0x53, 0xc3, 0x11, 0xb0, 0xd7, 0x6b, 0x43, 0x8b, 0xb7, 0x41, 0xe4, 0x89, 0xcd, 0xc1, 0xd7, 0x2c,
	0x8b, 0x7c, 0x02, 0x10, 0xdd, 0xea, 0x23, 0x89, 0x7b, 0x67, 0x6a, 0x41, 0xa5, 0x5c, 0xfc, 0x6b,
	0xf3, 0xf5, 0xae, 0x2e, 0xbe, 0xe9, 0xdb, 0x68, 0xfc, 0x0e, 0x5e, 0x6c, 0x1b, 0x4d, 0x16, 0xf3,
	0x35, 0xa8, 0xed, 0x7a, 0xde, 0xcb, 0xc9, 0x58, 0xdd, 0x00, 0x8f, 0xdf, 0xca, 0xd8, 0xb1, 0x83,
	0xb3, 0xb5, 0x44, 0xb3, 0x48, 0x0b, 0x16, 0x14, 0x8b, 0x88, 0x6e, 0xde, 0xc5, 0x91, 0x62, 0x8c,
	0x21, 0x51, 0xc0, 0xa3, 0x0c, 0x79, 0x0c, 0x55, 0xae, 0xdc, 0x8b, 0x3b, 0x00, 0x8b, 0x31, 0x7f,
	0x72, 0x7e, 0x79, 0x60, 0xad, 0x16, 0x03, 0x4a, 0x16, 0x17, 0xdd, 0x43, 0xd1, 0xf7, 0x8c, 0xf8,
	0x65, 0x8e, 0x18, 0x8b, 0x9b, 0xba, 0x8b, 0xf2, 0x1c, 0x16, 0xa6, 0x6e, 0x7a, 0x28, 0xee, 0x36,
	0xeb, 0x7e, 0xc8, 0xda, 0xbd, 0xd9, 0x08, 0xa2, 0xdc, 0xef, 0x40, 0x8d, 0xbf, 0x85, 0x74, 0x4c,
	0x79, 0x00, 0x9f, 0x44, 0xa4, 0x6b, 0x3d, 0x3a, 0x50, 0x92, 0x25, 0xf1, 0x0c, 0x4f, 0xf1, 0x4d,
	0x54, 0x2d, 0x3c, 0x8e, 0x1a, 0xd7, 0xe9, 0x90, 0x3d, 0x6a, 0x5c, 0xd3, 0x22, 0xf1, 0x7c, 0x0a,
	0x95, 0xa7, 0x34, 0x94, 0x01, 0x67, 0x94, 0x4c, 0x93, 0x88, 0x40, 0xb3, 0x96, 0x12, 0x26, 0x88,
	0x7c, 0x8c, 0x59, 0x55, 0xf0, 0xb4, 0x15, 0xad, 0x16, 0x3d, 0xeb, 0x7c, 0x02, 0xce, 0xa4, 0x0f,
	0x2d, 0x84, 0xa2, 0x6a, 0xf8, 0x74, 0xc8, 0x4c, 0xd5, 0xf0, 0xb4, 0x88, 0x8b, 0xdf, 0xe6, 0x14,
	0xd0, 0x42, 0xdc, 0x44, 0x62, 0x53, 0x32, 0x1a, 0x8e, 0x6a, 0xbe, 0x8e, 0xfe, 0x04, 0xa0, 0x1b,
	0x7a, 0xe3, 0x2d, 0x9b, 0x8e, 0x3c, 0x37, 0xe2, 0x09, 0x51, 0x70, 0x95, 0x68, 0x21, 0x6a, 0x11,
	0x56, 0xc8, 0x17, 0x9a, 0x3c, 0x19, 0x1b, 0x12, 0xa5, 0x15, 0xcc, 0x8a, 0xbf, 0xa2, 0xba, 0x93,
	0x12, 0x83, 0x05, 0x99, 0x04, 0x44, 0x17, 0x69, 0x94, 0x74, 0x38, 0x75, 0x47, 0x47, 0xad, 0xf5,
	0x94, 0x5b, 0x37, 0xdf, 0x82, 0x72, 0x74, 0x03, 0x61, 0x35, 0x8a, 0xe7, 0x1a, 0xbb, 0xaf, 0xa0,
	0xb8, 0xf7, 0xb4, 0xf7, 0xff, 0x3e, 0x2c, 0xf2, 0xe6, 0xa8, 0xed, 0x0f, 0x43, 0x80, 0xa8, 0x27,
	0x7d, 0xa7, 0xdd, 0xee, 0xd5, 0xfa, 0x49, 0x73, 0x1e, 0x67, 0xeb, 0x67, 0xca, 0x09, 0x59, 0xad,
	0x9f, 0x59, 0x5e, 0xe5, 0x6a, 0xfd, 0xcc, 0xf6, 0x5f, 0xde, 0x87, 0xc5, 0x14, 0x77, 0x62, 0x22,
	0xb5, 0xae, 0xd9, 0xae, 0xc6, 0x6b, 0xa9, 0x6e, 0xa7, 0xa4, 0x07, 0xab, 0x3c, 0x4f, 0x6b, 0x38,
	0x4c, 0x78, 0xaf, 0xbe, 0xa1, 0x65, 0x48, 0xf1, 0xc8, 0x8d, 0x89, 0x32, 0x09, 0xaf, 0xdc, 0x7d,
	0x68, 0x24, 0x1d, 0x3f, 0xc9, 0x6c, 0xf4, 0x35, 0x49, 0x97, 0x59, 0xce, 0xa2, 0xe4, 0xb9, 0x72,
	0x3f, 0x4d, 0xb4, 0xf1, 0x6e, 0xf4, 0x12, 0x7d, 0xaa, 0xb3, 0xac, 0x52, 0x72, 0x53, 0xbd, 0x57,
	0xc9, 0xf7, 0x60, 0x35, 0x39, 0xa3, 0x65, 0xc9, 0xf7, 0xd2, 0xc8, 0x35, 0x53, 0x94, 0x8b, 0x77,
	0xe8, 0x51, 0x86, 0x7c, 0x1b, 0xe6, 0xcc, 0xf8, 0x76, 0x37, 0xed, 0xe6, 0xb4, 0xb6, 0x96, 0x96,
	0x14, 0x69, 0x4c, 0x91, 0x87, 0x91, 0x5a, 0x13, 0x53, 0x9e, 0x48, 0xaa, 0x15, 0x29, 0xee, 0x48,
	0x9f, 0x43, 0x2d, 0xe6, 0x60, 0xa4, 0x84, 0xae, 0x34, 0x77, 0x24, 0x45, 0xa9, 0x74, 0x9f, 0x24,
	0x0b, 0x96, 0xd2, 0xdc, 0x6b, 0x88, 0xa1, 0x11, 0x61, 0x86, 0x6f, 0xd2, 0xda, 0x5b, 0xd7, 0xe2,
	0x44, 0x0b, 0x58, 0xf9, 0xd8, 0xa8, 0x05, 0x9c, 0xf4, 0xce, 0x51, 0x0b, 0x78, 0xda, 0x1d, 0xe7,
	0x73, 0xa8, 0xc5, 0xbc, 0x61, 0x54, 0x67, 0xd3, 0x9c, 0x71, 0x54, 0x67, 0xd3, 0x1d, 0x68, 0xb6,
	0xa0, 0xa2, 0x9d, 0xf6, 0xab, 0x11, 0x9c, 0xf6, 0x18, 0x50, 0x23, 0x98, 0xe6, 0x1c, 0x70, 0x08,
	0xf3, 0x09, 0x97, 0x1a, 0xa5, 0xc0, 0xa4, 0x3b, 0xe1, 0x28, 0x05, 0x66, 0x96, 0x27, 0xce, 0x16,
	0x54, 0xf4, 0xd2, 0x6e, 0x4e, 0xbb, 0xba, 0x4c, 0xc9, 0x33, 0x29, 0xa5, 0x3c, 0x87, 0x85, 0x29,
	0xd7, 0x89, 0x48, 0x71, 0x99, 0xe1, 0xc2, 0xa2, 0x58, 0xd3, 0x6c, 0xaf, 0x0b, 0x3e, 0xdd, 0x34,
	0x35, 0x5f, 0x9b, 0x6e, 0xd3, 0x9a, 0xfe, 0xed, 0xf4, 0xc4, 0x48, 0xc1, 0x8e, 0x1b, 0x27, 0xc8,
	0xed, 0x54, 0x9b, 0x45, 0x52, 0x94, 0x9e, 0x71, 0x7c, 0x7c, 0x0c, 0xcb, 0xa9, 0xa7, 0xa4, 0xe4,
	0x2d, 0x25, 0x70, 0xce, 0x3e, 0xa1, 0x5d, 0xbb, 0x7f, 0x3d, 0x52, 0x54, 0xc7, 0xd3, 0x6b, 0xeb,
	0x78, 0xfa, 0x3a, 0x75, 0x5c, 0x7f, 0x12, 0xdd, 0x85, 0x46, 0xf2, 0x84, 0x56, 0xb1, 0xe9, 0x19,
	0xa7, 0xbc, 0x8a, 0xb9, 0xce, 0x3c, 0xda, 0x15, 0x86, 0x9d, 0x6d, 0xdf, 0x1b, 0xc5, 0x0c, 0x3b,
	0xda, 0x79, 0x6e, 0xcc, 0xb0, 0x13, 0x3b, 0x21, 0xb5, 0x60, 0x29, 0xed, 0x04, 0x4a, 0xf1, 0x85,
	0x6b, 0x4e, 0x49, 0x15, 0x5f, 0xb8, 0xee, 0x08, 0x6b, 0xe3, 0xfe, 0x4f, 0x1b, 0xa7, 0x4e, 0x78,
	0x36, 0x39, 0x5e, 0xef, 0x7b, 0xa3, 0x0f, 0xc6, 0x2f, 0xc3, 0xf7, 0xfb, 0x76, 0x70, 0xc6, 0x7e,
	0x0c, 0x3e, 0x18, 0xba, 0xec, 0x9f, 0x3f, 0xee, 0x1f, 0xcf, 0x8d, 0x7d, 0x2f, 0xf4, 0xbe, 0xf6,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x82, 0xb1, 0x8a, 0x0c, 0xa2, 0x00, 0x00,
}
